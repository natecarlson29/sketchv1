{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/VectorTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nvar VectorTile = /** @class */function (_super) {\n  __extends(VectorTile, _super);\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Data source url.\n   * @param {import(\"./format/Feature.js\").default} format Feature format.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [opt_options] Tile options.\n   */\n  function VectorTile(tileCoord, state, src, format, tileLoadFunction, opt_options) {\n    var _this = _super.call(this, tileCoord, state, opt_options) || this;\n    /**\n     * Extent of this tile; set by the source.\n     * @type {import(\"./extent.js\").Extent}\n     */\n    _this.extent = null;\n    /**\n     * @private\n     * @type {import(\"./format/Feature.js\").default}\n     */\n    _this.format_ = format;\n    /**\n     * @private\n     * @type {Array<import(\"./Feature.js\").default>}\n     */\n    _this.features_ = null;\n    /**\n     * @private\n     * @type {import(\"./featureloader.js\").FeatureLoader}\n     */\n    _this.loader_;\n    /**\n     * Feature projection of this tile; set by the source.\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    _this.projection = null;\n    /**\n     * Resolution of this tile; set by the source.\n     * @type {number}\n     */\n    _this.resolution;\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    _this.tileLoadFunction_ = tileLoadFunction;\n    /**\n     * @private\n     * @type {string}\n     */\n    _this.url_ = src;\n    _this.key = src;\n    return _this;\n  }\n  /**\n   * Get the feature format assigned for reading this tile's features.\n   * @return {import(\"./format/Feature.js\").default} Feature format.\n   * @api\n   */\n  VectorTile.prototype.getFormat = function () {\n    return this.format_;\n  };\n  /**\n   * Get the features for this tile. Geometries will be in the view projection.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  VectorTile.prototype.getFeatures = function () {\n    return this.features_;\n  };\n  /**\n   * Load not yet loaded URI.\n   */\n  VectorTile.prototype.load = function () {\n    if (this.state == TileState.IDLE) {\n      this.setState(TileState.LOADING);\n      this.tileLoadFunction_(this, this.url_);\n      if (this.loader_) {\n        this.loader_(this.extent, this.resolution, this.projection);\n      }\n    }\n  };\n  /**\n   * Handler for successful tile load.\n   * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n   * @param {import(\"./proj/Projection.js\").default} dataProjection Data projection.\n   */\n  VectorTile.prototype.onLoad = function (features, dataProjection) {\n    this.setFeatures(features);\n  };\n  /**\n   * Handler for tile load errors.\n   */\n  VectorTile.prototype.onError = function () {\n    this.setState(TileState.ERROR);\n  };\n  /**\n   * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n   * Sets the features for the tile.\n   * @param {Array<import(\"./Feature.js\").default>} features Features.\n   * @api\n   */\n  VectorTile.prototype.setFeatures = function (features) {\n    this.features_ = features;\n    this.setState(TileState.LOADED);\n  };\n  /**\n   * Set the feature loader for reading this tile's features.\n   * @param {import(\"./featureloader.js\").FeatureLoader} loader Feature loader.\n   * @api\n   */\n  VectorTile.prototype.setLoader = function (loader) {\n    this.loader_ = loader;\n  };\n  return VectorTile;\n}(Tile);\nexport default VectorTile;","map":{"version":3,"names":["Tile","TileState","VectorTile","_super","__extends","tileCoord","state","src","format","tileLoadFunction","opt_options","_this","call","extent","format_","features_","loader_","projection","resolution","tileLoadFunction_","url_","key","prototype","getFormat","getFeatures","load","IDLE","setState","LOADING","onLoad","features","dataProjection","setFeatures","onError","ERROR","LOADED","setLoader","loader"],"sources":["C:\\Users\\ncarl\\Desktop\\sketch\\openlayers-react-map\\node_modules\\ol\\src\\VectorTile.js"],"sourcesContent":["/**\n * @module ol/VectorTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\n\nclass VectorTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Data source url.\n   * @param {import(\"./format/Feature.js\").default} format Feature format.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [opt_options] Tile options.\n   */\n  constructor(tileCoord, state, src, format, tileLoadFunction, opt_options) {\n    super(tileCoord, state, opt_options);\n\n    /**\n     * Extent of this tile; set by the source.\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = null;\n\n    /**\n     * @private\n     * @type {import(\"./format/Feature.js\").default}\n     */\n    this.format_ = format;\n\n    /**\n     * @private\n     * @type {Array<import(\"./Feature.js\").default>}\n     */\n    this.features_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./featureloader.js\").FeatureLoader}\n     */\n    this.loader_;\n\n    /**\n     * Feature projection of this tile; set by the source.\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection = null;\n\n    /**\n     * Resolution of this tile; set by the source.\n     * @type {number}\n     */\n    this.resolution;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = src;\n\n    this.key = src;\n  }\n\n  /**\n   * Get the feature format assigned for reading this tile's features.\n   * @return {import(\"./format/Feature.js\").default} Feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * Get the features for this tile. Geometries will be in the view projection.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.setState(TileState.LOADING);\n      this.tileLoadFunction_(this, this.url_);\n      if (this.loader_) {\n        this.loader_(this.extent, this.resolution, this.projection);\n      }\n    }\n  }\n\n  /**\n   * Handler for successful tile load.\n   * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n   * @param {import(\"./proj/Projection.js\").default} dataProjection Data projection.\n   */\n  onLoad(features, dataProjection) {\n    this.setFeatures(features);\n  }\n\n  /**\n   * Handler for tile load errors.\n   */\n  onError() {\n    this.setState(TileState.ERROR);\n  }\n\n  /**\n   * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n   * Sets the features for the tile.\n   * @param {Array<import(\"./Feature.js\").default>} features Features.\n   * @api\n   */\n  setFeatures(features) {\n    this.features_ = features;\n    this.setState(TileState.LOADED);\n  }\n\n  /**\n   * Set the feature loader for reading this tile's features.\n   * @param {import(\"./featureloader.js\").FeatureLoader} loader Feature loader.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n}\n\nexport default VectorTile;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;;;AAGA,OAAOA,IAAI,MAAM,WAAW;AAC5B,OAAOC,SAAS,MAAM,gBAAgB;AAEtC,IAAAC,UAAA,0BAAAC,MAAA;EAAyBC,SAAA,CAAAF,UAAA,EAAAC,MAAA;EACvB;;;;;;;;EAQA,SAAAD,WAAYG,SAAS,EAAEC,KAAK,EAAEC,GAAG,EAAEC,MAAM,EAAEC,gBAAgB,EAAEC,WAAW;IAAxE,IAAAC,KAAA,GACER,MAAA,CAAAS,IAAA,OAAMP,SAAS,EAAEC,KAAK,EAAEI,WAAW,CAAC;IAEpC;;;;IAIAC,KAAI,CAACE,MAAM,GAAG,IAAI;IAElB;;;;IAIAF,KAAI,CAACG,OAAO,GAAGN,MAAM;IAErB;;;;IAIAG,KAAI,CAACI,SAAS,GAAG,IAAI;IAErB;;;;IAIAJ,KAAI,CAACK,OAAO;IAEZ;;;;IAIAL,KAAI,CAACM,UAAU,GAAG,IAAI;IAEtB;;;;IAIAN,KAAI,CAACO,UAAU;IAEf;;;;IAIAP,KAAI,CAACQ,iBAAiB,GAAGV,gBAAgB;IAEzC;;;;IAIAE,KAAI,CAACS,IAAI,GAAGb,GAAG;IAEfI,KAAI,CAACU,GAAG,GAAGd,GAAG;;EAChB;EAEA;;;;;EAKAL,UAAA,CAAAoB,SAAA,CAAAC,SAAS,GAAT;IACE,OAAO,IAAI,CAACT,OAAO;EACrB,CAAC;EAED;;;;;EAKAZ,UAAA,CAAAoB,SAAA,CAAAE,WAAW,GAAX;IACE,OAAO,IAAI,CAACT,SAAS;EACvB,CAAC;EAED;;;EAGAb,UAAA,CAAAoB,SAAA,CAAAG,IAAI,GAAJ;IACE,IAAI,IAAI,CAACnB,KAAK,IAAIL,SAAS,CAACyB,IAAI,EAAE;MAChC,IAAI,CAACC,QAAQ,CAAC1B,SAAS,CAAC2B,OAAO,CAAC;MAChC,IAAI,CAACT,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAACC,IAAI,CAAC;MACvC,IAAI,IAAI,CAACJ,OAAO,EAAE;QAChB,IAAI,CAACA,OAAO,CAAC,IAAI,CAACH,MAAM,EAAE,IAAI,CAACK,UAAU,EAAE,IAAI,CAACD,UAAU,CAAC;;;EAGjE,CAAC;EAED;;;;;EAKAf,UAAA,CAAAoB,SAAA,CAAAO,MAAM,GAAN,UAAOC,QAAQ,EAAEC,cAAc;IAC7B,IAAI,CAACC,WAAW,CAACF,QAAQ,CAAC;EAC5B,CAAC;EAED;;;EAGA5B,UAAA,CAAAoB,SAAA,CAAAW,OAAO,GAAP;IACE,IAAI,CAACN,QAAQ,CAAC1B,SAAS,CAACiC,KAAK,CAAC;EAChC,CAAC;EAED;;;;;;EAMAhC,UAAA,CAAAoB,SAAA,CAAAU,WAAW,GAAX,UAAYF,QAAQ;IAClB,IAAI,CAACf,SAAS,GAAGe,QAAQ;IACzB,IAAI,CAACH,QAAQ,CAAC1B,SAAS,CAACkC,MAAM,CAAC;EACjC,CAAC;EAED;;;;;EAKAjC,UAAA,CAAAoB,SAAA,CAAAc,SAAS,GAAT,UAAUC,MAAM;IACd,IAAI,CAACrB,OAAO,GAAGqB,MAAM;EACvB,CAAC;EACH,OAAAnC,UAAC;AAAD,CAAC,CAjIwBF,IAAI;AAmI7B,eAAeE,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}