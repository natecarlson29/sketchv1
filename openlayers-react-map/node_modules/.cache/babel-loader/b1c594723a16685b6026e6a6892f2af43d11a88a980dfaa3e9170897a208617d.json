{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport { createCanvasContext2D } from './dom.js';\nimport { listenImage } from './Image.js';\nvar ImageTile = /** @class */function (_super) {\n  __extends(ImageTile, _super);\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [opt_options] Tile options.\n   */\n  function ImageTile(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n    var _this = _super.call(this, tileCoord, state, opt_options) || this;\n    /**\n     * @private\n     * @type {?string}\n     */\n    _this.crossOrigin_ = crossOrigin;\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    _this.src_ = src;\n    _this.key = src;\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    _this.image_ = new Image();\n    if (crossOrigin !== null) {\n      _this.image_.crossOrigin = crossOrigin;\n    }\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    _this.unlisten_ = null;\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    _this.tileLoadFunction_ = tileLoadFunction;\n    return _this;\n  }\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  ImageTile.prototype.getImage = function () {\n    return this.image_;\n  };\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  ImageTile.prototype.setImage = function (element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  };\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  ImageTile.prototype.handleImageError_ = function () {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  };\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  ImageTile.prototype.handleImageLoad_ = function () {\n    var image = /** @type {HTMLImageElement} */this.image_;\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  };\n  /**\n   * Load not yet loaded URI.\n   * @api\n   */\n  ImageTile.prototype.load = function () {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n    }\n  };\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  ImageTile.prototype.unlistenImage_ = function () {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  };\n  return ImageTile;\n}(Tile);\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  var ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\nexport default ImageTile;","map":{"version":3,"names":["Tile","TileState","createCanvasContext2D","listenImage","ImageTile","_super","__extends","tileCoord","state","src","crossOrigin","tileLoadFunction","opt_options","_this","call","crossOrigin_","src_","key","image_","Image","unlisten_","tileLoadFunction_","prototype","getImage","setImage","element","LOADED","unlistenImage_","changed","handleImageError_","ERROR","getBlankImage","handleImageLoad_","image","naturalWidth","naturalHeight","EMPTY","load","IDLE","LOADING","bind","ctx","fillStyle","fillRect","canvas"],"sources":["C:\\Users\\ncarl\\Desktop\\sketch\\openlayers-react-map\\node_modules\\ol\\src\\ImageTile.js"],"sourcesContent":["/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [opt_options] Tile options.\n   */\n  constructor(\n    tileCoord,\n    state,\n    src,\n    crossOrigin,\n    tileLoadFunction,\n    opt_options\n  ) {\n    super(tileCoord, state, opt_options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}