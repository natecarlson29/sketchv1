{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ncarl\\\\Desktop\\\\sketch\\\\openlayers-react-map\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport 'ol/ol.css';\nimport Map from 'ol/Map';\nimport View from 'ol/View';\nimport TileLayer from 'ol/layer/Tile';\nimport OSM from 'ol/source/OSM';\nimport VectorLayer from 'ol/layer/Vector';\nimport VectorSource from 'ol/source/Vector';\nimport Draw from 'ol/interaction/Draw';\nimport Overlay from 'ol/Overlay';\nimport { fromLonLat } from 'ol/proj';\nimport { getLength } from 'ol/sphere';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  useEffect(() => {\n    const vectorSource = new VectorSource();\n    const vectorLayer = new VectorLayer({\n      source: vectorSource\n    });\n    const map = new Map({\n      target: 'map',\n      layers: [new TileLayer({\n        source: new OSM()\n      }), vectorLayer],\n      view: new View({\n        center: fromLonLat([-95.87, 40.84]),\n        zoom: 14\n      })\n    });\n    const draw = new Draw({\n      source: vectorSource,\n      type: 'Polygon'\n    });\n    map.addInteraction(draw);\n    let sketch;\n    let segmentOverlays = [];\n    function formatLength(line) {\n      const lengthMeters = getLength(line);\n      const lengthFeet = lengthMeters * 3.28084;\n      return lengthFeet > 5280 ? (lengthFeet / 5280).toFixed(2) + ' mi' : lengthFeet.toFixed(2) + ' ft';\n    }\n    draw.on('drawstart', function (evt) {\n      sketch = evt.feature;\n      segmentOverlays.forEach(overlay => map.removeOverlay(overlay));\n      segmentOverlays = [];\n      const geom = sketch.getGeometry();\n      geom.on('change', function () {\n        segmentOverlays.forEach(overlay => map.removeOverlay(overlay));\n        segmentOverlays = [];\n        const coords = geom.getCoordinates()[0];\n        for (let i = 1; i < coords.length; i++) {\n          const c1 = coords[i - 1];\n          const c2 = coords[i];\n          const line = new LineString([c1, c2]);\n          const length = formatLength(line);\n\n          // Midpoint for label\n          const midpoint = [(c1[0] + c2[0]) / 2, (c1[1] + c2[1]) / 2];\n          const tooltip = document.createElement('div');\n          tooltip.className = 'segment-tooltip';\n          tooltip.style.background = 'white';\n          tooltip.style.border = '1px solid black';\n          tooltip.style.padding = '2px 4px';\n          tooltip.style.position = 'relative';\n          tooltip.style.whiteSpace = 'nowrap';\n          tooltip.innerHTML = length;\n          const overlay = new Overlay({\n            element: tooltip,\n            position: midpoint,\n            positioning: 'center-center',\n            stopEvent: false\n          });\n          map.addOverlay(overlay);\n          segmentOverlays.push(overlay);\n        }\n      });\n    });\n    draw.on('drawend', function () {\n      sketch = null;\n      // Overlays remain after drawing\n    });\n    return () => {\n      map.setTarget(null);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"map\",\n      style: {\n        width: '100vw',\n        height: '100vh'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n          .segment-tooltip {\n            font-size: 12px;\n            pointer-events: none;\n          }\n        `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","Map","View","TileLayer","OSM","VectorLayer","VectorSource","Draw","Overlay","fromLonLat","getLength","jsxDEV","_jsxDEV","App","_s","vectorSource","vectorLayer","source","map","target","layers","view","center","zoom","draw","type","addInteraction","sketch","segmentOverlays","formatLength","line","lengthMeters","lengthFeet","toFixed","on","evt","feature","forEach","overlay","removeOverlay","geom","getGeometry","coords","getCoordinates","i","length","c1","c2","LineString","midpoint","tooltip","document","createElement","className","style","background","border","padding","position","whiteSpace","innerHTML","element","positioning","stopEvent","addOverlay","push","setTarget","children","id","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ncarl/Desktop/sketch/openlayers-react-map/src/App.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport 'ol/ol.css';\nimport Map from 'ol/Map';\nimport View from 'ol/View';\nimport TileLayer from 'ol/layer/Tile';\nimport OSM from 'ol/source/OSM';\nimport VectorLayer from 'ol/layer/Vector';\nimport VectorSource from 'ol/source/Vector';\nimport Draw from 'ol/interaction/Draw';\nimport Overlay from 'ol/Overlay';\nimport { fromLonLat } from 'ol/proj';\nimport { getLength } from 'ol/sphere';\n\nconst App = () => {\n  useEffect(() => {\n    const vectorSource = new VectorSource();\n\n    const vectorLayer = new VectorLayer({\n      source: vectorSource,\n    });\n\n    const map = new Map({\n      target: 'map',\n      layers: [\n        new TileLayer({\n          source: new OSM(),\n        }),\n        vectorLayer,\n      ],\n      view: new View({\n        center: fromLonLat([-95.87, 40.84]),\n        zoom: 14\n      }),\n    });\n\n    const draw = new Draw({\n      source: vectorSource,\n      type: 'Polygon',\n    });\n    map.addInteraction(draw);\n\n    let sketch;\n    let segmentOverlays = [];\n\n    function formatLength(line) {\n      const lengthMeters = getLength(line);\n      const lengthFeet = lengthMeters * 3.28084;\n      return lengthFeet > 5280\n        ? (lengthFeet / 5280).toFixed(2) + ' mi'\n        : lengthFeet.toFixed(2) + ' ft';\n    }\n\n    draw.on('drawstart', function (evt) {\n      sketch = evt.feature;\n      segmentOverlays.forEach(overlay => map.removeOverlay(overlay));\n      segmentOverlays = [];\n\n      const geom = sketch.getGeometry();\n      geom.on('change', function () {\n        segmentOverlays.forEach(overlay => map.removeOverlay(overlay));\n        segmentOverlays = [];\n\n        const coords = geom.getCoordinates()[0];\n        for (let i = 1; i < coords.length; i++) {\n          const c1 = coords[i - 1];\n          const c2 = coords[i];\n          const line = new LineString([c1, c2]);\n          const length = formatLength(line);\n\n          // Midpoint for label\n          const midpoint = [\n            (c1[0] + c2[0]) / 2,\n            (c1[1] + c2[1]) / 2\n          ];\n\n          const tooltip = document.createElement('div');\n          tooltip.className = 'segment-tooltip';\n          tooltip.style.background = 'white';\n          tooltip.style.border = '1px solid black';\n          tooltip.style.padding = '2px 4px';\n          tooltip.style.position = 'relative';\n          tooltip.style.whiteSpace = 'nowrap';\n          tooltip.innerHTML = length;\n\n          const overlay = new Overlay({\n            element: tooltip,\n            position: midpoint,\n            positioning: 'center-center',\n            stopEvent: false,\n          });\n          map.addOverlay(overlay);\n          segmentOverlays.push(overlay);\n        }\n      });\n    });\n\n    draw.on('drawend', function () {\n      sketch = null;\n      // Overlays remain after drawing\n    });\n\n    return () => {\n      map.setTarget(null);\n    };\n  }, []);\n\n  return (\n    <div>\n      <div id=\"map\" style={{ width: '100vw', height: '100vh' }}></div>\n      <style>\n        {`\n          .segment-tooltip {\n            font-size: 12px;\n            pointer-events: none;\n          }\n        `}\n      </style>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}