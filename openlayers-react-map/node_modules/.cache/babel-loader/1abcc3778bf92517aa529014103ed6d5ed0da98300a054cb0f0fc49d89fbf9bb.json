{"ast":null,"code":"/**\n * @module ol/geom/flat/inflate\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [opt_coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n  var coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [opt_coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n  var coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  var i = 0;\n  for (var j = 0, jj = ends.length; j < jj; ++j) {\n    var end = ends[j];\n    coordinatess[i++] = inflateCoordinates(flatCoordinates, offset, end, stride, coordinatess[i]);\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [opt_coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n  var coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  var i = 0;\n  for (var j = 0, jj = endss.length; j < jj; ++j) {\n    var ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(flatCoordinates, offset, ends, stride, coordinatesss[i]);\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}","map":{"version":3,"names":["inflateCoordinates","flatCoordinates","offset","end","stride","opt_coordinates","coordinates","undefined","i","j","slice","length","inflateCoordinatesArray","ends","opt_coordinatess","coordinatess","jj","inflateMultiCoordinatesArray","endss","opt_coordinatesss","coordinatesss"],"sources":["C:\\Users\\ncarl\\Desktop\\sketch\\openlayers-react-map\\node_modules\\ol\\src\\geom\\flat\\inflate.js"],"sourcesContent":["/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [opt_coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_coordinates\n) {\n  const coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [opt_coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_coordinatess\n) {\n  const coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [opt_coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_coordinatesss\n) {\n  const coordinatesss =\n    opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      coordinatesss[i]\n    );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n"],"mappings":"AAAA;;;AAIA;;;;;;;;AAQA,OAAM,SAAUA,kBAAkBA,CAChCC,eAAe,EACfC,MAAM,EACNC,GAAG,EACHC,MAAM,EACNC,eAAe;EAEf,IAAMC,WAAW,GAAGD,eAAe,KAAKE,SAAS,GAAGF,eAAe,GAAG,EAAE;EACxE,IAAIG,CAAC,GAAG,CAAC;EACT,KAAK,IAAIC,CAAC,GAAGP,MAAM,EAAEO,CAAC,GAAGN,GAAG,EAAEM,CAAC,IAAIL,MAAM,EAAE;IACzCE,WAAW,CAACE,CAAC,EAAE,CAAC,GAAGP,eAAe,CAACS,KAAK,CAACD,CAAC,EAAEA,CAAC,GAAGL,MAAM,CAAC;;EAEzDE,WAAW,CAACK,MAAM,GAAGH,CAAC;EACtB,OAAOF,WAAW;AACpB;AAEA;;;;;;;;AAQA,OAAM,SAAUM,uBAAuBA,CACrCX,eAAe,EACfC,MAAM,EACNW,IAAI,EACJT,MAAM,EACNU,gBAAgB;EAEhB,IAAMC,YAAY,GAAGD,gBAAgB,KAAKP,SAAS,GAAGO,gBAAgB,GAAG,EAAE;EAC3E,IAAIN,CAAC,GAAG,CAAC;EACT,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEO,EAAE,GAAGH,IAAI,CAACF,MAAM,EAAEF,CAAC,GAAGO,EAAE,EAAE,EAAEP,CAAC,EAAE;IAC7C,IAAMN,GAAG,GAAGU,IAAI,CAACJ,CAAC,CAAC;IACnBM,YAAY,CAACP,CAAC,EAAE,CAAC,GAAGR,kBAAkB,CACpCC,eAAe,EACfC,MAAM,EACNC,GAAG,EACHC,MAAM,EACNW,YAAY,CAACP,CAAC,CAAC,CAChB;IACDN,MAAM,GAAGC,GAAG;;EAEdY,YAAY,CAACJ,MAAM,GAAGH,CAAC;EACvB,OAAOO,YAAY;AACrB;AAEA;;;;;;;;;AASA,OAAM,SAAUE,4BAA4BA,CAC1ChB,eAAe,EACfC,MAAM,EACNgB,KAAK,EACLd,MAAM,EACNe,iBAAiB;EAEjB,IAAMC,aAAa,GACjBD,iBAAiB,KAAKZ,SAAS,GAAGY,iBAAiB,GAAG,EAAE;EAC1D,IAAIX,CAAC,GAAG,CAAC;EACT,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEO,EAAE,GAAGE,KAAK,CAACP,MAAM,EAAEF,CAAC,GAAGO,EAAE,EAAE,EAAEP,CAAC,EAAE;IAC9C,IAAMI,IAAI,GAAGK,KAAK,CAACT,CAAC,CAAC;IACrBW,aAAa,CAACZ,CAAC,EAAE,CAAC,GAAGI,uBAAuB,CAC1CX,eAAe,EACfC,MAAM,EACNW,IAAI,EACJT,MAAM,EACNgB,aAAa,CAACZ,CAAC,CAAC,CACjB;IACDN,MAAM,GAAGW,IAAI,CAACA,IAAI,CAACF,MAAM,GAAG,CAAC,CAAC;;EAEhCS,aAAa,CAACT,MAAM,GAAGH,CAAC;EACxB,OAAOY,aAAa;AACtB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}