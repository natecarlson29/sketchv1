{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ncarl\\\\Desktop\\\\sketch\\\\openlayers-react-map\\\\src\\\\map-actions\\\\FlipHorizontal.jsx\";\nimport React from 'react';\nimport Polygon from 'ol/geom/Polygon';\nimport LineString from 'ol/geom/LineString';\n\n// Helper to clear overlays for a specific feature\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction clearPolygonOverlays(feature, mapRef) {\n  if (feature && feature._segmentOverlays) {\n    feature._segmentOverlays.forEach(overlay => {\n      if (mapRef.current) mapRef.current.removeOverlay(overlay);\n    });\n    feature._segmentOverlays = [];\n  }\n}\n\n// Flip horizontally and remark segments/lines\nfunction flipFeatureHorizontally(feature, mapRef) {\n  clearPolygonOverlays(feature, mapRef);\n  const geom = feature.getGeometry();\n  let coords, xs, axis, flipped;\n  if (geom instanceof Polygon) {\n    coords = geom.getCoordinates()[0];\n    xs = coords.map(c => c[0]);\n    axis = (Math.min(...xs) + Math.max(...xs)) / 2;\n    flipped = coords.map(([x, y]) => [axis - (x - axis), y]);\n    // Ensure closed ring for polygons\n    if (flipped.length > 1 && (flipped[0][0] !== flipped[flipped.length - 1][0] || flipped[0][1] !== flipped[flipped.length - 1][1])) {\n      flipped[flipped.length - 1] = [...flipped[0]];\n    }\n    geom.setCoordinates([flipped]);\n    // Remark polygon segments\n    if (mapRef.current && mapRef.current.createSegmentOverlays) {\n      mapRef.current.createSegmentOverlays(feature, mapRef);\n    }\n    return {\n      prevCoords: coords,\n      newCoords: flipped\n    };\n  } else if (geom instanceof LineString) {\n    coords = geom.getCoordinates();\n    xs = coords.map(c => c[0]);\n    axis = (Math.min(...xs) + Math.max(...xs)) / 2;\n    flipped = coords.map(([x, y]) => [axis - (x - axis), y]);\n    geom.setCoordinates(flipped);\n    // Remark line segments\n    if (mapRef.current && mapRef.current.createSegmentOverlays) {\n      mapRef.current.createSegmentOverlays(feature, mapRef);\n    }\n    return {\n      prevCoords: coords,\n      newCoords: flipped\n    };\n  }\n  return null;\n}\nexport default function FlipHorizButton({\n  selectedFeature,\n  mapRef,\n  addHistoryAction\n}) {\n  function handleFlipHoriz() {\n    if (selectedFeature) {\n      const geom = selectedFeature.getGeometry();\n      let prevCoords, newCoords;\n      if (geom instanceof Polygon) {\n        prevCoords = geom.getCoordinates()[0].map(c => [...c]);\n      } else if (geom instanceof LineString) {\n        prevCoords = geom.getCoordinates().map(c => [...c]);\n      }\n      const result = flipFeatureHorizontally(selectedFeature, mapRef);\n      if (result && addHistoryAction) {\n        addHistoryAction({\n          type: 'flip-horizontal',\n          featureId: selectedFeature.getId && selectedFeature.getId(),\n          prevCoords: prevCoords,\n          newCoords: result.newCoords\n        });\n      }\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-button\",\n    onClick: handleFlipHoriz,\n    children: \"FlipHoriz\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_c = FlipHorizButton;\nvar _c;\n$RefreshReg$(_c, \"FlipHorizButton\");","map":{"version":3,"names":["React","Polygon","LineString","jsxDEV","_jsxDEV","clearPolygonOverlays","feature","mapRef","_segmentOverlays","forEach","overlay","current","removeOverlay","flipFeatureHorizontally","geom","getGeometry","coords","xs","axis","flipped","getCoordinates","map","c","Math","min","max","x","y","length","setCoordinates","createSegmentOverlays","prevCoords","newCoords","FlipHorizButton","selectedFeature","addHistoryAction","handleFlipHoriz","result","type","featureId","getId","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ncarl/Desktop/sketch/openlayers-react-map/src/map-actions/FlipHorizontal.jsx"],"sourcesContent":["import React from 'react';\r\nimport Polygon from 'ol/geom/Polygon';\r\nimport LineString from 'ol/geom/LineString';\r\n\r\n// Helper to clear overlays for a specific feature\r\nfunction clearPolygonOverlays(feature, mapRef) {\r\n  if (feature && feature._segmentOverlays) {\r\n    feature._segmentOverlays.forEach(overlay => {\r\n      if (mapRef.current) mapRef.current.removeOverlay(overlay);\r\n    });\r\n    feature._segmentOverlays = [];\r\n  }\r\n}\r\n\r\n// Flip horizontally and remark segments/lines\r\nfunction flipFeatureHorizontally(feature, mapRef) {\r\n  clearPolygonOverlays(feature, mapRef);\r\n  const geom = feature.getGeometry();\r\n  let coords, xs, axis, flipped;\r\n\r\n  if (geom instanceof Polygon) {\r\n    coords = geom.getCoordinates()[0];\r\n    xs = coords.map(c => c[0]);\r\n    axis = (Math.min(...xs) + Math.max(...xs)) / 2;\r\n    flipped = coords.map(([x, y]) => [axis - (x - axis), y]);\r\n    // Ensure closed ring for polygons\r\n    if (\r\n      flipped.length > 1 &&\r\n      (flipped[0][0] !== flipped[flipped.length - 1][0] ||\r\n        flipped[0][1] !== flipped[flipped.length - 1][1])\r\n    ) {\r\n      flipped[flipped.length - 1] = [...flipped[0]];\r\n    }\r\n    geom.setCoordinates([flipped]);\r\n    // Remark polygon segments\r\n    if (mapRef.current && mapRef.current.createSegmentOverlays) {\r\n      mapRef.current.createSegmentOverlays(feature, mapRef);\r\n    }\r\n    return { prevCoords: coords, newCoords: flipped };\r\n  } else if (geom instanceof LineString) {\r\n    coords = geom.getCoordinates();\r\n    xs = coords.map(c => c[0]);\r\n    axis = (Math.min(...xs) + Math.max(...xs)) / 2;\r\n    flipped = coords.map(([x, y]) => [axis - (x - axis), y]);\r\n    geom.setCoordinates(flipped);\r\n    // Remark line segments\r\n    if (mapRef.current && mapRef.current.createSegmentOverlays) {\r\n      mapRef.current.createSegmentOverlays(feature, mapRef);\r\n    }\r\n    return { prevCoords: coords, newCoords: flipped };\r\n  }\r\n  return null;\r\n}\r\n\r\nexport default function FlipHorizButton({ selectedFeature, mapRef, addHistoryAction }) {\r\n  function handleFlipHoriz() {\r\n    if (selectedFeature) {\r\n      const geom = selectedFeature.getGeometry();\r\n      let prevCoords, newCoords;\r\n      if (geom instanceof Polygon) {\r\n        prevCoords = geom.getCoordinates()[0].map(c => [...c]);\r\n      } else if (geom instanceof LineString) {\r\n        prevCoords = geom.getCoordinates().map(c => [...c]);\r\n      }\r\n      const result = flipFeatureHorizontally(selectedFeature, mapRef);\r\n      if (result && addHistoryAction) {\r\n        addHistoryAction({\r\n          type: 'flip-horizontal',\r\n          featureId: selectedFeature.getId && selectedFeature.getId(),\r\n          prevCoords: prevCoords,\r\n          newCoords: result.newCoords,\r\n        });\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"map-button\" onClick={handleFlipHoriz}>\r\n      FlipHoriz\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}