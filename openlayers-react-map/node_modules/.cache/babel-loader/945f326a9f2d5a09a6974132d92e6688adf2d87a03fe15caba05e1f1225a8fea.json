{"ast":null,"code":"import _objectSpread from\"C:/Users/ncarl/Desktop/sketch/openlayers-react-map/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useEffect}from'react';import{Feature}from'ol';import LineString from'ol/geom/LineString';import{jsx as _jsx}from\"react/jsx-runtime\";const RightClick=_ref=>{let{mapRef,vectorSourceRef,contextMenu,setContextMenu,clearPolygonOverlays:clearOverlaysProp,addHistoryAction,drawing}=_ref;useEffect(()=>{function handleCustomContextMenu(e){const mapDiv=document.getElementById('map');if(!mapDiv||!mapRef.current||!vectorSourceRef.current)return;if(!mapDiv.contains(e.target))return;e.preventDefault();const pixel=mapRef.current.getEventPixel(e);const features=vectorSourceRef.current.getFeatures();let found=false;for(const feature of features){const geom=feature.getGeometry();let coords=null;if(geom.getType()==='Polygon'){coords=geom.getCoordinates()[0];}else if(geom.getType()==='LineString'){coords=geom.getCoordinates();}if(coords){// For polygons, skip last duplicate point\nconst len=geom.getType()==='Polygon'?coords.length-1:coords.length;for(let i=0;i<len;i++){const coordPixel=mapRef.current.getPixelFromCoordinate(coords[i]);if(Math.hypot(pixel[0]-coordPixel[0],pixel[1]-coordPixel[1])<8){setContextMenu({visible:true,x:e.clientX,y:e.clientY,type:'vertex',feature,index:i});found=true;break;}}}if(found)break;}if(!found){for(const feature of features){const geom=feature.getGeometry();let coords=null;if(geom.getType()==='Polygon'){coords=geom.getCoordinates()[0];}else if(geom.getType()==='LineString'){coords=geom.getCoordinates();}if(coords){// For polygons, skip last duplicate point\nconst len=geom.getType()==='Polygon'?coords.length-1:coords.length-1;for(let i=0;i<len;i++){const c1=mapRef.current.getPixelFromCoordinate(coords[i]);const c2=mapRef.current.getPixelFromCoordinate(coords[i+1]);const t=((pixel[0]-c1[0])*(c2[0]-c1[0])+(pixel[1]-c1[1])*(c2[1]-c1[1]))/((c2[0]-c1[0])**2+(c2[1]-c1[1])**2);if(t>=0&&t<=1){const proj=[c1[0]+t*(c2[0]-c1[0]),c1[1]+t*(c2[1]-c1[1])];if(Math.hypot(pixel[0]-proj[0],pixel[1]-proj[1])<8){setContextMenu({visible:true,x:e.clientX,y:e.clientY,type:'segment',feature,index:i});found=true;break;}}}}if(found)break;}}if(!found)setContextMenu({visible:true,x:e.clientX,y:e.clientY,type:null,feature:null,index:null});}document.addEventListener('contextmenu',handleCustomContextMenu);return()=>document.removeEventListener('contextmenu',handleCustomContextMenu);},[mapRef,vectorSourceRef,setContextMenu]);useEffect(()=>{function hideMenu(){setContextMenu(menu=>menu.visible?_objectSpread(_objectSpread({},menu),{},{visible:false}):menu);}window.addEventListener('click',hideMenu);return()=>window.removeEventListener('click',hideMenu);},[setContextMenu]);// Helper to deep clone coordinates\nconst cloneCoords=coords=>coords.map(c=>Array.isArray(c)?[...c]:c);const handleMenuAction=action=>{if(!contextMenu.feature)return;const geom=contextMenu.feature.getGeometry();let coords;if(geom.getType()==='Polygon'){const arr=geom.getCoordinates()[0];if(!Array.isArray(arr)||arr.length<3||!Array.isArray(arr[0]))return;coords=arr.map(c=>[c[0],c[1]]);}else if(geom.getType()==='LineString'){const arr=geom.getCoordinates();if(!Array.isArray(arr)||arr.length<2||!Array.isArray(arr[0]))return;coords=arr.map(c=>[c[0],c[1]]);}else{return;}// if (action === 'delete-vertex' && coords.length > 3) {\n//   const prevCoords = cloneCoords(coords);\n//   const newCoords = cloneCoords(coords);\n//   newCoords.splice(contextMenu.index, 1);\n//   newCoords[newCoords.length - 1] = newCoords[0];\n//   geom.setCoordinates([newCoords]);\n//   if (mapRef.current && mapRef.current.createSegmentOverlays) {\n//     mapRef.current.createSegmentOverlays(contextMenu.feature, mapRef);\n//   }\n//   setContextMenu({ ...contextMenu, visible: false });\n//   addHistoryAction({\n//     type: 'delete-vertex',\n//     featureId: contextMenu.feature.getId && contextMenu.feature.getId(),\n//     prevCoords,\n//     newCoords,\n//     index: contextMenu.index\n//   });\n// }\nif(action==='delete-vertex'){const prevCoords=cloneCoords(coords);const newCoords=cloneCoords(coords);newCoords.splice(contextMenu.index,1);if(geom.getType()==='Polygon'){// Only delete if at least 4 points remain (3 + closing point)\nif(newCoords.length<4)return;newCoords[newCoords.length-1]=newCoords[0];// close ring\ngeom.setCoordinates([newCoords]);}else if(geom.getType()==='LineString'){// Only delete if at least 2 points remain (minimum for a line)\nif(newCoords.length<2)return;geom.setCoordinates(newCoords);}else{return;}if(mapRef.current&&mapRef.current.createSegmentOverlays){mapRef.current.createSegmentOverlays(contextMenu.feature,mapRef);}setContextMenu(_objectSpread(_objectSpread({},contextMenu),{},{visible:false}));addHistoryAction({type:'delete-vertex',featureId:contextMenu.feature.getId&&contextMenu.feature.getId(),prevCoords,newCoords,index:contextMenu.index,geomType:geom.getType()});}if(action==='delete-segment'){if(clearOverlaysProp)clearOverlaysProp(contextMenu.feature);const prevCoords=cloneCoords(coords);if(geom.getType()==='Polygon'){if(coords.length>3&&coords[0][0]===coords[coords.length-1][0]&&coords[0][1]===coords[coords.length-1][1]){coords=coords.slice(0,coords.length-1);}const index=contextMenu.index;const part1=coords.slice(index+1);const part2=coords.slice(0,index+1);const newCoords=[...part1,...part2];if(vectorSourceRef.current&&vectorSourceRef.current.getFeatures().includes(contextMenu.feature)){vectorSourceRef.current.removeFeature(contextMenu.feature);}const lineFeature=new Feature(new LineString(newCoords));if(contextMenu.feature.getId){lineFeature.setId(contextMenu.feature.getId());}vectorSourceRef.current.addFeature(lineFeature);if(mapRef.current&&mapRef.current.createSegmentOverlays){mapRef.current.createSegmentOverlays(lineFeature,mapRef);}setContextMenu(_objectSpread(_objectSpread({},contextMenu),{},{visible:false}));addHistoryAction({type:'delete-segment',featureId:contextMenu.feature.getId&&contextMenu.feature.getId(),prevCoords,newCoords:cloneCoords(newCoords),index:contextMenu.index,geomType:'Polygon'});}else if(geom.getType()==='LineString'){// Only allow if at least 3 points (2 segments)\nif(coords.length<3)return;const index=contextMenu.index;// Remove the endpoint after the segment index\nconst newCoords=cloneCoords(coords);newCoords.splice(index+1,1);geom.setCoordinates(newCoords);if(mapRef.current&&mapRef.current.createSegmentOverlays){mapRef.current.createSegmentOverlays(contextMenu.feature,mapRef);}setContextMenu(_objectSpread(_objectSpread({},contextMenu),{},{visible:false}));addHistoryAction({type:'delete-segment',featureId:contextMenu.feature.getId&&contextMenu.feature.getId(),prevCoords,newCoords:cloneCoords(newCoords),index:contextMenu.index,geomType:'LineString'});}}// if (action === 'delete-segment' && coords.length > 3) {\n//   if (clearOverlaysProp) clearOverlaysProp(contextMenu.feature);\n//   const prevCoords = cloneCoords(coords);\n//   if (\n//     coords.length > 2 &&\n//     coords[0][0] === coords[coords.length - 1][0] &&\n//     coords[0][1] === coords[coords.length - 1][1]\n//   ) {\n//     coords = coords.slice(0, coords.length - 1);\n//   }\n//   const index = contextMenu.index;\n//   const part1 = coords.slice(index + 1);\n//   const part2 = coords.slice(0, index + 1);\n//   const newCoords = [...part1, ...part2];\n//   if (vectorSourceRef.current && vectorSourceRef.current.getFeatures().includes(contextMenu.feature)) {\n//     vectorSourceRef.current.removeFeature(contextMenu.feature);\n//   }\n//   const lineFeature = new Feature(new LineString(newCoords));\n//   if (contextMenu.feature.getId) {\n//     lineFeature.setId(contextMenu.feature.getId());\n//   }\n//   vectorSourceRef.current.addFeature(lineFeature);\n//   if (mapRef.current && mapRef.current.createSegmentOverlays) {\n//     mapRef.current.createSegmentOverlays(lineFeature, mapRef);\n//   }\n//   setContextMenu({ ...contextMenu, visible: false });\n//   addHistoryAction({\n//     type: 'delete-segment',\n//     featureId: contextMenu.feature.getId && contextMenu.feature.getId(),\n//     prevCoords,\n//     newCoords: cloneCoords(newCoords),\n//     index: contextMenu.index\n//   });\n// }\n};return contextMenu.visible?/*#__PURE__*/_jsx(\"div\",{className:\"right-click-menu\",style:{position:'fixed',top:contextMenu.y,left:contextMenu.x,background:'#fff',border:'1px solid #ccc',zIndex:1000,padding:4,minWidth:120},onContextMenu:e=>e.preventDefault(),onMouseLeave:()=>setContextMenu(_objectSpread(_objectSpread({},contextMenu),{},{visible:false})),children:contextMenu.type==='vertex'?/*#__PURE__*/_jsx(\"div\",{className:\"menu-item\",onClick:()=>handleMenuAction('delete-vertex'),style:{cursor:'pointer',padding:'4px 8px'},children:\"Delete Vertex\"}):contextMenu.type==='segment'&&!drawing?/*#__PURE__*/_jsx(\"div\",{className:\"menu-item\",onClick:()=>handleMenuAction('delete-segment'),style:{cursor:'pointer',padding:'4px 8px'},children:\"Delete Segment\"}):/*#__PURE__*/_jsx(\"div\",{style:{color:'#888',padding:'4px 8px'},children:\"No actions\"})}):null;};export default RightClick;","map":{"version":3,"names":["React","useEffect","Feature","LineString","jsx","_jsx","RightClick","_ref","mapRef","vectorSourceRef","contextMenu","setContextMenu","clearPolygonOverlays","clearOverlaysProp","addHistoryAction","drawing","handleCustomContextMenu","e","mapDiv","document","getElementById","current","contains","target","preventDefault","pixel","getEventPixel","features","getFeatures","found","feature","geom","getGeometry","coords","getType","getCoordinates","len","length","i","coordPixel","getPixelFromCoordinate","Math","hypot","visible","x","clientX","y","clientY","type","index","c1","c2","t","proj","addEventListener","removeEventListener","hideMenu","menu","_objectSpread","window","cloneCoords","map","c","Array","isArray","handleMenuAction","action","arr","prevCoords","newCoords","splice","setCoordinates","createSegmentOverlays","featureId","getId","geomType","slice","part1","part2","includes","removeFeature","lineFeature","setId","addFeature","className","style","position","top","left","background","border","zIndex","padding","minWidth","onContextMenu","onMouseLeave","children","onClick","cursor","color"],"sources":["C:/Users/ncarl/Desktop/sketch/openlayers-react-map/src/map-actions/RightClick.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { Feature } from 'ol';\r\nimport LineString from 'ol/geom/LineString';\r\n\r\nconst RightClick = ({\r\n  mapRef,\r\n  vectorSourceRef,\r\n  contextMenu,\r\n  setContextMenu,\r\n  clearPolygonOverlays: clearOverlaysProp,\r\n  addHistoryAction,\r\n  drawing\r\n}) => {\r\n  useEffect(() => {\r\n    function handleCustomContextMenu(e) {\r\n      const mapDiv = document.getElementById('map');\r\n      if (!mapDiv || !mapRef.current || !vectorSourceRef.current) return;\r\n      if (!mapDiv.contains(e.target)) return;\r\n      e.preventDefault();\r\n      const pixel = mapRef.current.getEventPixel(e);\r\n      const features = vectorSourceRef.current.getFeatures();\r\n\r\n      let found = false;\r\n      for (const feature of features) {\r\n        const geom = feature.getGeometry();\r\n        let coords = null;\r\n        if (geom.getType() === 'Polygon') {\r\n          coords = geom.getCoordinates()[0];\r\n        } else if (geom.getType() === 'LineString') {\r\n          coords = geom.getCoordinates();\r\n        }\r\n        if (coords) {\r\n          // For polygons, skip last duplicate point\r\n          const len = geom.getType() === 'Polygon' ? coords.length - 1 : coords.length;\r\n          for (let i = 0; i < len; i++) {\r\n            const coordPixel = mapRef.current.getPixelFromCoordinate(coords[i]);\r\n            if (Math.hypot(pixel[0] - coordPixel[0], pixel[1] - coordPixel[1]) < 8) {\r\n              setContextMenu({ visible: true, x: e.clientX, y: e.clientY, type: 'vertex', feature, index: i });\r\n              found = true;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n        if (found) break;\r\n      }\r\n\r\n      if (!found) {\r\n        for (const feature of features) {\r\n          const geom = feature.getGeometry();\r\n          let coords = null;\r\n          if (geom.getType() === 'Polygon') {\r\n            coords = geom.getCoordinates()[0];\r\n          } else if (geom.getType() === 'LineString') {\r\n            coords = geom.getCoordinates();\r\n          }\r\n          if (coords) {\r\n            // For polygons, skip last duplicate point\r\n            const len = geom.getType() === 'Polygon' ? coords.length - 1 : coords.length - 1;\r\n            for (let i = 0; i < len; i++) {\r\n              const c1 = mapRef.current.getPixelFromCoordinate(coords[i]);\r\n              const c2 = mapRef.current.getPixelFromCoordinate(coords[i + 1]);\r\n              const t = ((pixel[0] - c1[0]) * (c2[0] - c1[0]) + (pixel[1] - c1[1]) * (c2[1] - c1[1])) /\r\n                ((c2[0] - c1[0]) ** 2 + (c2[1] - c1[1]) ** 2);\r\n              if (t >= 0 && t <= 1) {\r\n                const proj = [c1[0] + t * (c2[0] - c1[0]), c1[1] + t * (c2[1] - c1[1])];\r\n                if (Math.hypot(pixel[0] - proj[0], pixel[1] - proj[1]) < 8) {\r\n                  setContextMenu({ visible: true, x: e.clientX, y: e.clientY, type: 'segment', feature, index: i });\r\n                  found = true;\r\n                  break;\r\n                }\r\n              }\r\n            }\r\n          }\r\n          if (found) break;\r\n        }\r\n      }\r\n\r\n      if (!found) setContextMenu({ visible: true, x: e.clientX, y: e.clientY, type: null, feature: null, index: null });\r\n    }\r\n\r\n    document.addEventListener('contextmenu', handleCustomContextMenu);\r\n    return () => document.removeEventListener('contextmenu', handleCustomContextMenu);\r\n  }, [mapRef, vectorSourceRef, setContextMenu]);\r\n\r\n  useEffect(() => {\r\n    function hideMenu() {\r\n      setContextMenu(menu => menu.visible ? { ...menu, visible: false } : menu);\r\n    }\r\n    window.addEventListener('click', hideMenu);\r\n    return () => window.removeEventListener('click', hideMenu);\r\n  }, [setContextMenu]);\r\n\r\n  // Helper to deep clone coordinates\r\n  const cloneCoords = coords => coords.map(c => Array.isArray(c) ? [...c] : c);\r\n\r\n  const handleMenuAction = (action) => {\r\n    if (!contextMenu.feature) return;\r\n    const geom = contextMenu.feature.getGeometry();\r\n    let coords;\r\n    if (geom.getType() === 'Polygon') {\r\n      const arr = geom.getCoordinates()[0];\r\n      if (!Array.isArray(arr) || arr.length < 3 || !Array.isArray(arr[0])) return;\r\n      coords = arr.map(c => [c[0], c[1]]);\r\n    } else if (geom.getType() === 'LineString') {\r\n      const arr = geom.getCoordinates();\r\n      if (!Array.isArray(arr) || arr.length < 2 || !Array.isArray(arr[0])) return;\r\n      coords = arr.map(c => [c[0], c[1]]);\r\n    } else {\r\n      return;\r\n    }\r\n\r\n    // if (action === 'delete-vertex' && coords.length > 3) {\r\n    //   const prevCoords = cloneCoords(coords);\r\n    //   const newCoords = cloneCoords(coords);\r\n    //   newCoords.splice(contextMenu.index, 1);\r\n    //   newCoords[newCoords.length - 1] = newCoords[0];\r\n    //   geom.setCoordinates([newCoords]);\r\n    //   if (mapRef.current && mapRef.current.createSegmentOverlays) {\r\n    //     mapRef.current.createSegmentOverlays(contextMenu.feature, mapRef);\r\n    //   }\r\n    //   setContextMenu({ ...contextMenu, visible: false });\r\n\r\n    //   addHistoryAction({\r\n    //     type: 'delete-vertex',\r\n    //     featureId: contextMenu.feature.getId && contextMenu.feature.getId(),\r\n    //     prevCoords,\r\n    //     newCoords,\r\n    //     index: contextMenu.index\r\n    //   });\r\n\r\n    // }\r\n    if (action === 'delete-vertex') {\r\n      const prevCoords = cloneCoords(coords);\r\n      const newCoords = cloneCoords(coords);\r\n      newCoords.splice(contextMenu.index, 1);\r\n\r\n      if (geom.getType() === 'Polygon') {\r\n        // Only delete if at least 4 points remain (3 + closing point)\r\n        if (newCoords.length < 4) return;\r\n        newCoords[newCoords.length - 1] = newCoords[0]; // close ring\r\n        geom.setCoordinates([newCoords]);\r\n      } else if (geom.getType() === 'LineString') {\r\n        // Only delete if at least 2 points remain (minimum for a line)\r\n        if (newCoords.length < 2) return;\r\n        geom.setCoordinates(newCoords);\r\n      } else {\r\n        return;\r\n      }\r\n\r\n      if (mapRef.current && mapRef.current.createSegmentOverlays) {\r\n        mapRef.current.createSegmentOverlays(contextMenu.feature, mapRef);\r\n      }\r\n      setContextMenu({ ...contextMenu, visible: false });\r\n\r\n      addHistoryAction({\r\n        type: 'delete-vertex',\r\n        featureId: contextMenu.feature.getId && contextMenu.feature.getId(),\r\n        prevCoords,\r\n        newCoords,\r\n        index: contextMenu.index,\r\n        geomType: geom.getType()\r\n      });\r\n    }\r\n\r\n    if (action === 'delete-segment') {\r\n      if (clearOverlaysProp) clearOverlaysProp(contextMenu.feature);\r\n      const prevCoords = cloneCoords(coords);\r\n\r\n      if (geom.getType() === 'Polygon') {\r\n        if (\r\n          coords.length > 3 &&\r\n          coords[0][0] === coords[coords.length - 1][0] &&\r\n          coords[0][1] === coords[coords.length - 1][1]\r\n        ) {\r\n          coords = coords.slice(0, coords.length - 1);\r\n        }\r\n        const index = contextMenu.index;\r\n        const part1 = coords.slice(index + 1);\r\n        const part2 = coords.slice(0, index + 1);\r\n        const newCoords = [...part1, ...part2];\r\n\r\n        if (vectorSourceRef.current && vectorSourceRef.current.getFeatures().includes(contextMenu.feature)) {\r\n          vectorSourceRef.current.removeFeature(contextMenu.feature);\r\n        }\r\n        const lineFeature = new Feature(new LineString(newCoords));\r\n        if (contextMenu.feature.getId) {\r\n          lineFeature.setId(contextMenu.feature.getId());\r\n        }\r\n        vectorSourceRef.current.addFeature(lineFeature);\r\n\r\n        if (mapRef.current && mapRef.current.createSegmentOverlays) {\r\n          mapRef.current.createSegmentOverlays(lineFeature, mapRef);\r\n        }\r\n        setContextMenu({ ...contextMenu, visible: false });\r\n\r\n        addHistoryAction({\r\n          type: 'delete-segment',\r\n          featureId: contextMenu.feature.getId && contextMenu.feature.getId(),\r\n          prevCoords,\r\n          newCoords: cloneCoords(newCoords),\r\n          index: contextMenu.index,\r\n          geomType: 'Polygon'\r\n        });\r\n\r\n      } else if (geom.getType() === 'LineString') {\r\n        // Only allow if at least 3 points (2 segments)\r\n        if (coords.length < 3) return;\r\n        const index = contextMenu.index;\r\n        // Remove the endpoint after the segment index\r\n        const newCoords = cloneCoords(coords);\r\n        newCoords.splice(index + 1, 1);\r\n\r\n        geom.setCoordinates(newCoords);\r\n\r\n        if (mapRef.current && mapRef.current.createSegmentOverlays) {\r\n          mapRef.current.createSegmentOverlays(contextMenu.feature, mapRef);\r\n        }\r\n        setContextMenu({ ...contextMenu, visible: false });\r\n\r\n        addHistoryAction({\r\n          type: 'delete-segment',\r\n          featureId: contextMenu.feature.getId && contextMenu.feature.getId(),\r\n          prevCoords,\r\n          newCoords: cloneCoords(newCoords),\r\n          index: contextMenu.index,\r\n          geomType: 'LineString'\r\n        });\r\n      }\r\n    }\r\n    // if (action === 'delete-segment' && coords.length > 3) {\r\n    //   if (clearOverlaysProp) clearOverlaysProp(contextMenu.feature);\r\n    //   const prevCoords = cloneCoords(coords);\r\n    //   if (\r\n    //     coords.length > 2 &&\r\n    //     coords[0][0] === coords[coords.length - 1][0] &&\r\n    //     coords[0][1] === coords[coords.length - 1][1]\r\n    //   ) {\r\n    //     coords = coords.slice(0, coords.length - 1);\r\n    //   }\r\n    //   const index = contextMenu.index;\r\n    //   const part1 = coords.slice(index + 1);\r\n    //   const part2 = coords.slice(0, index + 1);\r\n    //   const newCoords = [...part1, ...part2];\r\n\r\n    //   if (vectorSourceRef.current && vectorSourceRef.current.getFeatures().includes(contextMenu.feature)) {\r\n    //     vectorSourceRef.current.removeFeature(contextMenu.feature);\r\n    //   }\r\n    //   const lineFeature = new Feature(new LineString(newCoords));\r\n    //   if (contextMenu.feature.getId) {\r\n    //     lineFeature.setId(contextMenu.feature.getId());\r\n    //   }\r\n    //   vectorSourceRef.current.addFeature(lineFeature);\r\n\r\n    //   if (mapRef.current && mapRef.current.createSegmentOverlays) {\r\n    //     mapRef.current.createSegmentOverlays(lineFeature, mapRef);\r\n    //   }\r\n    //   setContextMenu({ ...contextMenu, visible: false });\r\n\r\n    //   addHistoryAction({\r\n    //     type: 'delete-segment',\r\n    //     featureId: contextMenu.feature.getId && contextMenu.feature.getId(),\r\n    //     prevCoords,\r\n    //     newCoords: cloneCoords(newCoords),\r\n    //     index: contextMenu.index\r\n    //   });\r\n\r\n    // }\r\n  };\r\n\r\n  return contextMenu.visible ? (\r\n    <div className=\"right-click-menu\"\r\n      style={{\r\n        position: 'fixed',\r\n        top: contextMenu.y,\r\n        left: contextMenu.x,\r\n        background: '#fff',\r\n        border: '1px solid #ccc',\r\n        zIndex: 1000,\r\n        padding: 4,\r\n        minWidth: 120\r\n      }}\r\n      onContextMenu={e => e.preventDefault()}\r\n      onMouseLeave={() => setContextMenu({ ...contextMenu, visible: false })}\r\n    >\r\n      {contextMenu.type === 'vertex' ? (\r\n        <div\r\n          className=\"menu-item\"\r\n          onClick={() => handleMenuAction('delete-vertex')}\r\n          style={{ cursor: 'pointer', padding: '4px 8px' }}\r\n        >\r\n          Delete Vertex\r\n        </div>\r\n      ) :\r\n        contextMenu.type === 'segment' && !drawing ? (\r\n          <div\r\n            className=\"menu-item\"\r\n            onClick={() => handleMenuAction('delete-segment')}\r\n            style={{ cursor: 'pointer', padding: '4px 8px' }}\r\n          >\r\n            Delete Segment\r\n          </div>\r\n        ) :\r\n          (<div style={{ color: '#888', padding: '4px 8px' }}>No actions</div>)}\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nexport default RightClick;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}