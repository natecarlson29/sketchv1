{"ast":null,"code":"/**\n * @module ol/proj/Units\n */\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nvar Units = {\n  /**\n   * Radians\n   * @api\n   */\n  RADIANS: 'radians',\n  /**\n   * Degrees\n   * @api\n   */\n  DEGREES: 'degrees',\n  /**\n   * Feet\n   * @api\n   */\n  FEET: 'ft',\n  /**\n   * Meters\n   * @api\n   */\n  METERS: 'm',\n  /**\n   * Pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n  /**\n   * Tile Pixels\n   * @api\n   */\n  TILE_PIXELS: 'tile-pixels',\n  /**\n   * US Feet\n   * @api\n   */\n  USFEET: 'us-ft'\n};\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nvar unitByCode = {\n  '9001': Units.METERS,\n  '9002': Units.FEET,\n  '9003': Units.USFEET,\n  '9101': Units.RADIANS,\n  '9102': Units.DEGREES\n};\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport var METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.RADIANS] = 6370997 / (2 * Math.PI);\nMETERS_PER_UNIT[Units.DEGREES] = 2 * Math.PI * 6370997 / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\nexport default Units;","map":{"version":3,"names":["Units","RADIANS","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","unitByCode","fromCode","code","METERS_PER_UNIT","Math","PI"],"sources":["C:\\Users\\ncarl\\Desktop\\sketch\\openlayers-react-map\\node_modules\\ol\\src\\proj\\Units.js"],"sourcesContent":["/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nconst Units = {\n  /**\n   * Radians\n   * @api\n   */\n  RADIANS: 'radians',\n  /**\n   * Degrees\n   * @api\n   */\n  DEGREES: 'degrees',\n  /**\n   * Feet\n   * @api\n   */\n  FEET: 'ft',\n  /**\n   * Meters\n   * @api\n   */\n  METERS: 'm',\n  /**\n   * Pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n  /**\n   * Tile Pixels\n   * @api\n   */\n  TILE_PIXELS: 'tile-pixels',\n  /**\n   * US Feet\n   * @api\n   */\n  USFEET: 'us-ft',\n};\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': Units.METERS,\n  '9002': Units.FEET,\n  '9003': Units.USFEET,\n  '9101': Units.RADIANS,\n  '9102': Units.DEGREES,\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport const METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.RADIANS] = 6370997 / (2 * Math.PI);\nMETERS_PER_UNIT[Units.DEGREES] = (2 * Math.PI * 6370997) / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n"],"mappings":"AAAA;;;AAIA;;;;;AAKA,IAAMA,KAAK,GAAG;EACZ;;;;EAIAC,OAAO,EAAE,SAAS;EAClB;;;;EAIAC,OAAO,EAAE,SAAS;EAClB;;;;EAIAC,IAAI,EAAE,IAAI;EACV;;;;EAIAC,MAAM,EAAE,GAAG;EACX;;;;EAIAC,MAAM,EAAE,QAAQ;EAChB;;;;EAIAC,WAAW,EAAE,aAAa;EAC1B;;;;EAIAC,MAAM,EAAE;CACT;AAED;;;;AAIA,IAAMC,UAAU,GAAG;EACjB,MAAM,EAAER,KAAK,CAACI,MAAM;EACpB,MAAM,EAAEJ,KAAK,CAACG,IAAI;EAClB,MAAM,EAAEH,KAAK,CAACO,MAAM;EACpB,MAAM,EAAEP,KAAK,CAACC,OAAO;EACrB,MAAM,EAAED,KAAK,CAACE;CACf;AAED;;;;AAIA,OAAM,SAAUO,QAAQA,CAACC,IAAI;EAC3B,OAAOF,UAAU,CAACE,IAAI,CAAC;AACzB;AAEA;;;;;;AAMA,OAAO,IAAMC,eAAe,GAAG,EAAE;AACjC;AACAA,eAAe,CAACX,KAAK,CAACC,OAAO,CAAC,GAAG,OAAO,IAAI,CAAC,GAAGW,IAAI,CAACC,EAAE,CAAC;AACxDF,eAAe,CAACX,KAAK,CAACE,OAAO,CAAC,GAAI,CAAC,GAAGU,IAAI,CAACC,EAAE,GAAG,OAAO,GAAI,GAAG;AAC9DF,eAAe,CAACX,KAAK,CAACG,IAAI,CAAC,GAAG,MAAM;AACpCQ,eAAe,CAACX,KAAK,CAACI,MAAM,CAAC,GAAG,CAAC;AACjCO,eAAe,CAACX,KAAK,CAACO,MAAM,CAAC,GAAG,IAAI,GAAG,IAAI;AAE3C,eAAeP,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}