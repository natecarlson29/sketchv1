{"ast":null,"code":"/**\n * @module ol/tileurlfunction\n */\nimport { assert } from './asserts.js';\nimport { modulo } from './math.js';\nimport { hash as tileCoordHash } from './tilecoord.js';\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  var zRegEx = /\\{z\\}/g;\n  var xRegEx = /\\{x\\}/g;\n  var yRegEx = /\\{y\\}/g;\n  var dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template.replace(zRegEx, tileCoord[0].toString()).replace(xRegEx, tileCoord[1].toString()).replace(yRegEx, tileCoord[2].toString()).replace(dashYRegEx, function () {\n          var z = tileCoord[0];\n          var range = tileGrid.getFullTileRange(z);\n          assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n          var y = range.getHeight() - tileCoord[2] - 1;\n          return y.toString();\n        });\n      }\n    }\n  );\n}\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  var len = templates.length;\n  var tileUrlFunctions = new Array(len);\n  for (var i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        var h = tileCoordHash(tileCoord);\n        var index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  var urls = [];\n  var match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    var startCharCode = match[1].charCodeAt(0);\n    var stopCharCode = match[2].charCodeAt(0);\n    var charCode = void 0;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    var stop_1 = parseInt(match[2], 10);\n    for (var i = parseInt(match[1], 10); i <= stop_1; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}","map":{"version":3,"names":["assert","modulo","hash","tileCoordHash","createFromTemplate","template","tileGrid","zRegEx","xRegEx","yRegEx","dashYRegEx","tileCoord","pixelRatio","projection","undefined","replace","toString","z","range","getFullTileRange","y","getHeight","createFromTemplates","templates","len","length","tileUrlFunctions","Array","i","createFromTileUrlFunctions","h","index","nullTileUrlFunction","expandUrl","url","urls","match","exec","startCharCode","charCodeAt","stopCharCode","charCode","push","String","fromCharCode","stop_1","parseInt"],"sources":["C:\\Users\\ncarl\\Desktop\\sketch\\openlayers-react-map\\node_modules\\ol\\src\\tileurlfunction.js"],"sourcesContent":["/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template\n          .replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, tileCoord[2].toString())\n          .replace(dashYRegEx, function () {\n            const z = tileCoord[0];\n            const range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            const y = range.getHeight() - tileCoord[2] - 1;\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        const h = tileCoordHash(tileCoord);\n        const index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}