{"ast":null,"code":"/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport { WORKER_OFFSCREEN_CANVAS } from '../has.js';\nimport { clear } from '../obj.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { getFontParameters } from '../css.js';\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {string} [textAlign] TextAlign.\n * @property {string} [justify] Justify.\n * @property {string} textBaseline TextBaseline.\n * @property {string} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n/**\n * @const\n * @type {string}\n */\nexport var defaultFont = '10px sans-serif';\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultFillStyle = '#000';\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport var defaultLineCap = 'round';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultLineDash = [];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineDashOffset = 0;\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport var defaultLineJoin = 'round';\n/**\n * @const\n * @type {number}\n */\nexport var defaultMiterLimit = 10;\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultStrokeStyle = '#000';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextAlign = 'center';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextBaseline = 'middle';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultPadding = [0, 0, 0, 0];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineWidth = 1;\n/**\n * @type {BaseObject}\n */\nexport var checkedFonts = new BaseObject();\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache~LRUCache#setSize cache.setSize()}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport var labelCache = new EventTarget();\nlabelCache.setSize = function () {\n  console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar measureContext = null;\n/**\n * @type {string}\n */\nvar measureFont;\n/**\n * @type {!Object<string, number>}\n */\nexport var textHeights = {};\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport var registerFont = function () {\n  var retries = 100;\n  var size = '32px ';\n  var referenceFonts = ['monospace', 'serif'];\n  var len = referenceFonts.length;\n  var text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  var interval, referenceWidth;\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    var available = true;\n    for (var i = 0; i < len; ++i) {\n      var referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(fontStyle + ' ' + fontWeight + ' ' + size + referenceFont, text);\n      if (fontFamily != referenceFont) {\n        var width = measureTextWidth(fontStyle + ' ' + fontWeight + ' ' + size + fontFamily + ',' + referenceFont, text);\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n  function check() {\n    var done = true;\n    var fonts = checkedFonts.getKeys();\n    for (var i = 0, ii = fonts.length; i < ii; ++i) {\n      var font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n  return function (fontSpec) {\n    var font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    var families = font.families;\n    for (var i = 0, ii = families.length; i < ii; ++i) {\n      var family = families[i];\n      var key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n}();\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport var measureTextHeight = function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  var measureElement;\n  return function (fontSpec) {\n    var height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        var font = getFontParameters(fontSpec);\n        var metrics = measureText(fontSpec, 'Å½g');\n        var lineHeight = isNaN(Number(font.lineHeight)) ? 1.2 : Number(font.lineHeight);\n        height = lineHeight * (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n}();\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  var width = text.split('\\n').reduce(function (prev, curr) {\n    return Math.max(prev, measureTextWidth(font, curr));\n  }, 0);\n  cache[text] = width;\n  return width;\n}\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  var widths = [];\n  var heights = [];\n  var lineWidths = [];\n  var width = 0;\n  var lineWidth = 0;\n  var height = 0;\n  var lineHeight = 0;\n  for (var i = 0, ii = chunks.length; i <= ii; i += 2) {\n    var text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    var font = chunks[i + 1] || baseStyle.font;\n    var currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    var currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {\n    width: width,\n    height: height,\n    widths: widths,\n    heights: heights,\n    lineWidths: lineWidths\n  };\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(context, transform, opacity, labelOrImage, originX, originY, w, h, x, y, scale) {\n  context.save();\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n  if (/** @type {*} */labelOrImage.contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */labelOrImage, context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(/** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */labelOrImage, originX, originY, w, h, 0, 0, w, h);\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(/** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */labelOrImage, originX, originY, w, h, x, y, w * scale[0], h * scale[1]);\n  }\n  context.restore();\n}\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  var contextInstructions = label.contextInstructions;\n  for (var i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(context, contextInstructions[i + 1]);\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}","map":{"version":3,"names":["BaseObject","EventTarget","WORKER_OFFSCREEN_CANVAS","clear","createCanvasContext2D","getFontParameters","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","checkedFonts","labelCache","setSize","console","warn","measureContext","measureFont","textHeights","registerFont","retries","size","referenceFonts","len","length","text","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","i","referenceFont","measureTextWidth","width","check","done","fonts","getKeys","ii","font","get","apply","split","undefined","set","clearInterval","fontSpec","families","family","key","style","weight","setInterval","measureTextHeight","measureElement","height","metrics","measureText","lineHeight","isNaN","Number","actualBoundingBoxAscent","actualBoundingBoxDescent","document","createElement","innerHTML","minHeight","maxHeight","padding","border","position","display","left","body","appendChild","offsetHeight","removeChild","measureAndCacheTextWidth","cache","reduce","prev","curr","Math","max","getTextDimensions","baseStyle","chunks","widths","heights","lineWidths","lineWidth","push","currentWidth","currentHeight","rotateAtOffset","context","rotation","offsetX","offsetY","translate","rotate","drawImageOrLabel","transform","opacity","labelOrImage","originX","originY","w","h","x","y","scale","save","globalAlpha","setTransform","contextInstructions","executeLabelInstructions","drawImage","restore","label","Array","isArray"],"sources":["C:\\Users\\ncarl\\Desktop\\sketch\\openlayers-react-map\\node_modules\\ol\\src\\render\\canvas.js"],"sourcesContent":["/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {string} [textAlign] TextAlign.\n * @property {string} [justify] Justify.\n * @property {string} textBaseline TextBaseline.\n * @property {string} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache~LRUCache#setSize cache.setSize()}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport const labelCache = new EventTarget();\nlabelCache.setSize = function () {\n  console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Å½g');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}