{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/interaction/Select\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport Interaction from './Interaction.js';\nimport VectorLayer from '../layer/Vector.js';\nimport { TRUE } from '../functions.js';\nimport { clear } from '../obj.js';\nimport { createEditingStyle } from '../style/Style.js';\nimport { extend, includes } from '../array.js';\nimport { getUid } from '../util.js';\nimport { never, shiftKeyOnly, singleClick } from '../events/condition.js';\n/**\n * @enum {string}\n */\nvar SelectEventType = {\n  /**\n   * Triggered when feature(s) has been (de)selected.\n   * @event SelectEvent#select\n   * @api\n   */\n  SELECT: 'select'\n};\n/**\n * A function that takes an {@link module:ol/Feature~Feature} or\n * {@link module:ol/render/Feature~RenderFeature} and an\n * {@link module:ol/layer/Layer~Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>):boolean} FilterFunction\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [addCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition.never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition.singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style/Style~Style}). Set to `null` if this interaction should not apply\n * any style changes for selected features.\n * If set to a falsey value, the selected feature's style will not change.\n * @property {import(\"../events/condition.js\").Condition} [removeCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition.never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [toggleCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition.shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature~Feature} and an\n * {@link module:ol/layer/Layer~Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features.\n */\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n */\nvar SelectEvent = /** @class */function (_super) {\n  __extends(SelectEvent, _super);\n  /**\n   * @param {SelectEventType} type The event type.\n   * @param {Array<import(\"../Feature.js\").default>} selected Selected features.\n   * @param {Array<import(\"../Feature.js\").default>} deselected Deselected features.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Associated\n   *     {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   */\n  function SelectEvent(type, selected, deselected, mapBrowserEvent) {\n    var _this = _super.call(this, type) || this;\n    /**\n     * Selected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    _this.selected = selected;\n    /**\n     * Deselected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    _this.deselected = deselected;\n    /**\n     * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    _this.mapBrowserEvent = mapBrowserEvent;\n    return _this;\n  }\n  return SelectEvent;\n}(Event);\nexport { SelectEvent };\n/**\n * Original feature styles to reset to when features are no longer selected.\n * @type {Object<number, import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction>}\n */\nvar originalFeatureStyles = {};\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'select', SelectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'select', Return>} SelectOnSignature\n */\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * @fires SelectEvent\n * @api\n */\nvar Select = /** @class */function (_super) {\n  __extends(Select, _super);\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  function Select(opt_options) {\n    var _this = _super.call(this) || this;\n    /***\n     * @type {SelectOnSignature<import(\"../events\").EventsKey>}\n     */\n    _this.on;\n    /***\n     * @type {SelectOnSignature<import(\"../events\").EventsKey>}\n     */\n    _this.once;\n    /***\n     * @type {SelectOnSignature<void>}\n     */\n    _this.un;\n    var options = opt_options ? opt_options : {};\n    /**\n     * @private\n     */\n    _this.boundAddFeature_ = _this.addFeature_.bind(_this);\n    /**\n     * @private\n     */\n    _this.boundRemoveFeature_ = _this.removeFeature_.bind(_this);\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    _this.condition_ = options.condition ? options.condition : singleClick;\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    _this.addCondition_ = options.addCondition ? options.addCondition : never;\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    _this.removeCondition_ = options.removeCondition ? options.removeCondition : never;\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    _this.toggleCondition_ = options.toggleCondition ? options.toggleCondition : shiftKeyOnly;\n    /**\n     * @private\n     * @type {boolean}\n     */\n    _this.multi_ = options.multi ? options.multi : false;\n    /**\n     * @private\n     * @type {FilterFunction}\n     */\n    _this.filter_ = options.filter ? options.filter : TRUE;\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n    /**\n     * @private\n     * @type {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null}\n     */\n    _this.style_ = options.style !== undefined ? options.style : getDefaultStyleFunction();\n    /**\n     * @private\n     * @type {import(\"../Collection.js\").default}\n     */\n    _this.features_ = options.features || new Collection();\n    /** @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} */\n    var layerFilter;\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        var layers_1 = options.layers;\n        layerFilter = function (layer) {\n          return includes(layers_1, layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean}\n     */\n    _this.layerFilter_ = layerFilter;\n    /**\n     * An association between selected feature (key)\n     * and layer (value)\n     * @private\n     * @type {Object<string, import(\"../layer/Layer.js\").default>}\n     */\n    _this.featureLayerAssociation_ = {};\n    return _this;\n  }\n  /**\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {import(\"../layer/Layer.js\").default} layer Layer.\n   * @private\n   */\n  Select.prototype.addFeatureLayerAssociation_ = function (feature, layer) {\n    this.featureLayerAssociation_[getUid(feature)] = layer;\n  };\n  /**\n   * Get the selected features.\n   * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} Features collection.\n   * @api\n   */\n  Select.prototype.getFeatures = function () {\n    return this.features_;\n  };\n  /**\n   * Returns the Hit-detection tolerance.\n   * @return {number} Hit tolerance in pixels.\n   * @api\n   */\n  Select.prototype.getHitTolerance = function () {\n    return this.hitTolerance_;\n  };\n  /**\n   * Returns the associated {@link module:ol/layer/Vector~VectorLayer vector layer} of\n   * a selected feature.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature\n   * @return {import('../layer/Vector.js').default} Layer.\n   * @api\n   */\n  Select.prototype.getLayer = function (feature) {\n    return /** @type {import('../layer/Vector.js').default} */this.featureLayerAssociation_[getUid(feature)];\n  };\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  Select.prototype.setHitTolerance = function (hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  };\n  /**\n   * Remove the interaction from its current map, if any,  and attach it to a new\n   * map, if any. Pass `null` to just remove the interaction from the current map.\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\n   * @api\n   */\n  Select.prototype.setMap = function (map) {\n    var currentMap = this.getMap();\n    if (currentMap && this.style_) {\n      this.features_.forEach(this.restorePreviousStyle_.bind(this));\n    }\n    _super.prototype.setMap.call(this, map);\n    if (map) {\n      this.features_.addEventListener(CollectionEventType.ADD, this.boundAddFeature_);\n      this.features_.addEventListener(CollectionEventType.REMOVE, this.boundRemoveFeature_);\n      if (this.style_) {\n        this.features_.forEach(this.applySelectedStyle_.bind(this));\n      }\n    } else {\n      this.features_.removeEventListener(CollectionEventType.ADD, this.boundAddFeature_);\n      this.features_.removeEventListener(CollectionEventType.REMOVE, this.boundRemoveFeature_);\n    }\n  };\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  Select.prototype.addFeature_ = function (evt) {\n    var feature = evt.element;\n    if (this.style_) {\n      this.applySelectedStyle_(feature);\n    }\n    if (!this.getLayer(feature)) {\n      var layer = /** @type {VectorLayer} */this.getMap().getAllLayers().find(function (layer) {\n        if (layer instanceof VectorLayer && layer.getSource() && layer.getSource().hasFeature(feature)) {\n          return layer;\n        }\n      });\n      if (layer) {\n        this.addFeatureLayerAssociation_(feature, layer);\n      }\n    }\n  };\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  Select.prototype.removeFeature_ = function (evt) {\n    var feature = evt.element;\n    if (this.style_) {\n      this.restorePreviousStyle_(feature);\n    }\n  };\n  /**\n   * @return {import(\"../style/Style.js\").StyleLike|null} Select style.\n   */\n  Select.prototype.getStyle = function () {\n    return this.style_;\n  };\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @private\n   */\n  Select.prototype.applySelectedStyle_ = function (feature) {\n    var key = getUid(feature);\n    if (!(key in originalFeatureStyles)) {\n      originalFeatureStyles[key] = feature.getStyle();\n    }\n    feature.setStyle(this.style_);\n  };\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @private\n   */\n  Select.prototype.restorePreviousStyle_ = function (feature) {\n    var interactions = this.getMap().getInteractions().getArray();\n    for (var i = interactions.length - 1; i >= 0; --i) {\n      var interaction = interactions[i];\n      if (interaction !== this && interaction instanceof Select && interaction.getStyle() && interaction.getFeatures().getArray().lastIndexOf(feature) !== -1) {\n        feature.setStyle(interaction.getStyle());\n        return;\n      }\n    }\n    var key = getUid(feature);\n    feature.setStyle(originalFeatureStyles[key]);\n    delete originalFeatureStyles[key];\n  };\n  /**\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @private\n   */\n  Select.prototype.removeFeatureLayerAssociation_ = function (feature) {\n    delete this.featureLayerAssociation_[getUid(feature)];\n  };\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may change the\n   * selected state of features.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {Select}\n   */\n  Select.prototype.handleEvent = function (mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    var add = this.addCondition_(mapBrowserEvent);\n    var remove = this.removeCondition_(mapBrowserEvent);\n    var toggle = this.toggleCondition_(mapBrowserEvent);\n    var set = !add && !remove && !toggle;\n    var map = mapBrowserEvent.map;\n    var features = this.getFeatures();\n    var deselected = [];\n    var selected = [];\n    if (set) {\n      // Replace the currently selected feature(s) with the feature(s) at the\n      // pixel, or clear the selected feature(s) if there is no feature at\n      // the pixel.\n      clear(this.featureLayerAssociation_);\n      map.forEachFeatureAtPixel(mapBrowserEvent.pixel,\n      /**\n       * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n       * @param {import(\"../layer/Layer.js\").default} layer Layer.\n       * @return {boolean|undefined} Continue to iterate over the features.\n       */\n      function (feature, layer) {\n        if (this.filter_(feature, layer)) {\n          this.addFeatureLayerAssociation_(feature, layer);\n          selected.push(feature);\n          return !this.multi_;\n        }\n      }.bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n      for (var i = features.getLength() - 1; i >= 0; --i) {\n        var feature = features.item(i);\n        var index = selected.indexOf(feature);\n        if (index > -1) {\n          // feature is already selected\n          selected.splice(index, 1);\n        } else {\n          features.remove(feature);\n          deselected.push(feature);\n        }\n      }\n      if (selected.length !== 0) {\n        features.extend(selected);\n      }\n    } else {\n      // Modify the currently selected feature(s).\n      map.forEachFeatureAtPixel(mapBrowserEvent.pixel,\n      /**\n       * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n       * @param {import(\"../layer/Layer.js\").default} layer Layer.\n       * @return {boolean|undefined} Continue to iterate over the features.\n       */\n      function (feature, layer) {\n        if (this.filter_(feature, layer)) {\n          if ((add || toggle) && !includes(features.getArray(), feature)) {\n            this.addFeatureLayerAssociation_(feature, layer);\n            selected.push(feature);\n          } else if ((remove || toggle) && includes(features.getArray(), feature)) {\n            deselected.push(feature);\n            this.removeFeatureLayerAssociation_(feature);\n          }\n          return !this.multi_;\n        }\n      }.bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n      for (var j = deselected.length - 1; j >= 0; --j) {\n        features.remove(deselected[j]);\n      }\n      features.extend(selected);\n    }\n    if (selected.length > 0 || deselected.length > 0) {\n      this.dispatchEvent(new SelectEvent(SelectEventType.SELECT, selected, deselected, mapBrowserEvent));\n    }\n    return true;\n  };\n  return Select;\n}(Interaction);\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  var styles = createEditingStyle();\n  extend(styles['Polygon'], styles['LineString']);\n  extend(styles['GeometryCollection'], styles['LineString']);\n  return function (feature) {\n    if (!feature.getGeometry()) {\n      return null;\n    }\n    return styles[feature.getGeometry().getType()];\n  };\n}\nexport default Select;","map":{"version":3,"names":["Collection","CollectionEventType","Event","Interaction","VectorLayer","TRUE","clear","createEditingStyle","extend","includes","getUid","never","shiftKeyOnly","singleClick","SelectEventType","SELECT","SelectEvent","_super","__extends","type","selected","deselected","mapBrowserEvent","_this","call","originalFeatureStyles","Select","opt_options","on","once","un","options","boundAddFeature_","addFeature_","bind","boundRemoveFeature_","removeFeature_","condition_","condition","addCondition_","addCondition","removeCondition_","removeCondition","toggleCondition_","toggleCondition","multi_","multi","filter_","filter","hitTolerance_","hitTolerance","style_","style","undefined","getDefaultStyleFunction","features_","features","layerFilter","layers","layers_1","layer","layerFilter_","featureLayerAssociation_","prototype","addFeatureLayerAssociation_","feature","getFeatures","getHitTolerance","getLayer","setHitTolerance","setMap","map","currentMap","getMap","forEach","restorePreviousStyle_","addEventListener","ADD","REMOVE","applySelectedStyle_","removeEventListener","evt","element","getAllLayers","find","getSource","hasFeature","getStyle","key","setStyle","interactions","getInteractions","getArray","i","length","interaction","lastIndexOf","removeFeatureLayerAssociation_","handleEvent","add","remove","toggle","set","forEachFeatureAtPixel","pixel","push","getLength","item","index","indexOf","splice","j","dispatchEvent","styles","getGeometry","getType"],"sources":["C:\\Users\\ncarl\\Desktop\\sketch\\openlayers-react-map\\node_modules\\ol\\src\\interaction\\Select.js"],"sourcesContent":["/**\n * @module ol/interaction/Select\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport Interaction from './Interaction.js';\nimport VectorLayer from '../layer/Vector.js';\nimport {TRUE} from '../functions.js';\nimport {clear} from '../obj.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {extend, includes} from '../array.js';\nimport {getUid} from '../util.js';\nimport {never, shiftKeyOnly, singleClick} from '../events/condition.js';\n\n/**\n * @enum {string}\n */\nconst SelectEventType = {\n  /**\n   * Triggered when feature(s) has been (de)selected.\n   * @event SelectEvent#select\n   * @api\n   */\n  SELECT: 'select',\n};\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} or\n * {@link module:ol/render/Feature~RenderFeature} and an\n * {@link module:ol/layer/Layer~Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>):boolean} FilterFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [addCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition.never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition.singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style/Style~Style}). Set to `null` if this interaction should not apply\n * any style changes for selected features.\n * If set to a falsey value, the selected feature's style will not change.\n * @property {import(\"../events/condition.js\").Condition} [removeCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition.never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [toggleCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition.shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature~Feature} and an\n * {@link module:ol/layer/Layer~Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n */\nexport class SelectEvent extends Event {\n  /**\n   * @param {SelectEventType} type The event type.\n   * @param {Array<import(\"../Feature.js\").default>} selected Selected features.\n   * @param {Array<import(\"../Feature.js\").default>} deselected Deselected features.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Associated\n   *     {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   */\n  constructor(type, selected, deselected, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * Selected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.selected = selected;\n\n    /**\n     * Deselected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.deselected = deselected;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/**\n * Original feature styles to reset to when features are no longer selected.\n * @type {Object<number, import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction>}\n */\nconst originalFeatureStyles = {};\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'select', SelectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'select', Return>} SelectOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * @fires SelectEvent\n * @api\n */\nclass Select extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {SelectOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {SelectOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {SelectOnSignature<void>}\n     */\n    this.un;\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     */\n    this.boundAddFeature_ = this.addFeature_.bind(this);\n\n    /**\n     * @private\n     */\n    this.boundRemoveFeature_ = this.removeFeature_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : singleClick;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.addCondition_ = options.addCondition ? options.addCondition : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.removeCondition_ = options.removeCondition\n      ? options.removeCondition\n      : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.toggleCondition_ = options.toggleCondition\n      ? options.toggleCondition\n      : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multi_ = options.multi ? options.multi : false;\n\n    /**\n     * @private\n     * @type {FilterFunction}\n     */\n    this.filter_ = options.filter ? options.filter : TRUE;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    /**\n     * @private\n     * @type {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null}\n     */\n    this.style_ =\n      options.style !== undefined ? options.style : getDefaultStyleFunction();\n\n    /**\n     * @private\n     * @type {import(\"../Collection.js\").default}\n     */\n    this.features_ = options.features || new Collection();\n\n    /** @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} */\n    let layerFilter;\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        const layers = options.layers;\n        layerFilter = function (layer) {\n          return includes(layers, layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * An association between selected feature (key)\n     * and layer (value)\n     * @private\n     * @type {Object<string, import(\"../layer/Layer.js\").default>}\n     */\n    this.featureLayerAssociation_ = {};\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {import(\"../layer/Layer.js\").default} layer Layer.\n   * @private\n   */\n  addFeatureLayerAssociation_(feature, layer) {\n    this.featureLayerAssociation_[getUid(feature)] = layer;\n  }\n\n  /**\n   * Get the selected features.\n   * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} Features collection.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @return {number} Hit tolerance in pixels.\n   * @api\n   */\n  getHitTolerance() {\n    return this.hitTolerance_;\n  }\n\n  /**\n   * Returns the associated {@link module:ol/layer/Vector~VectorLayer vector layer} of\n   * a selected feature.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature\n   * @return {import('../layer/Vector.js').default} Layer.\n   * @api\n   */\n  getLayer(feature) {\n    return /** @type {import('../layer/Vector.js').default} */ (\n      this.featureLayerAssociation_[getUid(feature)]\n    );\n  }\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  setHitTolerance(hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  }\n\n  /**\n   * Remove the interaction from its current map, if any,  and attach it to a new\n   * map, if any. Pass `null` to just remove the interaction from the current map.\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    const currentMap = this.getMap();\n    if (currentMap && this.style_) {\n      this.features_.forEach(this.restorePreviousStyle_.bind(this));\n    }\n    super.setMap(map);\n    if (map) {\n      this.features_.addEventListener(\n        CollectionEventType.ADD,\n        this.boundAddFeature_\n      );\n      this.features_.addEventListener(\n        CollectionEventType.REMOVE,\n        this.boundRemoveFeature_\n      );\n\n      if (this.style_) {\n        this.features_.forEach(this.applySelectedStyle_.bind(this));\n      }\n    } else {\n      this.features_.removeEventListener(\n        CollectionEventType.ADD,\n        this.boundAddFeature_\n      );\n      this.features_.removeEventListener(\n        CollectionEventType.REMOVE,\n        this.boundRemoveFeature_\n      );\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  addFeature_(evt) {\n    const feature = evt.element;\n    if (this.style_) {\n      this.applySelectedStyle_(feature);\n    }\n    if (!this.getLayer(feature)) {\n      const layer = /** @type {VectorLayer} */ (\n        this.getMap()\n          .getAllLayers()\n          .find(function (layer) {\n            if (\n              layer instanceof VectorLayer &&\n              layer.getSource() &&\n              layer.getSource().hasFeature(feature)\n            ) {\n              return layer;\n            }\n          })\n      );\n      if (layer) {\n        this.addFeatureLayerAssociation_(feature, layer);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  removeFeature_(evt) {\n    const feature = evt.element;\n    if (this.style_) {\n      this.restorePreviousStyle_(feature);\n    }\n  }\n\n  /**\n   * @return {import(\"../style/Style.js\").StyleLike|null} Select style.\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @private\n   */\n  applySelectedStyle_(feature) {\n    const key = getUid(feature);\n    if (!(key in originalFeatureStyles)) {\n      originalFeatureStyles[key] = feature.getStyle();\n    }\n    feature.setStyle(this.style_);\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @private\n   */\n  restorePreviousStyle_(feature) {\n    const interactions = this.getMap().getInteractions().getArray();\n    for (let i = interactions.length - 1; i >= 0; --i) {\n      const interaction = interactions[i];\n      if (\n        interaction !== this &&\n        interaction instanceof Select &&\n        interaction.getStyle() &&\n        interaction.getFeatures().getArray().lastIndexOf(feature) !== -1\n      ) {\n        feature.setStyle(interaction.getStyle());\n        return;\n      }\n    }\n\n    const key = getUid(feature);\n    feature.setStyle(originalFeatureStyles[key]);\n    delete originalFeatureStyles[key];\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @private\n   */\n  removeFeatureLayerAssociation_(feature) {\n    delete this.featureLayerAssociation_[getUid(feature)];\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may change the\n   * selected state of features.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {Select}\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const add = this.addCondition_(mapBrowserEvent);\n    const remove = this.removeCondition_(mapBrowserEvent);\n    const toggle = this.toggleCondition_(mapBrowserEvent);\n    const set = !add && !remove && !toggle;\n    const map = mapBrowserEvent.map;\n    const features = this.getFeatures();\n    const deselected = [];\n    const selected = [];\n    if (set) {\n      // Replace the currently selected feature(s) with the feature(s) at the\n      // pixel, or clear the selected feature(s) if there is no feature at\n      // the pixel.\n      clear(this.featureLayerAssociation_);\n      map.forEachFeatureAtPixel(\n        mapBrowserEvent.pixel,\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function (feature, layer) {\n          if (this.filter_(feature, layer)) {\n            this.addFeatureLayerAssociation_(feature, layer);\n            selected.push(feature);\n            return !this.multi_;\n          }\n        }.bind(this),\n        {\n          layerFilter: this.layerFilter_,\n          hitTolerance: this.hitTolerance_,\n        }\n      );\n      for (let i = features.getLength() - 1; i >= 0; --i) {\n        const feature = features.item(i);\n        const index = selected.indexOf(feature);\n        if (index > -1) {\n          // feature is already selected\n          selected.splice(index, 1);\n        } else {\n          features.remove(feature);\n          deselected.push(feature);\n        }\n      }\n      if (selected.length !== 0) {\n        features.extend(selected);\n      }\n    } else {\n      // Modify the currently selected feature(s).\n      map.forEachFeatureAtPixel(\n        mapBrowserEvent.pixel,\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function (feature, layer) {\n          if (this.filter_(feature, layer)) {\n            if ((add || toggle) && !includes(features.getArray(), feature)) {\n              this.addFeatureLayerAssociation_(feature, layer);\n              selected.push(feature);\n            } else if (\n              (remove || toggle) &&\n              includes(features.getArray(), feature)\n            ) {\n              deselected.push(feature);\n              this.removeFeatureLayerAssociation_(feature);\n            }\n            return !this.multi_;\n          }\n        }.bind(this),\n        {\n          layerFilter: this.layerFilter_,\n          hitTolerance: this.hitTolerance_,\n        }\n      );\n      for (let j = deselected.length - 1; j >= 0; --j) {\n        features.remove(deselected[j]);\n      }\n      features.extend(selected);\n    }\n    if (selected.length > 0 || deselected.length > 0) {\n      this.dispatchEvent(\n        new SelectEvent(\n          SelectEventType.SELECT,\n          selected,\n          deselected,\n          mapBrowserEvent\n        )\n      );\n    }\n    return true;\n  }\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  extend(styles['Polygon'], styles['LineString']);\n  extend(styles['GeometryCollection'], styles['LineString']);\n\n  return function (feature) {\n    if (!feature.getGeometry()) {\n      return null;\n    }\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\nexport default Select;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}