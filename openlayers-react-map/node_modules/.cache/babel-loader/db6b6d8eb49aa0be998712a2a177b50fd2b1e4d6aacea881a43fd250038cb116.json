{"ast":null,"code":"/**\n * @module ol/geom/flat/contains\n */\nimport { forEachCorner } from '../../extent.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n  var outside = forEachCorner(extent,\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains (x, y).\n   */\n  function (coordinate) {\n    return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n  });\n  return !outside;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  var wn = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (var i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n      return false;\n    }\n  }\n  return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}","map":{"version":3,"names":["forEachCorner","linearRingContainsExtent","flatCoordinates","offset","end","stride","extent","outside","coordinate","linearRingContainsXY","x","y","wn","x1","y1","x2","y2","linearRingsContainsXY","ends","length","i","ii","linearRingssContainsXY","endss"],"sources":["C:\\Users\\ncarl\\Desktop\\sketch\\openlayers-react-map\\node_modules\\ol\\src\\geom\\flat\\contains.js"],"sourcesContent":["/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}