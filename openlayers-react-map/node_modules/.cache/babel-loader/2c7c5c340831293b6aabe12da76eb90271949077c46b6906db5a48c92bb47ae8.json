{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/interaction/DragRotateAndZoom\n */\nimport PointerInteraction from './Pointer.js';\nimport { mouseOnly, shiftKeyOnly } from '../events/condition.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to zoom and rotate the map by clicking and dragging\n * on the map.  By default, this interaction is limited to when the shift\n * key is held down.\n *\n * This interaction is only supported for mouse devices.\n *\n * And this interaction is not included in the default interactions.\n * @api\n */\nvar DragRotateAndZoom = /** @class */function (_super) {\n  __extends(DragRotateAndZoom, _super);\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  function DragRotateAndZoom(opt_options) {\n    var _this = this;\n    var options = opt_options ? opt_options : {};\n    _this = _super.call(this, /** @type {import(\"./Pointer.js\").Options} */options) || this;\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    _this.condition_ = options.condition ? options.condition : shiftKeyOnly;\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    _this.lastAngle_ = undefined;\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    _this.lastMagnitude_ = undefined;\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.lastScaleDelta_ = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.duration_ = options.duration !== undefined ? options.duration : 400;\n    return _this;\n  }\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  DragRotateAndZoom.prototype.handleDragEvent = function (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n    var map = mapBrowserEvent.map;\n    var size = map.getSize();\n    var offset = mapBrowserEvent.pixel;\n    var deltaX = offset[0] - size[0] / 2;\n    var deltaY = size[1] / 2 - offset[1];\n    var theta = Math.atan2(deltaY, deltaX);\n    var magnitude = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n    var view = map.getView();\n    if (this.lastAngle_ !== undefined) {\n      var angleDelta = this.lastAngle_ - theta;\n      view.adjustRotationInternal(angleDelta);\n    }\n    this.lastAngle_ = theta;\n    if (this.lastMagnitude_ !== undefined) {\n      view.adjustResolutionInternal(this.lastMagnitude_ / magnitude);\n    }\n    if (this.lastMagnitude_ !== undefined) {\n      this.lastScaleDelta_ = this.lastMagnitude_ / magnitude;\n    }\n    this.lastMagnitude_ = magnitude;\n  };\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  DragRotateAndZoom.prototype.handleUpEvent = function (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    var direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n    view.endInteraction(this.duration_, direction);\n    this.lastScaleDelta_ = 0;\n    return false;\n  };\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  DragRotateAndZoom.prototype.handleDownEvent = function (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n    if (this.condition_(mapBrowserEvent)) {\n      mapBrowserEvent.map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      this.lastMagnitude_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  };\n  return DragRotateAndZoom;\n}(PointerInteraction);\nexport default DragRotateAndZoom;","map":{"version":3,"names":["PointerInteraction","mouseOnly","shiftKeyOnly","DragRotateAndZoom","_super","__extends","opt_options","_this","options","call","condition_","condition","lastAngle_","undefined","lastMagnitude_","lastScaleDelta_","duration_","duration","prototype","handleDragEvent","mapBrowserEvent","map","size","getSize","offset","pixel","deltaX","deltaY","theta","Math","atan2","magnitude","sqrt","view","getView","angleDelta","adjustRotationInternal","adjustResolutionInternal","handleUpEvent","direction","endInteraction","handleDownEvent","beginInteraction"],"sources":["C:\\Users\\ncarl\\Desktop\\sketch\\openlayers-react-map\\node_modules\\ol\\src\\interaction\\DragRotateAndZoom.js"],"sourcesContent":["/**\n * @module ol/interaction/DragRotateAndZoom\n */\nimport PointerInteraction from './Pointer.js';\nimport {mouseOnly, shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom and rotate the map by clicking and dragging\n * on the map.  By default, this interaction is limited to when the shift\n * key is held down.\n *\n * This interaction is only supported for mouse devices.\n *\n * And this interaction is not included in the default interactions.\n * @api\n */\nclass DragRotateAndZoom extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastMagnitude_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const deltaX = offset[0] - size[0] / 2;\n    const deltaY = size[1] / 2 - offset[1];\n    const theta = Math.atan2(deltaY, deltaX);\n    const magnitude = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n    const view = map.getView();\n    if (this.lastAngle_ !== undefined) {\n      const angleDelta = this.lastAngle_ - theta;\n      view.adjustRotationInternal(angleDelta);\n    }\n    this.lastAngle_ = theta;\n    if (this.lastMagnitude_ !== undefined) {\n      view.adjustResolutionInternal(this.lastMagnitude_ / magnitude);\n    }\n    if (this.lastMagnitude_ !== undefined) {\n      this.lastScaleDelta_ = this.lastMagnitude_ / magnitude;\n    }\n    this.lastMagnitude_ = magnitude;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n    view.endInteraction(this.duration_, direction);\n    this.lastScaleDelta_ = 0;\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (this.condition_(mapBrowserEvent)) {\n      mapBrowserEvent.map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      this.lastMagnitude_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragRotateAndZoom;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}