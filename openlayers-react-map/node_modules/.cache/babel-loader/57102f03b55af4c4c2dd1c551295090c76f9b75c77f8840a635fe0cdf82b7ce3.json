{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/interaction/Translate\n */\nimport Collection from '../Collection.js';\nimport Event from '../events/Event.js';\nimport InteractionProperty from './Property.js';\nimport PointerInteraction from './Pointer.js';\nimport { TRUE } from '../functions.js';\nimport { always } from '../events/condition.js';\nimport { includes } from '../array.js';\n/**\n * @enum {string}\n */\nvar TranslateEventType = {\n  /**\n   * Triggered upon feature translation start.\n   * @event TranslateEvent#translatestart\n   * @api\n   */\n  TRANSLATESTART: 'translatestart',\n  /**\n   * Triggered upon feature translation.\n   * @event TranslateEvent#translating\n   * @api\n   */\n  TRANSLATING: 'translating',\n  /**\n   * Triggered upon feature translation end.\n   * @event TranslateEvent#translateend\n   * @api\n   */\n  TRANSLATEEND: 'translateend'\n};\n/**\n * A function that takes an {@link module:ol/Feature~Feature} or\n * {@link module:ol/render/Feature~RenderFeature} and an\n * {@link module:ol/layer/Layer~Layer} and returns `true` if the feature may be\n * translated or `false` otherwise.\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>):boolean} FilterFunction\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.always}.\n * @property {Collection<import(\"../Feature.js\").default>} [features] Features contained in this collection will be able to be translated together.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} [layers] A list of layers from which features should be\n * translated. Alternatively, a filter function can be provided. The\n * function will be called for each layer in the map and should return\n * `true` for layers that you want to be translatable. If the option is\n * absent, all visible layers will be considered translatable.\n * Not used if `features` is provided.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature~Feature} and an\n * {@link module:ol/layer/Layer~Layer} and returns `true` if the feature may be\n * translated or `false` otherwise. Not used if `features` is provided.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features.\n */\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Translate~Translate} instances\n * are instances of this type.\n */\nvar TranslateEvent = /** @class */function (_super) {\n  __extends(TranslateEvent, _super);\n  /**\n   * @param {TranslateEventType} type Type.\n   * @param {Collection<import(\"../Feature.js\").default>} features The features translated.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} startCoordinate The original coordinates before.translation started\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   */\n  function TranslateEvent(type, features, coordinate, startCoordinate, mapBrowserEvent) {\n    var _this = _super.call(this, type) || this;\n    /**\n     * The features being translated.\n     * @type {Collection<import(\"../Feature.js\").default>}\n     * @api\n     */\n    _this.features = features;\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    _this.coordinate = coordinate;\n    /**\n     * The coordinate of the start position before translation started.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    _this.startCoordinate = startCoordinate;\n    /**\n     * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    _this.mapBrowserEvent = mapBrowserEvent;\n    return _this;\n  }\n  return TranslateEvent;\n}(Event);\nexport { TranslateEvent };\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'translateend'|'translatestart'|'translating', TranslateEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'translateend'|'translatestart'|'translating', Return>} TranslateOnSignature\n */\n/**\n * @classdesc\n * Interaction for translating (moving) features.\n * If you want to translate multiple features in a single action (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.\n *\n * @fires TranslateEvent\n * @api\n */\nvar Translate = /** @class */function (_super) {\n  __extends(Translate, _super);\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  function Translate(opt_options) {\n    var _this = this;\n    var options = opt_options ? opt_options : {};\n    _this = _super.call(this, /** @type {import(\"./Pointer.js\").Options} */options) || this;\n    /***\n     * @type {TranslateOnSignature<import(\"../events\").EventsKey>}\n     */\n    _this.on;\n    /***\n     * @type {TranslateOnSignature<import(\"../events\").EventsKey>}\n     */\n    _this.once;\n    /***\n     * @type {TranslateOnSignature<void>}\n     */\n    _this.un;\n    /**\n     * The last position we translated to.\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    _this.lastCoordinate_ = null;\n    /**\n     * The start position before translation started.\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    _this.startCoordinate_ = null;\n    /**\n     * @type {Collection<import(\"../Feature.js\").default>|null}\n     * @private\n     */\n    _this.features_ = options.features !== undefined ? options.features : null;\n    /** @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} */\n    var layerFilter;\n    if (options.layers && !_this.features_) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        var layers_1 = options.layers;\n        layerFilter = function (layer) {\n          return includes(layers_1, layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean}\n     */\n    _this.layerFilter_ = layerFilter;\n    /**\n     * @private\n     * @type {FilterFunction}\n     */\n    _this.filter_ = options.filter && !_this.features_ ? options.filter : TRUE;\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    _this.condition_ = options.condition ? options.condition : always;\n    /**\n     * @type {import(\"../Feature.js\").default}\n     * @private\n     */\n    _this.lastFeature_ = null;\n    _this.addChangeListener(InteractionProperty.ACTIVE, _this.handleActiveChanged_);\n    return _this;\n  }\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  Translate.prototype.handleDownEvent = function (event) {\n    if (!event.originalEvent || !this.condition_(event)) {\n      return false;\n    }\n    this.lastFeature_ = this.featuresAtPixel_(event.pixel, event.map);\n    if (!this.lastCoordinate_ && this.lastFeature_) {\n      this.startCoordinate_ = event.coordinate;\n      this.lastCoordinate_ = event.coordinate;\n      this.handleMoveEvent(event);\n      var features = this.features_ || new Collection([this.lastFeature_]);\n      this.dispatchEvent(new TranslateEvent(TranslateEventType.TRANSLATESTART, features, event.coordinate, this.startCoordinate_, event));\n      return true;\n    }\n    return false;\n  };\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  Translate.prototype.handleUpEvent = function (event) {\n    if (this.lastCoordinate_) {\n      this.lastCoordinate_ = null;\n      this.handleMoveEvent(event);\n      var features = this.features_ || new Collection([this.lastFeature_]);\n      this.dispatchEvent(new TranslateEvent(TranslateEventType.TRANSLATEEND, features, event.coordinate, this.startCoordinate_, event));\n      // cleanup\n      this.startCoordinate_ = null;\n      return true;\n    }\n    return false;\n  };\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  Translate.prototype.handleDragEvent = function (event) {\n    if (this.lastCoordinate_) {\n      var newCoordinate = event.coordinate;\n      var deltaX_1 = newCoordinate[0] - this.lastCoordinate_[0];\n      var deltaY_1 = newCoordinate[1] - this.lastCoordinate_[1];\n      var features = this.features_ || new Collection([this.lastFeature_]);\n      features.forEach(function (feature) {\n        var geom = feature.getGeometry();\n        geom.translate(deltaX_1, deltaY_1);\n        feature.setGeometry(geom);\n      });\n      this.lastCoordinate_ = newCoordinate;\n      this.dispatchEvent(new TranslateEvent(TranslateEventType.TRANSLATING, features, newCoordinate, this.startCoordinate_, event));\n    }\n  };\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  Translate.prototype.handleMoveEvent = function (event) {\n    var elem = event.map.getViewport();\n    // Change the cursor to grab/grabbing if hovering any of the features managed\n    // by the interaction\n    if (this.featuresAtPixel_(event.pixel, event.map)) {\n      elem.classList.remove(this.lastCoordinate_ ? 'ol-grab' : 'ol-grabbing');\n      elem.classList.add(this.lastCoordinate_ ? 'ol-grabbing' : 'ol-grab');\n    } else {\n      elem.classList.remove('ol-grab', 'ol-grabbing');\n    }\n  };\n  /**\n   * Tests to see if the given coordinates intersects any of our selected\n   * features.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel coordinate to test for intersection.\n   * @param {import(\"../PluggableMap.js\").default} map Map to test the intersection on.\n   * @return {import(\"../Feature.js\").default} Returns the feature found at the specified pixel\n   * coordinates.\n   * @private\n   */\n  Translate.prototype.featuresAtPixel_ = function (pixel, map) {\n    return map.forEachFeatureAtPixel(pixel, function (feature, layer) {\n      if (this.filter_(feature, layer)) {\n        if (!this.features_ || includes(this.features_.getArray(), feature)) {\n          return feature;\n        }\n      }\n    }.bind(this), {\n      layerFilter: this.layerFilter_,\n      hitTolerance: this.hitTolerance_\n    });\n  };\n  /**\n   * Returns the Hit-detection tolerance.\n   * @return {number} Hit tolerance in pixels.\n   * @api\n   */\n  Translate.prototype.getHitTolerance = function () {\n    return this.hitTolerance_;\n  };\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  Translate.prototype.setHitTolerance = function (hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  };\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  Translate.prototype.setMap = function (map) {\n    var oldMap = this.getMap();\n    _super.prototype.setMap.call(this, map);\n    this.updateState_(oldMap);\n  };\n  /**\n   * @private\n   */\n  Translate.prototype.handleActiveChanged_ = function () {\n    this.updateState_(null);\n  };\n  /**\n   * @param {import(\"../PluggableMap.js\").default} oldMap Old map.\n   * @private\n   */\n  Translate.prototype.updateState_ = function (oldMap) {\n    var map = this.getMap();\n    var active = this.getActive();\n    if (!map || !active) {\n      map = map || oldMap;\n      if (map) {\n        var elem = map.getViewport();\n        elem.classList.remove('ol-grab', 'ol-grabbing');\n      }\n    }\n  };\n  return Translate;\n}(PointerInteraction);\nexport default Translate;","map":{"version":3,"names":["Collection","Event","InteractionProperty","PointerInteraction","TRUE","always","includes","TranslateEventType","TRANSLATESTART","TRANSLATING","TRANSLATEEND","TranslateEvent","_super","__extends","type","features","coordinate","startCoordinate","mapBrowserEvent","_this","call","Translate","opt_options","options","on","once","un","lastCoordinate_","startCoordinate_","features_","undefined","layerFilter","layers","layers_1","layer","layerFilter_","filter_","filter","hitTolerance_","hitTolerance","condition_","condition","lastFeature_","addChangeListener","ACTIVE","handleActiveChanged_","prototype","handleDownEvent","event","originalEvent","featuresAtPixel_","pixel","map","handleMoveEvent","dispatchEvent","handleUpEvent","handleDragEvent","newCoordinate","deltaX_1","deltaY_1","forEach","feature","geom","getGeometry","translate","setGeometry","elem","getViewport","classList","remove","add","forEachFeatureAtPixel","getArray","bind","getHitTolerance","setHitTolerance","setMap","oldMap","getMap","updateState_","active","getActive"],"sources":["C:\\Users\\ncarl\\Desktop\\sketch\\openlayers-react-map\\node_modules\\ol\\src\\interaction\\Translate.js"],"sourcesContent":["/**\n * @module ol/interaction/Translate\n */\nimport Collection from '../Collection.js';\nimport Event from '../events/Event.js';\nimport InteractionProperty from './Property.js';\nimport PointerInteraction from './Pointer.js';\nimport {TRUE} from '../functions.js';\nimport {always} from '../events/condition.js';\nimport {includes} from '../array.js';\n\n/**\n * @enum {string}\n */\nconst TranslateEventType = {\n  /**\n   * Triggered upon feature translation start.\n   * @event TranslateEvent#translatestart\n   * @api\n   */\n  TRANSLATESTART: 'translatestart',\n  /**\n   * Triggered upon feature translation.\n   * @event TranslateEvent#translating\n   * @api\n   */\n  TRANSLATING: 'translating',\n  /**\n   * Triggered upon feature translation end.\n   * @event TranslateEvent#translateend\n   * @api\n   */\n  TRANSLATEEND: 'translateend',\n};\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} or\n * {@link module:ol/render/Feature~RenderFeature} and an\n * {@link module:ol/layer/Layer~Layer} and returns `true` if the feature may be\n * translated or `false` otherwise.\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>):boolean} FilterFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.always}.\n * @property {Collection<import(\"../Feature.js\").default>} [features] Features contained in this collection will be able to be translated together.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} [layers] A list of layers from which features should be\n * translated. Alternatively, a filter function can be provided. The\n * function will be called for each layer in the map and should return\n * `true` for layers that you want to be translatable. If the option is\n * absent, all visible layers will be considered translatable.\n * Not used if `features` is provided.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature~Feature} and an\n * {@link module:ol/layer/Layer~Layer} and returns `true` if the feature may be\n * translated or `false` otherwise. Not used if `features` is provided.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Translate~Translate} instances\n * are instances of this type.\n */\nexport class TranslateEvent extends Event {\n  /**\n   * @param {TranslateEventType} type Type.\n   * @param {Collection<import(\"../Feature.js\").default>} features The features translated.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} startCoordinate The original coordinates before.translation started\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   */\n  constructor(type, features, coordinate, startCoordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The features being translated.\n     * @type {Collection<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * The coordinate of the start position before translation started.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.startCoordinate = startCoordinate;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'translateend'|'translatestart'|'translating', TranslateEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'translateend'|'translatestart'|'translating', Return>} TranslateOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for translating (moving) features.\n * If you want to translate multiple features in a single action (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.\n *\n * @fires TranslateEvent\n * @api\n */\nclass Translate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /***\n     * @type {TranslateOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TranslateOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TranslateOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * The last position we translated to.\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.lastCoordinate_ = null;\n\n    /**\n     * The start position before translation started.\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.startCoordinate_ = null;\n\n    /**\n     * @type {Collection<import(\"../Feature.js\").default>|null}\n     * @private\n     */\n    this.features_ = options.features !== undefined ? options.features : null;\n\n    /** @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} */\n    let layerFilter;\n    if (options.layers && !this.features_) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        const layers = options.layers;\n        layerFilter = function (layer) {\n          return includes(layers, layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * @private\n     * @type {FilterFunction}\n     */\n    this.filter_ = options.filter && !this.features_ ? options.filter : TRUE;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n     * @type {import(\"../Feature.js\").default}\n     * @private\n     */\n    this.lastFeature_ = null;\n\n    this.addChangeListener(\n      InteractionProperty.ACTIVE,\n      this.handleActiveChanged_\n    );\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(event) {\n    if (!event.originalEvent || !this.condition_(event)) {\n      return false;\n    }\n    this.lastFeature_ = this.featuresAtPixel_(event.pixel, event.map);\n    if (!this.lastCoordinate_ && this.lastFeature_) {\n      this.startCoordinate_ = event.coordinate;\n      this.lastCoordinate_ = event.coordinate;\n      this.handleMoveEvent(event);\n\n      const features = this.features_ || new Collection([this.lastFeature_]);\n\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATESTART,\n          features,\n          event.coordinate,\n          this.startCoordinate_,\n          event\n        )\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(event) {\n    if (this.lastCoordinate_) {\n      this.lastCoordinate_ = null;\n      this.handleMoveEvent(event);\n\n      const features = this.features_ || new Collection([this.lastFeature_]);\n\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATEEND,\n          features,\n          event.coordinate,\n          this.startCoordinate_,\n          event\n        )\n      );\n      // cleanup\n      this.startCoordinate_ = null;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  handleDragEvent(event) {\n    if (this.lastCoordinate_) {\n      const newCoordinate = event.coordinate;\n      const deltaX = newCoordinate[0] - this.lastCoordinate_[0];\n      const deltaY = newCoordinate[1] - this.lastCoordinate_[1];\n\n      const features = this.features_ || new Collection([this.lastFeature_]);\n\n      features.forEach(function (feature) {\n        const geom = feature.getGeometry();\n        geom.translate(deltaX, deltaY);\n        feature.setGeometry(geom);\n      });\n\n      this.lastCoordinate_ = newCoordinate;\n\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATING,\n          features,\n          newCoordinate,\n          this.startCoordinate_,\n          event\n        )\n      );\n    }\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  handleMoveEvent(event) {\n    const elem = event.map.getViewport();\n\n    // Change the cursor to grab/grabbing if hovering any of the features managed\n    // by the interaction\n    if (this.featuresAtPixel_(event.pixel, event.map)) {\n      elem.classList.remove(this.lastCoordinate_ ? 'ol-grab' : 'ol-grabbing');\n      elem.classList.add(this.lastCoordinate_ ? 'ol-grabbing' : 'ol-grab');\n    } else {\n      elem.classList.remove('ol-grab', 'ol-grabbing');\n    }\n  }\n\n  /**\n   * Tests to see if the given coordinates intersects any of our selected\n   * features.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel coordinate to test for intersection.\n   * @param {import(\"../PluggableMap.js\").default} map Map to test the intersection on.\n   * @return {import(\"../Feature.js\").default} Returns the feature found at the specified pixel\n   * coordinates.\n   * @private\n   */\n  featuresAtPixel_(pixel, map) {\n    return map.forEachFeatureAtPixel(\n      pixel,\n      function (feature, layer) {\n        if (this.filter_(feature, layer)) {\n          if (!this.features_ || includes(this.features_.getArray(), feature)) {\n            return feature;\n          }\n        }\n      }.bind(this),\n      {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_,\n      }\n    );\n  }\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @return {number} Hit tolerance in pixels.\n   * @api\n   */\n  getHitTolerance() {\n    return this.hitTolerance_;\n  }\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  setHitTolerance(hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    super.setMap(map);\n    this.updateState_(oldMap);\n  }\n\n  /**\n   * @private\n   */\n  handleActiveChanged_() {\n    this.updateState_(null);\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} oldMap Old map.\n   * @private\n   */\n  updateState_(oldMap) {\n    let map = this.getMap();\n    const active = this.getActive();\n    if (!map || !active) {\n      map = map || oldMap;\n      if (map) {\n        const elem = map.getViewport();\n        elem.classList.remove('ol-grab', 'ol-grabbing');\n      }\n    }\n  }\n}\n\nexport default Translate;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}