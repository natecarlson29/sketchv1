{"ast":null,"code":"import React,{useState,useRef,useEffect}from\"react\";import{QuickShapeIcon}from\"../svg\";import Draw from\"ol/interaction/Draw\";import Polygon,{fromCircle}from\"ol/geom/Polygon\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SHAPES=[{name:\"Circle\",value:\"circle\"},{name:\"Triangle\",value:\"triangle\"},{name:\"Square\",value:\"square\"}];export default function QuickShape(_ref){let{mapRef,vectorSourceRef,setDrawing,setMode,addHistoryAction,mode}=_ref;const[open,setOpen]=useState(false);const menuRef=useRef();const drawRef=useRef(null);// Close menu if clicked outside\nuseEffect(()=>{function handleClickOutside(e){if(menuRef.current&&!menuRef.current.contains(e.target)){setOpen(false);}}if(open){document.addEventListener(\"mousedown\",handleClickOutside);}return()=>document.removeEventListener(\"mousedown\",handleClickOutside);},[open]);// Cleanup draw interaction on unmount\nuseEffect(()=>{const map=mapRef.current;// capture the current map instance\nreturn()=>{if(drawRef.current&&map){map.removeInteraction(drawRef.current);drawRef.current=null;}};},[mapRef]);function handleShapeClick(shape){setOpen(false);if(shape.value===\"circle\"&&mapRef.current&&vectorSourceRef.current){// Remove any existing draw interaction\nif(drawRef.current){mapRef.current.removeInteraction(drawRef.current);drawRef.current=null;}// Add new draw interaction for circle\nconst draw=new Draw({source:vectorSourceRef.current,type:\"Circle\"});mapRef.current.addInteraction(draw);drawRef.current=draw;setDrawing(true);setMode(\"circle\");draw.on(\"drawend\",evt=>{const circleGeom=evt.feature.getGeometry();const polygonGeom=fromCircle(circleGeom,64);evt.feature.setGeometry(polygonGeom);evt.feature.setStyle('no-measurements',true);// Ensure the feature has an ID for undo/redo\nif(!evt.feature.getId()){evt.feature.setId(Date.now().toString());}addHistoryAction({type:\"draw-circle\",featureId:evt.feature.getId(),coords:polygonGeom.getCoordinates()});setDrawing(false);setMode(\"select\");if(drawRef.current){mapRef.current.removeInteraction(drawRef.current);drawRef.current=null;}});}// You can add similar logic for triangle/square here in the future\n}return/*#__PURE__*/_jsxs(\"div\",{ref:menuRef,style:{position:\"relative\",display:\"inline-block\"},children:[/*#__PURE__*/_jsx(\"button\",{title:\"Quick Shape\",className:\"map-button\".concat(mode==='circle'?' active':''),onClick:()=>setOpen(v=>!v),style:{display:\"flex\",alignItems:\"center\",justifyContent:\"center\"}// disabled={drawing}\n,children:/*#__PURE__*/_jsx(QuickShapeIcon,{style:{width:24,height:24}})}),open&&/*#__PURE__*/_jsx(\"div\",{style:{position:\"absolute\",top:\"50%\",left:\"110%\",transform:\"translateY(-50%)\",background:\"#fff\",border:\"1px solid #ccc\",borderRadius:4,boxShadow:\"0 2px 8px rgba(0,0,0,0.15)\",zIndex:10,padding:4,display:\"flex\",flexDirection:\"column\",alignItems:\"center\"},children:SHAPES.map(shape=>/*#__PURE__*/_jsx(\"div\",{style:{position:\"relative\",width:\"60%\",padding:\"6px 12px\",cursor:\"pointer\",textAlign:\"center\",borderRadius:3,margin:2,transition:\"background 0.2s\"},className:\"quickshape-item\",onClick:()=>handleShapeClick(shape),onMouseDown:e=>e.preventDefault()// Prevents button blur\n,children:shape.name},shape.value))})]});}","map":{"version":3,"names":["React","useState","useRef","useEffect","QuickShapeIcon","Draw","Polygon","fromCircle","jsx","_jsx","jsxs","_jsxs","SHAPES","name","value","QuickShape","_ref","mapRef","vectorSourceRef","setDrawing","setMode","addHistoryAction","mode","open","setOpen","menuRef","drawRef","handleClickOutside","e","current","contains","target","document","addEventListener","removeEventListener","map","removeInteraction","handleShapeClick","shape","draw","source","type","addInteraction","on","evt","circleGeom","feature","getGeometry","polygonGeom","setGeometry","setStyle","getId","setId","Date","now","toString","featureId","coords","getCoordinates","ref","style","position","display","children","title","className","concat","onClick","v","alignItems","justifyContent","width","height","top","left","transform","background","border","borderRadius","boxShadow","zIndex","padding","flexDirection","cursor","textAlign","margin","transition","onMouseDown","preventDefault"],"sources":["C:/Users/ncarl/Desktop/sketch/openlayers-react-map/src/map-actions/QuickShape.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport { QuickShapeIcon } from \"../svg\";\r\nimport Draw from \"ol/interaction/Draw\";\r\nimport Polygon, { fromCircle } from \"ol/geom/Polygon\";\r\n\r\nconst SHAPES = [\r\n  { name: \"Circle\", value: \"circle\" },\r\n  { name: \"Triangle\", value: \"triangle\" },\r\n  { name: \"Square\", value: \"square\" },\r\n];\r\n\r\nexport default function QuickShape({ mapRef, vectorSourceRef, setDrawing, setMode, addHistoryAction, mode }) {\r\n  const [open, setOpen] = useState(false);\r\n  const menuRef = useRef();\r\n  const drawRef = useRef(null);\r\n\r\n  // Close menu if clicked outside\r\n  useEffect(() => {\r\n    function handleClickOutside(e) {\r\n      if (menuRef.current && !menuRef.current.contains(e.target)) {\r\n        setOpen(false);\r\n      }\r\n    }\r\n    if (open) {\r\n      document.addEventListener(\"mousedown\", handleClickOutside);\r\n    }\r\n    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n  }, [open]);\r\n\r\n  // Cleanup draw interaction on unmount\r\n  useEffect(() => {\r\n    const map = mapRef.current; // capture the current map instance\r\n\r\n    return () => {\r\n      if (drawRef.current && map) {\r\n        map.removeInteraction(drawRef.current);\r\n        drawRef.current = null;\r\n      }\r\n    };\r\n  }, [mapRef]);\r\n\r\n  function handleShapeClick(shape) {\r\n    setOpen(false);\r\n    if (shape.value === \"circle\" && mapRef.current && vectorSourceRef.current) {\r\n      // Remove any existing draw interaction\r\n      if (drawRef.current) {\r\n        mapRef.current.removeInteraction(drawRef.current);\r\n        drawRef.current = null;\r\n      }\r\n      // Add new draw interaction for circle\r\n      const draw = new Draw({\r\n        source: vectorSourceRef.current,\r\n        type: \"Circle\",\r\n      });\r\n      mapRef.current.addInteraction(draw);\r\n      drawRef.current = draw;\r\n      setDrawing(true);\r\n      setMode(\"circle\");\r\n\r\n      draw.on(\"drawend\", (evt) => {\r\n        const circleGeom = evt.feature.getGeometry();\r\n        const polygonGeom = fromCircle(circleGeom, 64);\r\n        evt.feature.setGeometry(polygonGeom);\r\n        evt.feature.setStyle('no-measurements', true);\r\n\r\n        // Ensure the feature has an ID for undo/redo\r\n        if (!evt.feature.getId()) {\r\n          evt.feature.setId(Date.now().toString());\r\n        }\r\n\r\n        addHistoryAction({\r\n          type: \"draw-circle\",\r\n          featureId: evt.feature.getId(),\r\n          coords: polygonGeom.getCoordinates(),\r\n        });\r\n\r\n        setDrawing(false);\r\n        setMode(\"select\");\r\n        if (drawRef.current) {\r\n          mapRef.current.removeInteraction(drawRef.current);\r\n          drawRef.current = null;\r\n        }\r\n      });\r\n    }\r\n    // You can add similar logic for triangle/square here in the future\r\n  }\r\n\r\n  return (\r\n    <div ref={menuRef} style={{ position: \"relative\", display: \"inline-block\" }}>\r\n      <button\r\n        title=\"Quick Shape\"\r\n        className={`map-button${mode === 'circle' ? ' active' : ''}`}\r\n        onClick={() => setOpen((v) => !v)}\r\n        style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}\r\n      // disabled={drawing}\r\n      >\r\n        <QuickShapeIcon style={{ width: 24, height: 24 }} />\r\n      </button>\r\n      {open && (\r\n        <div\r\n          style={{\r\n            position: \"absolute\",\r\n            top: \"50%\",\r\n            left: \"110%\",\r\n            transform: \"translateY(-50%)\",\r\n            background: \"#fff\",\r\n            border: \"1px solid #ccc\",\r\n            borderRadius: 4,\r\n            boxShadow: \"0 2px 8px rgba(0,0,0,0.15)\",\r\n            zIndex: 10,\r\n            padding: 4,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\"\r\n          }}\r\n        >\r\n          {SHAPES.map((shape) => (\r\n            <div\r\n              key={shape.value}\r\n              style={{\r\n                position: \"relative\",\r\n                width: \"60%\",\r\n                padding: \"6px 12px\",\r\n                cursor: \"pointer\",\r\n                textAlign: \"center\",\r\n                borderRadius: 3,\r\n                margin: 2,\r\n                transition: \"background 0.2s\",\r\n              }}\r\n              className=\"quickshape-item\"\r\n              onClick={() => handleShapeClick(shape)}\r\n              onMouseDown={e => e.preventDefault()} // Prevents button blur\r\n            >\r\n              {shape.name}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}