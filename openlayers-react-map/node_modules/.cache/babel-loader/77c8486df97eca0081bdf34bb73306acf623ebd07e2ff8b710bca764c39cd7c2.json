{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ncarl\\\\Desktop\\\\sketch\\\\openlayers-react-map\\\\src\\\\map-actions\\\\RightClick.jsx\";\nimport React from 'react';\nimport { Feature } from 'ol';\nimport LineString from 'ol/geom/LineString';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RightClick = ({\n  mapRef,\n  vectorSourceRef,\n  contextMenu,\n  setContextMenu,\n  clearPolygonOverlays: clearOverlaysProp,\n  setHistory // <-- Pass setHistory from App.jsx\n}) => {\n  // Helper to deep clone coordinates\n  const cloneCoords = coords => coords.map(c => Array.isArray(c) ? [...c] : c);\n  const handleMenuAction = action => {\n    if (!contextMenu.feature) return;\n    const feature = contextMenu.feature;\n    const geometry = feature.getGeometry();\n    let coords = geometry.getCoordinates()[0];\n    if (action === 'delete-segment' && coords.length > 3 && contextMenu.index != null) {\n      // Save previous state for undo\n      const prevCoords = cloneCoords(coords);\n\n      // Remove the segment by removing the vertex at contextMenu.index\n      const newCoords = coords.filter((_, i) => i !== contextMenu.index);\n\n      // Remove overlays for the old feature\n      clearOverlaysProp(feature);\n\n      // Remove the old feature from the source\n      if (vectorSourceRef.current && vectorSourceRef.current.getFeatures().includes(feature)) {\n        vectorSourceRef.current.removeFeature(feature);\n      }\n\n      // Create a new LineString feature with the updated coordinates\n      const lineFeature = new Feature(new LineString(newCoords));\n      // Optionally, set an ID or style if needed\n      vectorSourceRef.current.addFeature(lineFeature);\n\n      // Save action to history for undo\n      setHistory(prev => [...prev, {\n        type: 'delete-segment',\n        featureId: feature.getId(),\n        prevCoords,\n        newCoords,\n        index: contextMenu.index\n      }]);\n      setContextMenu({\n        ...contextMenu,\n        visible: false\n      });\n    }\n    if (action === 'delete-vertex' && coords.length > 4 && contextMenu.index != null) {\n      // Save previous state for undo\n      const prevCoords = cloneCoords(coords);\n\n      // Remove the vertex at contextMenu.index\n      const newCoords = coords.filter((_, i) => i !== contextMenu.index);\n\n      // Remove overlays for the old feature\n      clearOverlaysProp(feature);\n\n      // Remove the old feature from the source\n      if (vectorSourceRef.current && vectorSourceRef.current.getFeatures().includes(feature)) {\n        vectorSourceRef.current.removeFeature(feature);\n      }\n\n      // Create a new Polygon feature with the updated coordinates\n      const Polygon = geometry.constructor;\n      const newFeature = new Feature(new Polygon([newCoords]));\n      // Optionally, set an ID or style if needed\n      vectorSourceRef.current.addFeature(newFeature);\n\n      // Save action to history for undo\n      setHistory(prev => [...prev, {\n        type: 'delete-vertex',\n        featureId: feature.getId(),\n        prevCoords,\n        newCoords,\n        index: contextMenu.index\n      }]);\n      setContextMenu({\n        ...contextMenu,\n        visible: false\n      });\n    }\n  };\n\n  // Render your context menu UI here as needed\n  // Example:\n  return contextMenu.visible ? /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'absolute',\n      left: contextMenu.x,\n      top: contextMenu.y,\n      background: 'white',\n      border: '1px solid #ccc',\n      zIndex: 1000\n    },\n    children: [contextMenu.type === 'segment' && /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => handleMenuAction('delete-segment'),\n      children: \"Delete Segment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this), contextMenu.type === 'vertex' && /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => handleMenuAction('delete-vertex'),\n      children: \"Delete Vertex\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => setContextMenu({\n        ...contextMenu,\n        visible: false\n      }),\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this) : null;\n};\n_c = RightClick;\nexport default RightClick;\nvar _c;\n$RefreshReg$(_c, \"RightClick\");","map":{"version":3,"names":["React","Feature","LineString","jsxDEV","_jsxDEV","RightClick","mapRef","vectorSourceRef","contextMenu","setContextMenu","clearPolygonOverlays","clearOverlaysProp","setHistory","cloneCoords","coords","map","c","Array","isArray","handleMenuAction","action","feature","geometry","getGeometry","getCoordinates","length","index","prevCoords","newCoords","filter","_","i","current","getFeatures","includes","removeFeature","lineFeature","addFeature","prev","type","featureId","getId","visible","Polygon","constructor","newFeature","style","position","left","x","top","y","background","border","zIndex","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ncarl/Desktop/sketch/openlayers-react-map/src/map-actions/RightClick.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Feature } from 'ol';\r\nimport LineString from 'ol/geom/LineString';\r\n\r\nconst RightClick = ({\r\n  mapRef,\r\n  vectorSourceRef,\r\n  contextMenu,\r\n  setContextMenu,\r\n  clearPolygonOverlays: clearOverlaysProp,\r\n  setHistory // <-- Pass setHistory from App.jsx\r\n}) => {\r\n  // Helper to deep clone coordinates\r\n  const cloneCoords = coords => coords.map(c => Array.isArray(c) ? [...c] : c);\r\n\r\n  const handleMenuAction = (action) => {\r\n    if (!contextMenu.feature) return;\r\n\r\n    const feature = contextMenu.feature;\r\n    const geometry = feature.getGeometry();\r\n    let coords = geometry.getCoordinates()[0];\r\n\r\n    if (action === 'delete-segment' && coords.length > 3 && contextMenu.index != null) {\r\n      // Save previous state for undo\r\n      const prevCoords = cloneCoords(coords);\r\n\r\n      // Remove the segment by removing the vertex at contextMenu.index\r\n      const newCoords = coords.filter((_, i) => i !== contextMenu.index);\r\n\r\n      // Remove overlays for the old feature\r\n      clearOverlaysProp(feature);\r\n\r\n      // Remove the old feature from the source\r\n      if (vectorSourceRef.current && vectorSourceRef.current.getFeatures().includes(feature)) {\r\n        vectorSourceRef.current.removeFeature(feature);\r\n      }\r\n\r\n      // Create a new LineString feature with the updated coordinates\r\n      const lineFeature = new Feature(new LineString(newCoords));\r\n      // Optionally, set an ID or style if needed\r\n      vectorSourceRef.current.addFeature(lineFeature);\r\n\r\n      // Save action to history for undo\r\n      setHistory(prev => [\r\n        ...prev,\r\n        {\r\n          type: 'delete-segment',\r\n          featureId: feature.getId(),\r\n          prevCoords,\r\n          newCoords,\r\n          index: contextMenu.index\r\n        }\r\n      ]);\r\n\r\n      setContextMenu({ ...contextMenu, visible: false });\r\n    }\r\n\r\n    if (action === 'delete-vertex' && coords.length > 4 && contextMenu.index != null) {\r\n      // Save previous state for undo\r\n      const prevCoords = cloneCoords(coords);\r\n\r\n      // Remove the vertex at contextMenu.index\r\n      const newCoords = coords.filter((_, i) => i !== contextMenu.index);\r\n\r\n      // Remove overlays for the old feature\r\n      clearOverlaysProp(feature);\r\n\r\n      // Remove the old feature from the source\r\n      if (vectorSourceRef.current && vectorSourceRef.current.getFeatures().includes(feature)) {\r\n        vectorSourceRef.current.removeFeature(feature);\r\n      }\r\n\r\n      // Create a new Polygon feature with the updated coordinates\r\n      const Polygon = geometry.constructor;\r\n      const newFeature = new Feature(new Polygon([newCoords]));\r\n      // Optionally, set an ID or style if needed\r\n      vectorSourceRef.current.addFeature(newFeature);\r\n\r\n      // Save action to history for undo\r\n      setHistory(prev => [\r\n        ...prev,\r\n        {\r\n          type: 'delete-vertex',\r\n          featureId: feature.getId(),\r\n          prevCoords,\r\n          newCoords,\r\n          index: contextMenu.index\r\n        }\r\n      ]);\r\n\r\n      setContextMenu({ ...contextMenu, visible: false });\r\n    }\r\n  };\r\n\r\n  // Render your context menu UI here as needed\r\n  // Example:\r\n  return contextMenu.visible ? (\r\n    <div\r\n      style={{\r\n        position: 'absolute',\r\n        left: contextMenu.x,\r\n        top: contextMenu.y,\r\n        background: 'white',\r\n        border: '1px solid #ccc',\r\n        zIndex: 1000\r\n      }}\r\n    >\r\n      {contextMenu.type === 'segment' && (\r\n        <div onClick={() => handleMenuAction('delete-segment')}>Delete Segment</div>\r\n      )}\r\n      {contextMenu.type === 'vertex' && (\r\n        <div onClick={() => handleMenuAction('delete-vertex')}>Delete Vertex</div>\r\n      )}\r\n      <div onClick={() => setContextMenu({ ...contextMenu, visible: false })}>Cancel</div>\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nexport default RightClick;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}