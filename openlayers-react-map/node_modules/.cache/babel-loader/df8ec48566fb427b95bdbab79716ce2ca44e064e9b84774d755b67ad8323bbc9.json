{"ast":null,"code":"import Style from 'ol/style/Style';\nimport CircleStyle from 'ol/style/Circle';\nimport Fill from 'ol/style/Fill';\nimport Stroke from 'ol/style/Stroke';\nimport Point from 'ol/geom/Point';\nexport const vertexStyle = new Style({\n  image: new CircleStyle({\n    radius: 6,\n    fill: new Fill({\n      color: 'blue'\n    }),\n    stroke: new Stroke({\n      color: 'white',\n      width: 2\n    })\n  })\n});\nexport const polygonStyle = function (feature) {\n  const styles = [new Style({\n    stroke: new Stroke({\n      color: 'blue',\n      width: 3\n    }),\n    fill: new Fill({\n      color: 'rgba(30, 144, 255, 0.1)'\n    })\n  })];\n  // const coords = feature.getGeometry().getCoordinates()[0];\n  // coords.forEach(coord => {\n  //   styles.push(\n  //     new Style({\n  //       geometry: new Point(coord),\n  //       image: new CircleStyle({\n  //         radius: 6,\n  //         fill: new Fill({ color: 'blue' }),\n  //         stroke: new Stroke({ color: 'white', width: 2 }),\n  //       }),\n  //     })\n  //   );\n  // });\n  return styles;\n};\nexport const activePolygonStyle = function (feature) {\n  const styles = [new Style({\n    stroke: new Stroke({\n      color: 'orange',\n      width: 3\n    }),\n    fill: new Fill({\n      color: 'rgba(255, 165, 0, 0.1)'\n    })\n  })];\n  // const coords = feature.getGeometry().getCoordinates()[0];\n  // coords.forEach(coord => {\n  //   styles.push(\n  //     new Style({\n  //       geometry: new Point(coord),\n  //       image: new CircleStyle({\n  //         radius: 6,\n  //         fill: new Fill({ color: 'orange' }),\n  //         stroke: new Stroke({ color: 'white', width: 2 }),\n  //       }),\n  //     })\n  //   );\n  // });\n  return styles;\n};\nexport const selectedPolygonStyle = function (feature) {\n  const styles = [new Style({\n    stroke: new Stroke({\n      color: 'limegreen',\n      width: 3,\n      lineDash: [8, 4]\n    }),\n    fill: new Fill({\n      color: 'rgba(50, 205, 50, 0.15)'\n    })\n  })];\n  // const coords = feature.getGeometry().getCoordinates()[0];\n  // coords.forEach(coord => {\n  //   styles.push(\n  //     new Style({\n  //       geometry: new Point(coord),\n  //       image: new CircleStyle({\n  //         radius: 6,\n  //         fill: new Fill({ color: 'limegreen' }),\n  //         stroke: new Stroke({ color: 'white', width: 2 }),\n  //       }),\n  //     })\n  //   );\n  // });\n  return styles;\n};\nexport const ghostMarkerStyle = new Style({\n  image: new CircleStyle({\n    radius: 7,\n    fill: new Fill({\n      color: 'rgba(0,0,255,0.2)'\n    }),\n    stroke: new Stroke({\n      color: 'blue',\n      width: 2\n    })\n  })\n});","map":{"version":3,"names":["Style","CircleStyle","Fill","Stroke","Point","vertexStyle","image","radius","fill","color","stroke","width","polygonStyle","feature","styles","activePolygonStyle","selectedPolygonStyle","lineDash","ghostMarkerStyle"],"sources":["C:/Users/ncarl/Desktop/sketch/openlayers-react-map/src/ol-styles.js"],"sourcesContent":["import Style from 'ol/style/Style';\r\nimport CircleStyle from 'ol/style/Circle';\r\nimport Fill from 'ol/style/Fill';\r\nimport Stroke from 'ol/style/Stroke';\r\nimport Point from 'ol/geom/Point';\r\n\r\nexport const vertexStyle = new Style({\r\n  image: new CircleStyle({\r\n    radius: 6,\r\n    fill: new Fill({ color: 'blue' }),\r\n    stroke: new Stroke({ color: 'white', width: 2 }),\r\n  }),\r\n});\r\n\r\nexport const polygonStyle = function (feature) {\r\n  const styles = [\r\n    new Style({\r\n      stroke: new Stroke({\r\n        color: 'blue',\r\n        width: 3,\r\n      }),\r\n      fill: new Fill({\r\n        color: 'rgba(30, 144, 255, 0.1)',\r\n      }),\r\n    }),\r\n  ];\r\n  // const coords = feature.getGeometry().getCoordinates()[0];\r\n  // coords.forEach(coord => {\r\n  //   styles.push(\r\n  //     new Style({\r\n  //       geometry: new Point(coord),\r\n  //       image: new CircleStyle({\r\n  //         radius: 6,\r\n  //         fill: new Fill({ color: 'blue' }),\r\n  //         stroke: new Stroke({ color: 'white', width: 2 }),\r\n  //       }),\r\n  //     })\r\n  //   );\r\n  // });\r\n  return styles;\r\n};\r\n\r\nexport const activePolygonStyle = function (feature) {\r\n  const styles = [\r\n    new Style({\r\n      stroke: new Stroke({\r\n        color: 'orange',\r\n        width: 3,\r\n      }),\r\n      fill: new Fill({\r\n        color: 'rgba(255, 165, 0, 0.1)',\r\n      }),\r\n    }),\r\n  ];\r\n  // const coords = feature.getGeometry().getCoordinates()[0];\r\n  // coords.forEach(coord => {\r\n  //   styles.push(\r\n  //     new Style({\r\n  //       geometry: new Point(coord),\r\n  //       image: new CircleStyle({\r\n  //         radius: 6,\r\n  //         fill: new Fill({ color: 'orange' }),\r\n  //         stroke: new Stroke({ color: 'white', width: 2 }),\r\n  //       }),\r\n  //     })\r\n  //   );\r\n  // });\r\n  return styles;\r\n};\r\n\r\nexport const selectedPolygonStyle = function (feature) {\r\n  const styles = [\r\n    new Style({\r\n      stroke: new Stroke({\r\n        color: 'limegreen',\r\n        width: 3,\r\n        lineDash: [8, 4],\r\n      }),\r\n      fill: new Fill({\r\n        color: 'rgba(50, 205, 50, 0.15)',\r\n      }),\r\n    }),\r\n  ];\r\n  // const coords = feature.getGeometry().getCoordinates()[0];\r\n  // coords.forEach(coord => {\r\n  //   styles.push(\r\n  //     new Style({\r\n  //       geometry: new Point(coord),\r\n  //       image: new CircleStyle({\r\n  //         radius: 6,\r\n  //         fill: new Fill({ color: 'limegreen' }),\r\n  //         stroke: new Stroke({ color: 'white', width: 2 }),\r\n  //       }),\r\n  //     })\r\n  //   );\r\n  // });\r\n  return styles;\r\n};\r\n\r\nexport const ghostMarkerStyle = new Style({\r\n  image: new CircleStyle({\r\n    radius: 7,\r\n    fill: new Fill({ color: 'rgba(0,0,255,0.2)' }),\r\n    stroke: new Stroke({ color: 'blue', width: 2 }),\r\n  }),\r\n});"],"mappings":"AAAA,OAAOA,KAAK,MAAM,gBAAgB;AAClC,OAAOC,WAAW,MAAM,iBAAiB;AACzC,OAAOC,IAAI,MAAM,eAAe;AAChC,OAAOC,MAAM,MAAM,iBAAiB;AACpC,OAAOC,KAAK,MAAM,eAAe;AAEjC,OAAO,MAAMC,WAAW,GAAG,IAAIL,KAAK,CAAC;EACnCM,KAAK,EAAE,IAAIL,WAAW,CAAC;IACrBM,MAAM,EAAE,CAAC;IACTC,IAAI,EAAE,IAAIN,IAAI,CAAC;MAAEO,KAAK,EAAE;IAAO,CAAC,CAAC;IACjCC,MAAM,EAAE,IAAIP,MAAM,CAAC;MAAEM,KAAK,EAAE,OAAO;MAAEE,KAAK,EAAE;IAAE,CAAC;EACjD,CAAC;AACH,CAAC,CAAC;AAEF,OAAO,MAAMC,YAAY,GAAG,SAAAA,CAAUC,OAAO,EAAE;EAC7C,MAAMC,MAAM,GAAG,CACb,IAAId,KAAK,CAAC;IACRU,MAAM,EAAE,IAAIP,MAAM,CAAC;MACjBM,KAAK,EAAE,MAAM;MACbE,KAAK,EAAE;IACT,CAAC,CAAC;IACFH,IAAI,EAAE,IAAIN,IAAI,CAAC;MACbO,KAAK,EAAE;IACT,CAAC;EACH,CAAC,CAAC,CACH;EACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,OAAOK,MAAM;AACf,CAAC;AAED,OAAO,MAAMC,kBAAkB,GAAG,SAAAA,CAAUF,OAAO,EAAE;EACnD,MAAMC,MAAM,GAAG,CACb,IAAId,KAAK,CAAC;IACRU,MAAM,EAAE,IAAIP,MAAM,CAAC;MACjBM,KAAK,EAAE,QAAQ;MACfE,KAAK,EAAE;IACT,CAAC,CAAC;IACFH,IAAI,EAAE,IAAIN,IAAI,CAAC;MACbO,KAAK,EAAE;IACT,CAAC;EACH,CAAC,CAAC,CACH;EACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,OAAOK,MAAM;AACf,CAAC;AAED,OAAO,MAAME,oBAAoB,GAAG,SAAAA,CAAUH,OAAO,EAAE;EACrD,MAAMC,MAAM,GAAG,CACb,IAAId,KAAK,CAAC;IACRU,MAAM,EAAE,IAAIP,MAAM,CAAC;MACjBM,KAAK,EAAE,WAAW;MAClBE,KAAK,EAAE,CAAC;MACRM,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC;IACjB,CAAC,CAAC;IACFT,IAAI,EAAE,IAAIN,IAAI,CAAC;MACbO,KAAK,EAAE;IACT,CAAC;EACH,CAAC,CAAC,CACH;EACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,OAAOK,MAAM;AACf,CAAC;AAED,OAAO,MAAMI,gBAAgB,GAAG,IAAIlB,KAAK,CAAC;EACxCM,KAAK,EAAE,IAAIL,WAAW,CAAC;IACrBM,MAAM,EAAE,CAAC;IACTC,IAAI,EAAE,IAAIN,IAAI,CAAC;MAAEO,KAAK,EAAE;IAAoB,CAAC,CAAC;IAC9CC,MAAM,EAAE,IAAIP,MAAM,CAAC;MAAEM,KAAK,EAAE,MAAM;MAAEE,KAAK,EAAE;IAAE,CAAC;EAChD,CAAC;AACH,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}