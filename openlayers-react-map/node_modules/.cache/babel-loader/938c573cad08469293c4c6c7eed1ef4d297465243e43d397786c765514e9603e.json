{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport { TRUE } from '../functions.js';\nimport { abstract } from '../util.js';\nimport { compose as composeTransform, makeInverse } from '../transform.js';\nimport { getWidth } from '../extent.js';\nimport { shared as iconImageCache } from '../style/IconImageCache.js';\nimport { inView } from '../layer/Layer.js';\nimport { wrapX } from '../coordinate.js';\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n/**\n * @abstract\n */\nvar MapRenderer = /** @class */function (_super) {\n  __extends(MapRenderer, _super);\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  function MapRenderer(map) {\n    var _this = _super.call(this) || this;\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    _this.map_ = map;\n    return _this;\n  }\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  MapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n    abstract();\n  };\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  MapRenderer.prototype.calculateMatrices2D = function (frameState) {\n    var viewState = frameState.viewState;\n    var coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n    composeTransform(coordinateToPixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / viewState.resolution, -1 / viewState.resolution, -viewState.rotation, -viewState.center[0], -viewState.center[1]);\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  };\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  MapRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, checkWrapped, callback, thisArg, layerFilter, thisArg2) {\n    var result;\n    var viewState = frameState.viewState;\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n    var projection = viewState.projection;\n    var translatedCoordinate = wrapX(coordinate.slice(), projection);\n    var offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      var projectionExtent = projection.getExtent();\n      var worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n    var matches = /** @type {Array<HitMatch<T>>} */[];\n    var tmpCoord = [];\n    for (var i = 0; i < offsets.length; i++) {\n      for (var j = numLayers - 1; j >= 0; --j) {\n        var layerState = layerStates[j];\n        var layer = layerState.layer;\n        if (layer.hasRenderer() && inView(layerState, viewState) && layerFilter.call(thisArg2, layer)) {\n          var layerRenderer = layer.getRenderer();\n          var source = layer.getSource();\n          if (layerRenderer && source) {\n            var coordinates = source.getWrapX() ? translatedCoordinate : coordinate;\n            var callback_1 = forEachFeatureAtCoordinate.bind(null, layerState.managed);\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(tmpCoord, frameState, hitTolerance, callback_1, matches);\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    var order = 1 / matches.length;\n    matches.forEach(function (m, i) {\n      return m.distanceSq += i * order;\n    });\n    matches.sort(function (a, b) {\n      return a.distanceSq - b.distanceSq;\n    });\n    matches.some(function (m) {\n      return result = m.callback(m.feature, m.layer, m.geometry);\n    });\n    return result;\n  };\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  MapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n    return abstract();\n  };\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  MapRenderer.prototype.hasFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, checkWrapped, layerFilter, thisArg) {\n    var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, checkWrapped, TRUE, this, layerFilter, thisArg);\n    return hasFeature !== undefined;\n  };\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  MapRenderer.prototype.getMap = function () {\n    return this.map_;\n  };\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  MapRenderer.prototype.renderFrame = function (frameState) {\n    abstract();\n  };\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  MapRenderer.prototype.scheduleExpireIconCache = function (frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  };\n  return MapRenderer;\n}(Disposable);\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\nexport default MapRenderer;","map":{"version":3,"names":["Disposable","TRUE","abstract","compose","composeTransform","makeInverse","getWidth","shared","iconImageCache","inView","wrapX","MapRenderer","_super","__extends","map","_this","call","map_","prototype","dispatchRenderEvent","type","frameState","calculateMatrices2D","viewState","coordinateToPixelTransform","pixelToCoordinateTransform","size","resolution","rotation","center","forEachFeatureAtCoordinate","coordinate","hitTolerance","checkWrapped","callback","thisArg","layerFilter","thisArg2","result","managed","feature","layer","geometry","projection","translatedCoordinate","slice","offsets","canWrapX","projectionExtent","getExtent","worldWidth","push","layerStates","layerStatesArray","numLayers","length","matches","tmpCoord","i","j","layerState","hasRenderer","layerRenderer","getRenderer","source","getSource","coordinates","getWrapX","callback_1","bind","undefined","order","forEach","m","distanceSq","sort","a","b","some","forEachLayerAtPixel","pixel","hasFeatureAtCoordinate","hasFeature","getMap","renderFrame","scheduleExpireIconCache","canExpireCache","postRenderFunctions","expireIconCache","expire"],"sources":["C:\\Users\\ncarl\\Desktop\\sketch\\openlayers-react-map\\node_modules\\ol\\src\\renderer\\Map.js"],"sourcesContent":["/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}