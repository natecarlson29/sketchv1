{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\nimport { FALSE } from '../functions.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchZoom = /** @class */function (_super) {\n  __extends(PinchZoom, _super);\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  function PinchZoom(opt_options) {\n    var _this = this;\n    var options = opt_options ? opt_options : {};\n    var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */options;\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n    _this = _super.call(this, pointerOptions) || this;\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    _this.anchor_ = null;\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.duration_ = options.duration !== undefined ? options.duration : 400;\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    _this.lastDistance_ = undefined;\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.lastScaleDelta_ = 1;\n    return _this;\n  }\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  PinchZoom.prototype.handleDragEvent = function (mapBrowserEvent) {\n    var scaleDelta = 1.0;\n    var touch0 = this.targetPointers[0];\n    var touch1 = this.targetPointers[1];\n    var dx = touch0.clientX - touch1.clientX;\n    var dy = touch0.clientY - touch1.clientY;\n    // distance between touches\n    var distance = Math.sqrt(dx * dx + dy * dy);\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n    // scale anchor point.\n    var viewportPosition = map.getViewport().getBoundingClientRect();\n    var centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  };\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  PinchZoom.prototype.handleUpEvent = function (mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      var direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    } else {\n      return true;\n    }\n  };\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  PinchZoom.prototype.handleDownEvent = function (mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      var map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  };\n  return PinchZoom;\n}(PointerInteraction);\nexport default PinchZoom;","map":{"version":3,"names":["PointerInteraction","centroid","centroidFromPointers","FALSE","PinchZoom","_super","__extends","opt_options","_this","options","pointerOptions","stopDown","call","anchor_","duration_","duration","undefined","lastDistance_","lastScaleDelta_","prototype","handleDragEvent","mapBrowserEvent","scaleDelta","touch0","targetPointers","touch1","dx","clientX","dy","clientY","distance","Math","sqrt","map","view","getView","viewportPosition","getViewport","getBoundingClientRect","left","top","getCoordinateFromPixelInternal","render","adjustResolutionInternal","handleUpEvent","length","direction","endInteraction","handleDownEvent","handlingDownUpSequence","beginInteraction"],"sources":["C:\\Users\\ncarl\\Desktop\\sketch\\openlayers-react-map\\node_modules\\ol\\src\\interaction\\PinchZoom.js"],"sourcesContent":["/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchZoom;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}