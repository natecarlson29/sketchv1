{"ast":null,"code":"import React from'react';import Polygon from'ol/geom/Polygon';import LineString from'ol/geom/LineString';// Helper to clear overlays for a specific feature\nimport{jsx as _jsx}from\"react/jsx-runtime\";function clearPolygonOverlays(feature,mapRef){if(feature&&feature._segmentOverlays){feature._segmentOverlays.forEach(overlay=>{if(mapRef.current)mapRef.current.removeOverlay(overlay);});feature._segmentOverlays=[];}}// Flip vertically and remark segments/lines\nfunction flipFeatureVertically(feature,mapRef){clearPolygonOverlays(feature,mapRef);const geom=feature.getGeometry();let coords,ys,axis,flipped;if(geom instanceof Polygon){coords=geom.getCoordinates()[0];ys=coords.map(c=>c[1]);axis=(Math.min(...ys)+Math.max(...ys))/2;flipped=coords.map(_ref=>{let[x,y]=_ref;return[x,axis-(y-axis)];});// Ensure closed ring for polygons\nif(flipped.length>1&&(flipped[0][0]!==flipped[flipped.length-1][0]||flipped[0][1]!==flipped[flipped.length-1][1])){flipped[flipped.length-1]=[...flipped[0]];}geom.setCoordinates([flipped]);// Remark polygon segments\nif(mapRef.current&&mapRef.current.remarkPolygonSegments){mapRef.current.remarkPolygonSegments(feature);}return{prevCoords:coords,newCoords:flipped};}else if(geom instanceof LineString){coords=geom.getCoordinates();ys=coords.map(c=>c[1]);axis=(Math.min(...ys)+Math.max(...ys))/2;flipped=coords.map(_ref2=>{let[x,y]=_ref2;return[x,axis-(y-axis)];});geom.setCoordinates(flipped);// Remark line segments\nif(mapRef.current&&mapRef.current.remarkLineSegments){clearPolygonOverlays(feature,mapRef);mapRef.current.remarkLineSegments(feature);}return{prevCoords:coords,newCoords:flipped};}return null;}export default function FlipVertButton(_ref3){let{selectedFeature,mapRef,addHistoryAction}=_ref3;function handleFlipVert(){if(selectedFeature){const geom=selectedFeature.getGeometry();let prevCoords,newCoords;if(geom instanceof Polygon){prevCoords=geom.getCoordinates()[0].map(c=>[...c]);}else if(geom instanceof LineString){prevCoords=geom.getCoordinates().map(c=>[...c]);}const result=flipFeatureVertically(selectedFeature,mapRef);if(result&&addHistoryAction){addHistoryAction({type:'flip-vertical',featureId:selectedFeature.getId&&selectedFeature.getId(),prevCoords:prevCoords,newCoords:result.newCoords});}}}return/*#__PURE__*/_jsx(\"div\",{className:\"map-button\",onClick:handleFlipVert,children:\"FlipVert\"});}","map":{"version":3,"names":["React","Polygon","LineString","jsx","_jsx","clearPolygonOverlays","feature","mapRef","_segmentOverlays","forEach","overlay","current","removeOverlay","flipFeatureVertically","geom","getGeometry","coords","ys","axis","flipped","getCoordinates","map","c","Math","min","max","_ref","x","y","length","setCoordinates","remarkPolygonSegments","prevCoords","newCoords","_ref2","remarkLineSegments","FlipVertButton","_ref3","selectedFeature","addHistoryAction","handleFlipVert","result","type","featureId","getId","className","onClick","children"],"sources":["C:/Users/ncarl/Desktop/sketch/openlayers-react-map/src/map-actions/FlipVertical.jsx"],"sourcesContent":["import React from 'react';\r\nimport Polygon from 'ol/geom/Polygon';\r\nimport LineString from 'ol/geom/LineString';\r\n\r\n// Helper to clear overlays for a specific feature\r\nfunction clearPolygonOverlays(feature, mapRef) {\r\n  if (feature && feature._segmentOverlays) {\r\n    feature._segmentOverlays.forEach(overlay => {\r\n      if (mapRef.current) mapRef.current.removeOverlay(overlay);\r\n    });\r\n    feature._segmentOverlays = [];\r\n  }\r\n}\r\n\r\n// Flip vertically and remark segments/lines\r\nfunction flipFeatureVertically(feature, mapRef) {\r\n  clearPolygonOverlays(feature, mapRef);\r\n  const geom = feature.getGeometry();\r\n  let coords, ys, axis, flipped;\r\n\r\n  if (geom instanceof Polygon) {\r\n    coords = geom.getCoordinates()[0];\r\n    ys = coords.map(c => c[1]);\r\n    axis = (Math.min(...ys) + Math.max(...ys)) / 2;\r\n    flipped = coords.map(([x, y]) => [x, axis - (y - axis)]);\r\n    // Ensure closed ring for polygons\r\n    if (\r\n      flipped.length > 1 &&\r\n      (flipped[0][0] !== flipped[flipped.length - 1][0] ||\r\n        flipped[0][1] !== flipped[flipped.length - 1][1])\r\n    ) {\r\n      flipped[flipped.length - 1] = [...flipped[0]];\r\n    }\r\n    geom.setCoordinates([flipped]);\r\n    // Remark polygon segments\r\n    if (mapRef.current && mapRef.current.remarkPolygonSegments) {\r\n      mapRef.current.remarkPolygonSegments(feature);\r\n    }\r\n    return { prevCoords: coords, newCoords: flipped };\r\n  } else if (geom instanceof LineString) {\r\n    coords = geom.getCoordinates();\r\n    ys = coords.map(c => c[1]);\r\n    axis = (Math.min(...ys) + Math.max(...ys)) / 2;\r\n    flipped = coords.map(([x, y]) => [x, axis - (y - axis)]);\r\n    geom.setCoordinates(flipped);\r\n    // Remark line segments\r\n    if (mapRef.current && mapRef.current.remarkLineSegments) {\r\n      clearPolygonOverlays(feature, mapRef);\r\n      mapRef.current.remarkLineSegments(feature);\r\n    }\r\n    return { prevCoords: coords, newCoords: flipped };\r\n  }\r\n  return null;\r\n}\r\n\r\nexport default function FlipVertButton({ selectedFeature, mapRef, addHistoryAction }) {\r\n  function handleFlipVert() {\r\n    if (selectedFeature) {\r\n      const geom = selectedFeature.getGeometry();\r\n      let prevCoords, newCoords;\r\n      if (geom instanceof Polygon) {\r\n        prevCoords = geom.getCoordinates()[0].map(c => [...c]);\r\n      } else if (geom instanceof LineString) {\r\n        prevCoords = geom.getCoordinates().map(c => [...c]);\r\n      }\r\n      const result = flipFeatureVertically(selectedFeature, mapRef);\r\n      if (result && addHistoryAction) {\r\n        addHistoryAction({\r\n          type: 'flip-vertical',\r\n          featureId: selectedFeature.getId && selectedFeature.getId(),\r\n          prevCoords: prevCoords,\r\n          newCoords: result.newCoords,\r\n        });\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"map-button\" onClick={handleFlipVert}>\r\n      FlipVert\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}