{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ncarl\\\\Desktop\\\\sketch\\\\openlayers-react-map\\\\src\\\\map-actions\\\\DeleteGeo.jsx\";\nimport React from \"react\";\nimport GeoJSON from \"ol/format/GeoJSON\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DeleteGeo({\n  selectedFeature,\n  vectorSourceRef,\n  setSelectedFeature,\n  addHistoryAction,\n  clearPolygonOverlays,\n  mapRef\n}) {\n  const handleDelete = () => {\n    if (selectedFeature && vectorSourceRef.current) {\n      // Clear measurement overlays for this feature\n      if (clearPolygonOverlays && mapRef) {\n        clearPolygonOverlays(selectedFeature, mapRef);\n      }\n      // Serialize the feature for undo\n      const geojson = new GeoJSON().writeFeatureObject(selectedFeature);\n      vectorSourceRef.current.removeFeature(selectedFeature);\n      setSelectedFeature(null);\n      addHistoryAction({\n        type: \"delete-geo\",\n        featureId: selectedFeature.getId(),\n        geojson\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    title: \"Delete Selected Geo\",\n    className: \"map-button\",\n    disabled: !selectedFeature,\n    onClick: handleDelete,\n    children: \"Delete Selected Geo\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_c = DeleteGeo;\nvar _c;\n$RefreshReg$(_c, \"DeleteGeo\");","map":{"version":3,"names":["React","GeoJSON","jsxDEV","_jsxDEV","DeleteGeo","selectedFeature","vectorSourceRef","setSelectedFeature","addHistoryAction","clearPolygonOverlays","mapRef","handleDelete","current","geojson","writeFeatureObject","removeFeature","type","featureId","getId","title","className","disabled","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ncarl/Desktop/sketch/openlayers-react-map/src/map-actions/DeleteGeo.jsx"],"sourcesContent":["import React from \"react\";\r\nimport GeoJSON from \"ol/format/GeoJSON\";\r\n\r\nexport default function DeleteGeo({ selectedFeature, vectorSourceRef, setSelectedFeature, addHistoryAction, clearPolygonOverlays, mapRef }) {\r\n  const handleDelete = () => {\r\n    if (selectedFeature && vectorSourceRef.current) {\r\n      // Clear measurement overlays for this feature\r\n      if (clearPolygonOverlays && mapRef) {\r\n        clearPolygonOverlays(selectedFeature, mapRef);\r\n      }\r\n      // Serialize the feature for undo\r\n      const geojson = new GeoJSON().writeFeatureObject(selectedFeature);\r\n      vectorSourceRef.current.removeFeature(selectedFeature);\r\n      setSelectedFeature(null);\r\n\r\n      addHistoryAction({\r\n        type: \"delete-geo\",\r\n        featureId: selectedFeature.getId(),\r\n        geojson,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <button\r\n      title=\"Delete Selected Geo\"\r\n      className=\"map-button\"\r\n      disabled={!selectedFeature}\r\n      onClick={handleDelete}\r\n    >\r\n      Delete Selected Geo\r\n    </button>\r\n  );\r\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,SAASA,CAAC;EAAEC,eAAe;EAAEC,eAAe;EAAEC,kBAAkB;EAAEC,gBAAgB;EAAEC,oBAAoB;EAAEC;AAAO,CAAC,EAAE;EAC1I,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAIN,eAAe,IAAIC,eAAe,CAACM,OAAO,EAAE;MAC9C;MACA,IAAIH,oBAAoB,IAAIC,MAAM,EAAE;QAClCD,oBAAoB,CAACJ,eAAe,EAAEK,MAAM,CAAC;MAC/C;MACA;MACA,MAAMG,OAAO,GAAG,IAAIZ,OAAO,CAAC,CAAC,CAACa,kBAAkB,CAACT,eAAe,CAAC;MACjEC,eAAe,CAACM,OAAO,CAACG,aAAa,CAACV,eAAe,CAAC;MACtDE,kBAAkB,CAAC,IAAI,CAAC;MAExBC,gBAAgB,CAAC;QACfQ,IAAI,EAAE,YAAY;QAClBC,SAAS,EAAEZ,eAAe,CAACa,KAAK,CAAC,CAAC;QAClCL;MACF,CAAC,CAAC;IACJ;EACF,CAAC;EAED,oBACEV,OAAA;IACEgB,KAAK,EAAC,qBAAqB;IAC3BC,SAAS,EAAC,YAAY;IACtBC,QAAQ,EAAE,CAAChB,eAAgB;IAC3BiB,OAAO,EAAEX,YAAa;IAAAY,QAAA,EACvB;EAED;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAEb;AAACC,EAAA,GA9BuBxB,SAAS;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}