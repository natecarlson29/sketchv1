{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, { beginPathInstruction, strokeInstruction } from './Instruction.js';\nimport { defaultLineDash, defaultLineDashOffset } from '../canvas.js';\nvar CanvasLineStringBuilder = /** @class */function (_super) {\n  __extends(CanvasLineStringBuilder, _super);\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  function CanvasLineStringBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n    return _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n  }\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  CanvasLineStringBuilder.prototype.drawFlatCoordinates_ = function (flatCoordinates, offset, end, stride) {\n    var myBegin = this.coordinates.length;\n    var myEnd = this.appendFlatLineCoordinates(flatCoordinates, offset, end, stride, false, false);\n    var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  };\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  CanvasLineStringBuilder.prototype.drawLineString = function (lineStringGeometry, feature) {\n    var state = this.state;\n    var strokeStyle = state.strokeStyle;\n    var lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push([CanvasInstruction.SET_STROKE_STYLE, state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin, state.miterLimit, defaultLineDash, defaultLineDashOffset], beginPathInstruction);\n    var flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    var stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  };\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  CanvasLineStringBuilder.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) {\n    var state = this.state;\n    var strokeStyle = state.strokeStyle;\n    var lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push([CanvasInstruction.SET_STROKE_STYLE, state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin, state.miterLimit, state.lineDash, state.lineDashOffset], beginPathInstruction);\n    var ends = multiLineStringGeometry.getEnds();\n    var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    var stride = multiLineStringGeometry.getStride();\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(flatCoordinates, offset, /** @type {number} */ends[i], stride);\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  };\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  CanvasLineStringBuilder.prototype.finish = function () {\n    var state = this.state;\n    if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return _super.prototype.finish.call(this);\n  };\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  CanvasLineStringBuilder.prototype.applyStroke = function (state) {\n    if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    _super.prototype.applyStroke.call(this, state);\n    this.instructions.push(beginPathInstruction);\n  };\n  return CanvasLineStringBuilder;\n}(CanvasBuilder);\nexport default CanvasLineStringBuilder;","map":{"version":3,"names":["CanvasBuilder","CanvasInstruction","beginPathInstruction","strokeInstruction","defaultLineDash","defaultLineDashOffset","CanvasLineStringBuilder","_super","__extends","tolerance","maxExtent","resolution","pixelRatio","call","prototype","drawFlatCoordinates_","flatCoordinates","offset","end","stride","myBegin","coordinates","length","myEnd","appendFlatLineCoordinates","moveToLineToInstruction","MOVE_TO_LINE_TO","instructions","push","hitDetectionInstructions","drawLineString","lineStringGeometry","feature","state","strokeStyle","lineWidth","undefined","updateStrokeStyle","applyStroke","beginGeometry","SET_STROKE_STYLE","lineCap","lineJoin","miterLimit","getFlatCoordinates","getStride","endGeometry","drawMultiLineString","multiLineStringGeometry","lineDash","lineDashOffset","ends","getEnds","i","ii","finish","lastStroke","reverseHitDetectionInstructions"],"sources":["C:\\Users\\ncarl\\Desktop\\sketch\\openlayers-react-map\\node_modules\\ol\\src\\render\\canvas\\LineStringBuilder.js"],"sourcesContent":["/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}