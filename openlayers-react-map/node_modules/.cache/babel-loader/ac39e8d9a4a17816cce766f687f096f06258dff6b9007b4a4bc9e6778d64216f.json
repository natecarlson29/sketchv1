{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport { assert } from '../asserts.js';\nimport { assign, clear } from '../obj.js';\nimport { getIntersection } from '../extent.js';\nimport { getUid } from '../util.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nvar GroupEvent = /** @class */function (_super) {\n  __extends(GroupEvent, _super);\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  function GroupEvent(type, layer) {\n    var _this = _super.call(this, type) || this;\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    _this.layer = layer;\n    return _this;\n  }\n  return GroupEvent;\n}(Event);\nexport { GroupEvent };\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  LAYERS: 'layers'\n};\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nvar LayerGroup = /** @class */function (_super) {\n  __extends(LayerGroup, _super);\n  /**\n   * @param {Options} [opt_options] Layer options.\n   */\n  function LayerGroup(opt_options) {\n    var _this = this;\n    var options = opt_options || {};\n    var baseOptions = /** @type {Options} */assign({}, options);\n    delete baseOptions.layers;\n    var layers = options.layers;\n    _this = _super.call(this, baseOptions) || this;\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    _this.on;\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    _this.once;\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    _this.un;\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    _this.layersListenerKeys_ = [];\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    _this.listenerKeys_ = {};\n    _this.addChangeListener(Property.LAYERS, _this.handleLayersChanged_);\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {\n          unique: true\n        });\n      } else {\n        assert(typeof (/** @type {?} */layers.getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {\n        unique: true\n      });\n    }\n    _this.setLayers(layers);\n    return _this;\n  }\n  /**\n   * @private\n   */\n  LayerGroup.prototype.handleLayerChange_ = function () {\n    this.changed();\n  };\n  /**\n   * @private\n   */\n  LayerGroup.prototype.handleLayersChanged_ = function () {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n    var layers = this.getLayers();\n    this.layersListenerKeys_.push(listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this), listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this));\n    for (var id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n    var layersArray = layers.getArray();\n    for (var i = 0, ii = layersArray.length; i < ii; i++) {\n      var layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  };\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  LayerGroup.prototype.registerLayerListeners_ = function (layer) {\n    var listenerKeys = [listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this), listen(layer, EventType.CHANGE, this.handleLayerChange_, this)];\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(listen(layer, 'addlayer', this.handleLayerGroupAdd_, this), listen(layer, 'removelayer', this.handleLayerGroupRemove_, this));\n    }\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  };\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  LayerGroup.prototype.handleLayerGroupAdd_ = function (event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  };\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  LayerGroup.prototype.handleLayerGroupRemove_ = function (event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  };\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  LayerGroup.prototype.handleLayersAdd_ = function (collectionEvent) {\n    var layer = /** @type {import(\"./Base.js\").default} */collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  };\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  LayerGroup.prototype.handleLayersRemove_ = function (collectionEvent) {\n    var layer = /** @type {import(\"./Base.js\").default} */collectionEvent.element;\n    var key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  };\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  LayerGroup.prototype.getLayers = function () {\n    return /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */this.get(Property.LAYERS);\n  };\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  LayerGroup.prototype.setLayers = function (layers) {\n    var collection = this.getLayers();\n    if (collection) {\n      var currentLayers = collection.getArray();\n      for (var i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n    this.set(Property.LAYERS, layers);\n  };\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  LayerGroup.prototype.getLayersArray = function (opt_array) {\n    var array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  };\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If opt_states is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  LayerGroup.prototype.getLayerStatesArray = function (opt_states) {\n    var states = opt_states !== undefined ? opt_states : [];\n    var pos = states.length;\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n    var ownLayerState = this.getLayerState();\n    var defaultZIndex = ownLayerState.zIndex;\n    if (!opt_states && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (var i = pos, ii = states.length; i < ii; i++) {\n      var layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(layerState.maxResolution, ownLayerState.maxResolution);\n      layerState.minResolution = Math.max(layerState.minResolution, ownLayerState.minResolution);\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n    return states;\n  };\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  LayerGroup.prototype.getSourceState = function () {\n    return 'ready';\n  };\n  return LayerGroup;\n}(BaseLayer);\nexport default LayerGroup;","map":{"version":3,"names":["BaseLayer","Collection","CollectionEventType","Event","EventType","ObjectEventType","assert","assign","clear","getIntersection","getUid","listen","unlistenByKey","GroupEvent","_super","__extends","type","layer","_this","call","Property","LAYERS","LayerGroup","opt_options","options","baseOptions","layers","on","once","un","layersListenerKeys_","listenerKeys_","addChangeListener","handleLayersChanged_","Array","isArray","slice","unique","getArray","undefined","setLayers","prototype","handleLayerChange_","changed","forEach","length","getLayers","push","ADD","handleLayersAdd_","REMOVE","handleLayersRemove_","id","layersArray","i","ii","registerLayerListeners_","dispatchEvent","listenerKeys","PROPERTYCHANGE","CHANGE","handleLayerGroupAdd_","handleLayerGroupRemove_","event","collectionEvent","element","key","get","collection","currentLayers","set","getLayersArray","opt_array","array","getLayerStatesArray","opt_states","states","pos","ownLayerState","getLayerState","defaultZIndex","zIndex","layerState","opacity","visible","maxResolution","Math","min","minResolution","max","minZoom","maxZoom","extent","getSourceState"],"sources":["C:\\Users\\ncarl\\Desktop\\sketch\\openlayers-react-map\\node_modules\\ol\\src\\layer\\Group.js"],"sourcesContent":["/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {assign, clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [opt_options] Layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this)\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (\n      collectionEvent.element\n    );\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (\n      collectionEvent.element\n    );\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If opt_states is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states !== undefined ? opt_states : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!opt_states && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;;;AAGA,OAAOA,SAAS,MAAM,WAAW;AACjC,OAAOC,UAAU,MAAM,kBAAkB;AACzC,OAAOC,mBAAmB,MAAM,2BAA2B;AAC3D,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,eAAe,MAAM,uBAAuB;AACnD,SAAQC,MAAM,QAAO,eAAe;AACpC,SAAQC,MAAM,EAAEC,KAAK,QAAO,WAAW;AACvC,SAAQC,eAAe,QAAO,cAAc;AAC5C,SAAQC,MAAM,QAAO,YAAY;AACjC,SAAQC,MAAM,EAAEC,aAAa,QAAO,cAAc;AAElD;;;AAIA;;;;;;AAMA,IAAAC,UAAA,0BAAAC,MAAA;EAAgCC,SAAA,CAAAF,UAAA,EAAAC,MAAA;EAC9B;;;;EAIA,SAAAD,WAAYG,IAAI,EAAEC,KAAK;IAAvB,IAAAC,KAAA,GACEJ,MAAA,CAAAK,IAAA,OAAMH,IAAI,CAAC;IAEX;;;;;IAKAE,KAAI,CAACD,KAAK,GAAGA,KAAK;;EACpB;EACF,OAAAJ,UAAC;AAAD,CAAC,CAf+BV,KAAK;;AAiBrC;;;;;;;AAQA;;;;;;;;;;;;;;;;;;;;;AAsBA;;;;AAIA,IAAMiB,QAAQ,GAAG;EACfC,MAAM,EAAE;CACT;AAED;;;;;;;;AAQA,IAAAC,UAAA,0BAAAR,MAAA;EAAyBC,SAAA,CAAAO,UAAA,EAAAR,MAAA;EACvB;;;EAGA,SAAAQ,WAAYC,WAAW;IAAvB,IAAAL,KAAA;IACE,IAAMM,OAAO,GAAGD,WAAW,IAAI,EAAE;IACjC,IAAME,WAAW,GAAG,sBAAwBlB,MAAM,CAAC,EAAE,EAAEiB,OAAO,CAAE;IAChE,OAAOC,WAAW,CAACC,MAAM;IAEzB,IAAIA,MAAM,GAAGF,OAAO,CAACE,MAAM;YAE3BZ,MAAA,CAAAK,IAAA,OAAMM,WAAW,CAAC;IAElB;;;IAGAP,KAAI,CAACS,EAAE;IAEP;;;IAGAT,KAAI,CAACU,IAAI;IAET;;;IAGAV,KAAI,CAACW,EAAE;IAEP;;;;IAIAX,KAAI,CAACY,mBAAmB,GAAG,EAAE;IAE7B;;;;IAIAZ,KAAI,CAACa,aAAa,GAAG,EAAE;IAEvBb,KAAI,CAACc,iBAAiB,CAACZ,QAAQ,CAACC,MAAM,EAAEH,KAAI,CAACe,oBAAoB,CAAC;IAElE,IAAIP,MAAM,EAAE;MACV,IAAIQ,KAAK,CAACC,OAAO,CAACT,MAAM,CAAC,EAAE;QACzBA,MAAM,GAAG,IAAIzB,UAAU,CAACyB,MAAM,CAACU,KAAK,EAAE,EAAE;UAACC,MAAM,EAAE;QAAI,CAAC,CAAC;OACxD,MAAM;QACL/B,MAAM,CAAC,QAAQ,gBAAkBoB,MAAM,CAAEY,QAAQ,CAAC,KAAK,UAAU,EAAE,EAAE,CAAC,CAAC,CAAC;;KAE3E,MAAM;MACLZ,MAAM,GAAG,IAAIzB,UAAU,CAACsC,SAAS,EAAE;QAACF,MAAM,EAAE;MAAI,CAAC,CAAC;;IAGpDnB,KAAI,CAACsB,SAAS,CAACd,MAAM,CAAC;;EACxB;EAEA;;;EAGAJ,UAAA,CAAAmB,SAAA,CAAAC,kBAAkB,GAAlB;IACE,IAAI,CAACC,OAAO,EAAE;EAChB,CAAC;EAED;;;EAGArB,UAAA,CAAAmB,SAAA,CAAAR,oBAAoB,GAApB;IACE,IAAI,CAACH,mBAAmB,CAACc,OAAO,CAAChC,aAAa,CAAC;IAC/C,IAAI,CAACkB,mBAAmB,CAACe,MAAM,GAAG,CAAC;IAEnC,IAAMnB,MAAM,GAAG,IAAI,CAACoB,SAAS,EAAE;IAC/B,IAAI,CAAChB,mBAAmB,CAACiB,IAAI,CAC3BpC,MAAM,CAACe,MAAM,EAAExB,mBAAmB,CAAC8C,GAAG,EAAE,IAAI,CAACC,gBAAgB,EAAE,IAAI,CAAC,EACpEtC,MAAM,CAACe,MAAM,EAAExB,mBAAmB,CAACgD,MAAM,EAAE,IAAI,CAACC,mBAAmB,EAAE,IAAI,CAAC,CAC3E;IAED,KAAK,IAAMC,EAAE,IAAI,IAAI,CAACrB,aAAa,EAAE;MACnC,IAAI,CAACA,aAAa,CAACqB,EAAE,CAAC,CAACR,OAAO,CAAChC,aAAa,CAAC;;IAE/CJ,KAAK,CAAC,IAAI,CAACuB,aAAa,CAAC;IAEzB,IAAMsB,WAAW,GAAG3B,MAAM,CAACY,QAAQ,EAAE;IACrC,KAAK,IAAIgB,CAAC,GAAG,CAAC,EAAEC,EAAE,GAAGF,WAAW,CAACR,MAAM,EAAES,CAAC,GAAGC,EAAE,EAAED,CAAC,EAAE,EAAE;MACpD,IAAMrC,KAAK,GAAGoC,WAAW,CAACC,CAAC,CAAC;MAC5B,IAAI,CAACE,uBAAuB,CAACvC,KAAK,CAAC;MACnC,IAAI,CAACwC,aAAa,CAAC,IAAI5C,UAAU,CAAC,UAAU,EAAEI,KAAK,CAAC,CAAC;;IAEvD,IAAI,CAAC0B,OAAO,EAAE;EAChB,CAAC;EAED;;;EAGArB,UAAA,CAAAmB,SAAA,CAAAe,uBAAuB,GAAvB,UAAwBvC,KAAK;IAC3B,IAAMyC,YAAY,GAAG,CACnB/C,MAAM,CACJM,KAAK,EACLZ,eAAe,CAACsD,cAAc,EAC9B,IAAI,CAACjB,kBAAkB,EACvB,IAAI,CACL,EACD/B,MAAM,CAACM,KAAK,EAAEb,SAAS,CAACwD,MAAM,EAAE,IAAI,CAAClB,kBAAkB,EAAE,IAAI,CAAC,CAC/D;IAED,IAAIzB,KAAK,YAAYK,UAAU,EAAE;MAC/BoC,YAAY,CAACX,IAAI,CACfpC,MAAM,CAACM,KAAK,EAAE,UAAU,EAAE,IAAI,CAAC4C,oBAAoB,EAAE,IAAI,CAAC,EAC1DlD,MAAM,CAACM,KAAK,EAAE,aAAa,EAAE,IAAI,CAAC6C,uBAAuB,EAAE,IAAI,CAAC,CACjE;;IAGH,IAAI,CAAC/B,aAAa,CAACrB,MAAM,CAACO,KAAK,CAAC,CAAC,GAAGyC,YAAY;EAClD,CAAC;EAED;;;EAGApC,UAAA,CAAAmB,SAAA,CAAAoB,oBAAoB,GAApB,UAAqBE,KAAK;IACxB,IAAI,CAACN,aAAa,CAAC,IAAI5C,UAAU,CAAC,UAAU,EAAEkD,KAAK,CAAC9C,KAAK,CAAC,CAAC;EAC7D,CAAC;EAED;;;EAGAK,UAAA,CAAAmB,SAAA,CAAAqB,uBAAuB,GAAvB,UAAwBC,KAAK;IAC3B,IAAI,CAACN,aAAa,CAAC,IAAI5C,UAAU,CAAC,aAAa,EAAEkD,KAAK,CAAC9C,KAAK,CAAC,CAAC;EAChE,CAAC;EAED;;;;EAIAK,UAAA,CAAAmB,SAAA,CAAAQ,gBAAgB,GAAhB,UAAiBe,eAAe;IAC9B,IAAM/C,KAAK,GAAG,0CACZ+C,eAAe,CAACC,OACjB;IACD,IAAI,CAACT,uBAAuB,CAACvC,KAAK,CAAC;IACnC,IAAI,CAACwC,aAAa,CAAC,IAAI5C,UAAU,CAAC,UAAU,EAAEI,KAAK,CAAC,CAAC;IACrD,IAAI,CAAC0B,OAAO,EAAE;EAChB,CAAC;EAED;;;;EAIArB,UAAA,CAAAmB,SAAA,CAAAU,mBAAmB,GAAnB,UAAoBa,eAAe;IACjC,IAAM/C,KAAK,GAAG,0CACZ+C,eAAe,CAACC,OACjB;IACD,IAAMC,GAAG,GAAGxD,MAAM,CAACO,KAAK,CAAC;IACzB,IAAI,CAACc,aAAa,CAACmC,GAAG,CAAC,CAACtB,OAAO,CAAChC,aAAa,CAAC;IAC9C,OAAO,IAAI,CAACmB,aAAa,CAACmC,GAAG,CAAC;IAC9B,IAAI,CAACT,aAAa,CAAC,IAAI5C,UAAU,CAAC,aAAa,EAAEI,KAAK,CAAC,CAAC;IACxD,IAAI,CAAC0B,OAAO,EAAE;EAChB,CAAC;EAED;;;;;;;;EAQArB,UAAA,CAAAmB,SAAA,CAAAK,SAAS,GAAT;IACE,OAAO,+EACL,IAAI,CAACqB,GAAG,CAAC/C,QAAQ,CAACC,MAAM,CAAC;EAE7B,CAAC;EAED;;;;;;;;EAQAC,UAAA,CAAAmB,SAAA,CAAAD,SAAS,GAAT,UAAUd,MAAM;IACd,IAAM0C,UAAU,GAAG,IAAI,CAACtB,SAAS,EAAE;IACnC,IAAIsB,UAAU,EAAE;MACd,IAAMC,aAAa,GAAGD,UAAU,CAAC9B,QAAQ,EAAE;MAC3C,KAAK,IAAIgB,CAAC,GAAG,CAAC,EAAEC,EAAE,GAAGc,aAAa,CAACxB,MAAM,EAAES,CAAC,GAAGC,EAAE,EAAE,EAAED,CAAC,EAAE;QACtD,IAAI,CAACG,aAAa,CAAC,IAAI5C,UAAU,CAAC,aAAa,EAAEwD,aAAa,CAACf,CAAC,CAAC,CAAC,CAAC;;;IAIvE,IAAI,CAACgB,GAAG,CAAClD,QAAQ,CAACC,MAAM,EAAEK,MAAM,CAAC;EACnC,CAAC;EAED;;;;EAIAJ,UAAA,CAAAmB,SAAA,CAAA8B,cAAc,GAAd,UAAeC,SAAS;IACtB,IAAMC,KAAK,GAAGD,SAAS,KAAKjC,SAAS,GAAGiC,SAAS,GAAG,EAAE;IACtD,IAAI,CAAC1B,SAAS,EAAE,CAACF,OAAO,CAAC,UAAU3B,KAAK;MACtCA,KAAK,CAACsD,cAAc,CAACE,KAAK,CAAC;IAC7B,CAAC,CAAC;IACF,OAAOA,KAAK;EACd,CAAC;EAED;;;;;;;;;EASAnD,UAAA,CAAAmB,SAAA,CAAAiC,mBAAmB,GAAnB,UAAoBC,UAAU;IAC5B,IAAMC,MAAM,GAAGD,UAAU,KAAKpC,SAAS,GAAGoC,UAAU,GAAG,EAAE;IACzD,IAAME,GAAG,GAAGD,MAAM,CAAC/B,MAAM;IAEzB,IAAI,CAACC,SAAS,EAAE,CAACF,OAAO,CAAC,UAAU3B,KAAK;MACtCA,KAAK,CAACyD,mBAAmB,CAACE,MAAM,CAAC;IACnC,CAAC,CAAC;IAEF,IAAME,aAAa,GAAG,IAAI,CAACC,aAAa,EAAE;IAC1C,IAAIC,aAAa,GAAGF,aAAa,CAACG,MAAM;IACxC,IAAI,CAACN,UAAU,IAAIG,aAAa,CAACG,MAAM,KAAK1C,SAAS,EAAE;MACrDyC,aAAa,GAAG,CAAC;;IAEnB,KAAK,IAAI1B,CAAC,GAAGuB,GAAG,EAAEtB,EAAE,GAAGqB,MAAM,CAAC/B,MAAM,EAAES,CAAC,GAAGC,EAAE,EAAED,CAAC,EAAE,EAAE;MACjD,IAAM4B,UAAU,GAAGN,MAAM,CAACtB,CAAC,CAAC;MAC5B4B,UAAU,CAACC,OAAO,IAAIL,aAAa,CAACK,OAAO;MAC3CD,UAAU,CAACE,OAAO,GAAGF,UAAU,CAACE,OAAO,IAAIN,aAAa,CAACM,OAAO;MAChEF,UAAU,CAACG,aAAa,GAAGC,IAAI,CAACC,GAAG,CACjCL,UAAU,CAACG,aAAa,EACxBP,aAAa,CAACO,aAAa,CAC5B;MACDH,UAAU,CAACM,aAAa,GAAGF,IAAI,CAACG,GAAG,CACjCP,UAAU,CAACM,aAAa,EACxBV,aAAa,CAACU,aAAa,CAC5B;MACDN,UAAU,CAACQ,OAAO,GAAGJ,IAAI,CAACG,GAAG,CAACP,UAAU,CAACQ,OAAO,EAAEZ,aAAa,CAACY,OAAO,CAAC;MACxER,UAAU,CAACS,OAAO,GAAGL,IAAI,CAACC,GAAG,CAACL,UAAU,CAACS,OAAO,EAAEb,aAAa,CAACa,OAAO,CAAC;MACxE,IAAIb,aAAa,CAACc,MAAM,KAAKrD,SAAS,EAAE;QACtC,IAAI2C,UAAU,CAACU,MAAM,KAAKrD,SAAS,EAAE;UACnC2C,UAAU,CAACU,MAAM,GAAGnF,eAAe,CACjCyE,UAAU,CAACU,MAAM,EACjBd,aAAa,CAACc,MAAM,CACrB;SACF,MAAM;UACLV,UAAU,CAACU,MAAM,GAAGd,aAAa,CAACc,MAAM;;;MAG5C,IAAIV,UAAU,CAACD,MAAM,KAAK1C,SAAS,EAAE;QACnC2C,UAAU,CAACD,MAAM,GAAGD,aAAa;;;IAIrC,OAAOJ,MAAM;EACf,CAAC;EAED;;;EAGAtD,UAAA,CAAAmB,SAAA,CAAAoD,cAAc,GAAd;IACE,OAAO,OAAO;EAChB,CAAC;EACH,OAAAvE,UAAC;AAAD,CAAC,CArQwBtB,SAAS;AAuQlC,eAAesB,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}