{"ast":null,"code":"/**\n * @module ol/style/Circle\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport RegularShape from './RegularShape.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode\n */\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nvar CircleStyle = /** @class */function (_super) {\n  __extends(CircleStyle, _super);\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  function CircleStyle(opt_options) {\n    var options = opt_options ? opt_options : {};\n    return _super.call(this, {\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView: options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement: options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode\n    }) || this;\n  }\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  CircleStyle.prototype.clone = function () {\n    var scale = this.getScale();\n    var style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode()\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  };\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  CircleStyle.prototype.setRadius = function (radius) {\n    this.radius_ = radius;\n    this.render();\n  };\n  return CircleStyle;\n}(RegularShape);\nexport default CircleStyle;","map":{"version":3,"names":["RegularShape","CircleStyle","_super","__extends","opt_options","options","call","points","Infinity","fill","radius","stroke","scale","undefined","rotation","rotateWithView","displacement","declutterMode","prototype","clone","getScale","style","getFill","getStroke","getRadius","Array","isArray","slice","getRotation","getRotateWithView","getDisplacement","getDeclutterMode","setOpacity","getOpacity","setRadius","radius_","render"],"sources":["C:\\Users\\ncarl\\Desktop\\sketch\\openlayers-react-map\\node_modules\\ol\\src\\style\\Circle.js"],"sourcesContent":["/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;AAIA,OAAOA,YAAY,MAAM,mBAAmB;AAE5C;;;;;;;;;;;;;;AAeA;;;;;AAKA,IAAAC,WAAA,0BAAAC,MAAA;EAA0BC,SAAA,CAAAF,WAAA,EAAAC,MAAA;EACxB;;;EAGA,SAAAD,YAAYG,WAAW;IACrB,IAAMC,OAAO,GAAGD,WAAW,GAAGA,WAAW,GAAG,EAAE;WAE9CF,MAAA,CAAAI,IAAA,OAAM;MACJC,MAAM,EAAEC,QAAQ;MAChBC,IAAI,EAAEJ,OAAO,CAACI,IAAI;MAClBC,MAAM,EAAEL,OAAO,CAACK,MAAM;MACtBC,MAAM,EAAEN,OAAO,CAACM,MAAM;MACtBC,KAAK,EAAEP,OAAO,CAACO,KAAK,KAAKC,SAAS,GAAGR,OAAO,CAACO,KAAK,GAAG,CAAC;MACtDE,QAAQ,EAAET,OAAO,CAACS,QAAQ,KAAKD,SAAS,GAAGR,OAAO,CAACS,QAAQ,GAAG,CAAC;MAC/DC,cAAc,EACZV,OAAO,CAACU,cAAc,KAAKF,SAAS,GAAGR,OAAO,CAACU,cAAc,GAAG,KAAK;MACvEC,YAAY,EACVX,OAAO,CAACW,YAAY,KAAKH,SAAS,GAAGR,OAAO,CAACW,YAAY,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;MACpEC,aAAa,EAAEZ,OAAO,CAACY;KACxB,CAAC;EACJ;EAEA;;;;;EAKAhB,WAAA,CAAAiB,SAAA,CAAAC,KAAK,GAAL;IACE,IAAMP,KAAK,GAAG,IAAI,CAACQ,QAAQ,EAAE;IAC7B,IAAMC,KAAK,GAAG,IAAIpB,WAAW,CAAC;MAC5BQ,IAAI,EAAE,IAAI,CAACa,OAAO,EAAE,GAAG,IAAI,CAACA,OAAO,EAAE,CAACH,KAAK,EAAE,GAAGN,SAAS;MACzDF,MAAM,EAAE,IAAI,CAACY,SAAS,EAAE,GAAG,IAAI,CAACA,SAAS,EAAE,CAACJ,KAAK,EAAE,GAAGN,SAAS;MAC/DH,MAAM,EAAE,IAAI,CAACc,SAAS,EAAE;MACxBZ,KAAK,EAAEa,KAAK,CAACC,OAAO,CAACd,KAAK,CAAC,GAAGA,KAAK,CAACe,KAAK,EAAE,GAAGf,KAAK;MACnDE,QAAQ,EAAE,IAAI,CAACc,WAAW,EAAE;MAC5Bb,cAAc,EAAE,IAAI,CAACc,iBAAiB,EAAE;MACxCb,YAAY,EAAE,IAAI,CAACc,eAAe,EAAE,CAACH,KAAK,EAAE;MAC5CV,aAAa,EAAE,IAAI,CAACc,gBAAgB;KACrC,CAAC;IACFV,KAAK,CAACW,UAAU,CAAC,IAAI,CAACC,UAAU,EAAE,CAAC;IACnC,OAAOZ,KAAK;EACd,CAAC;EAED;;;;;;EAMApB,WAAA,CAAAiB,SAAA,CAAAgB,SAAS,GAAT,UAAUxB,MAAM;IACd,IAAI,CAACyB,OAAO,GAAGzB,MAAM;IACrB,IAAI,CAAC0B,MAAM,EAAE;EACf,CAAC;EACH,OAAAnC,WAAC;AAAD,CAAC,CArDyBD,YAAY;AAuDtC,eAAeC,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}