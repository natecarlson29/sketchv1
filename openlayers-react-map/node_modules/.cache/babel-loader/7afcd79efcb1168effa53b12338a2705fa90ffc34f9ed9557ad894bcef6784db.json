{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ncarl\\\\Desktop\\\\sketch\\\\openlayers-react-map\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport 'ol/ol.css';\nimport Map from 'ol/Map';\nimport View from 'ol/View';\nimport TileLayer from 'ol/layer/Tile';\nimport OSM from 'ol/source/OSM';\nimport VectorLayer from 'ol/layer/Vector';\nimport VectorSource from 'ol/source/Vector';\nimport Feature from 'ol/Feature';\nimport Polygon from 'ol/geom/Polygon';\nimport { fromLonLat } from 'ol/proj';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OFFSET = 2; // map units\n\nconst App = () => {\n  _s();\n  const [text, setText] = useState('');\n  const inputRef = useRef();\n  const mapRef = useRef();\n  const vectorSourceRef = useRef();\n  const polygonFeatureRef = useRef();\n  const [drawing, setDrawing] = useState(false);\n  useEffect(() => {\n    const vectorSource = new VectorSource();\n    vectorSourceRef.current = vectorSource;\n    const vectorLayer = new VectorLayer({\n      source: vectorSource\n    });\n    const map = new Map({\n      target: 'map',\n      layers: [new TileLayer({\n        source: new OSM()\n      }), vectorLayer],\n      view: new View({\n        center: fromLonLat([-95.87, 40.84]),\n        zoom: 24\n      })\n    });\n    mapRef.current = map;\n\n    // On map click, start a new polygon or add a vertex\n    map.on('singleclick', evt => {\n      const coord = evt.coordinate;\n      if (!drawing) {\n        // Start new polygon\n        const poly = new Polygon([[coord, coord]]);\n        const feature = new Feature(poly);\n        vectorSource.clear();\n        vectorSource.addFeature(feature);\n        polygonFeatureRef.current = feature;\n        setDrawing(true);\n      } else {\n        // Add vertex\n        const feature = polygonFeatureRef.current;\n        const poly = feature.getGeometry();\n        let coords = poly.getCoordinates()[0];\n        coords = [...coords.slice(0, -1), coord, coords[coords.length - 1]];\n        poly.setCoordinates([coords]);\n      }\n    });\n    function handleKeyDown(e) {\n      if (!drawing) return;\n      if (e.key === 'ArrowUp' || e.key === 'ArrowDown' || e.key === 'ArrowLeft' || e.key === 'ArrowRight') {\n        e.preventDefault();\n        const feature = polygonFeatureRef.current;\n        const poly = feature.getGeometry();\n        let coords = poly.getCoordinates()[0];\n        const last = coords[coords.length - 2] || coords[coords.length - 1];\n        let dx = 0,\n          dy = 0;\n        switch (e.key) {\n          case 'ArrowUp':\n            dy = OFFSET;\n            break;\n          case 'ArrowDown':\n            dy = -OFFSET;\n            break;\n          case 'ArrowLeft':\n            dx = -OFFSET;\n            break;\n          case 'ArrowRight':\n            dx = OFFSET;\n            break;\n          default:\n            return;\n        }\n        const newPt = [last[0] + dx, last[1] + dy];\n        coords = [...coords.slice(0, -1), newPt, coords[coords.length - 1]];\n        poly.setCoordinates([coords]);\n      }\n      // Finish polygon with Enter\n      if (e.key === 'Enter' && drawing) {\n        const feature = polygonFeatureRef.current;\n        const poly = feature.getGeometry();\n        let coords = poly.getCoordinates()[0];\n        // Close polygon\n        coords[coords.length - 1] = coords[0];\n        poly.setCoordinates([coords]);\n        setDrawing(false);\n      }\n    }\n    document.addEventListener('keydown', handleKeyDown);\n    return () => {\n      map.setTarget(null);\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [drawing]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      ref: inputRef,\n      type: \"text\",\n      value: text,\n      onChange: e => setText(e.target.value),\n      placeholder: \"Dimension\",\n      autoFocus: true,\n      style: {\n        position: 'absolute',\n        top: 20,\n        right: 20,\n        zIndex: 1000,\n        width: 300,\n        padding: 8,\n        fontSize: 16,\n        pointerEvents: 'auto'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"map\",\n      style: {\n        width: '100vw',\n        height: '100vh'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"hksbk5f6zPcz1nPVevZaXiMpzYY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Map","View","TileLayer","OSM","VectorLayer","VectorSource","Feature","Polygon","fromLonLat","jsxDEV","_jsxDEV","OFFSET","App","_s","text","setText","inputRef","mapRef","vectorSourceRef","polygonFeatureRef","drawing","setDrawing","vectorSource","current","vectorLayer","source","map","target","layers","view","center","zoom","on","evt","coord","coordinate","poly","feature","clear","addFeature","getGeometry","coords","getCoordinates","slice","length","setCoordinates","handleKeyDown","e","key","preventDefault","last","dx","dy","newPt","document","addEventListener","setTarget","removeEventListener","children","ref","type","value","onChange","placeholder","autoFocus","style","position","top","right","zIndex","width","padding","fontSize","pointerEvents","fileName","_jsxFileName","lineNumber","columnNumber","id","height","_c","$RefreshReg$"],"sources":["C:/Users/ncarl/Desktop/sketch/openlayers-react-map/src/App.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport 'ol/ol.css';\nimport Map from 'ol/Map';\nimport View from 'ol/View';\nimport TileLayer from 'ol/layer/Tile';\nimport OSM from 'ol/source/OSM';\nimport VectorLayer from 'ol/layer/Vector';\nimport VectorSource from 'ol/source/Vector';\nimport Feature from 'ol/Feature';\nimport Polygon from 'ol/geom/Polygon';\nimport { fromLonLat } from 'ol/proj';\n\nconst OFFSET = 2; // map units\n\nconst App = () => {\n  const [text, setText] = useState('');\n  const inputRef = useRef();\n  const mapRef = useRef();\n  const vectorSourceRef = useRef();\n  const polygonFeatureRef = useRef();\n  const [drawing, setDrawing] = useState(false);\n\n  useEffect(() => {\n    const vectorSource = new VectorSource();\n    vectorSourceRef.current = vectorSource;\n    const vectorLayer = new VectorLayer({ source: vectorSource });\n\n    const map = new Map({\n      target: 'map',\n      layers: [\n        new TileLayer({ source: new OSM() }),\n        vectorLayer,\n      ],\n      view: new View({\n        center: fromLonLat([-95.87, 40.84]),\n        zoom: 24\n      }),\n    });\n    mapRef.current = map;\n\n    // On map click, start a new polygon or add a vertex\n    map.on('singleclick', evt => {\n      const coord = evt.coordinate;\n      if (!drawing) {\n        // Start new polygon\n        const poly = new Polygon([[coord, coord]]);\n        const feature = new Feature(poly);\n        vectorSource.clear();\n        vectorSource.addFeature(feature);\n        polygonFeatureRef.current = feature;\n        setDrawing(true);\n      } else {\n        // Add vertex\n        const feature = polygonFeatureRef.current;\n        const poly = feature.getGeometry();\n        let coords = poly.getCoordinates()[0];\n        coords = [...coords.slice(0, -1), coord, coords[coords.length - 1]];\n        poly.setCoordinates([coords]);\n      }\n    });\n\n    function handleKeyDown(e) {\n      if (!drawing) return;\n      if (\n        e.key === 'ArrowUp' ||\n        e.key === 'ArrowDown' ||\n        e.key === 'ArrowLeft' ||\n        e.key === 'ArrowRight'\n      ) {\n        e.preventDefault();\n        const feature = polygonFeatureRef.current;\n        const poly = feature.getGeometry();\n        let coords = poly.getCoordinates()[0];\n        const last = coords[coords.length - 2] || coords[coords.length - 1];\n        let dx = 0, dy = 0;\n        switch (e.key) {\n          case 'ArrowUp': dy = OFFSET; break;\n          case 'ArrowDown': dy = -OFFSET; break;\n          case 'ArrowLeft': dx = -OFFSET; break;\n          case 'ArrowRight': dx = OFFSET; break;\n          default: return;\n        }\n        const newPt = [last[0] + dx, last[1] + dy];\n        coords = [...coords.slice(0, -1), newPt, coords[coords.length - 1]];\n        poly.setCoordinates([coords]);\n      }\n      // Finish polygon with Enter\n      if (e.key === 'Enter' && drawing) {\n        const feature = polygonFeatureRef.current;\n        const poly = feature.getGeometry();\n        let coords = poly.getCoordinates()[0];\n        // Close polygon\n        coords[coords.length - 1] = coords[0];\n        poly.setCoordinates([coords]);\n        setDrawing(false);\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      map.setTarget(null);\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [drawing]);\n\n  return (\n    <div>\n      <input\n        ref={inputRef}\n        type=\"text\"\n        value={text}\n        onChange={e => setText(e.target.value)}\n        placeholder=\"Dimension\"\n        autoFocus\n        style={{\n          position: 'absolute',\n          top: 20,\n          right: 20,\n          zIndex: 1000,\n          width: 300,\n          padding: 8,\n          fontSize: 16,\n          pointerEvents: 'auto',\n        }}\n      />\n      <div id=\"map\" style={{ width: '100vw', height: '100vh' }}></div>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}