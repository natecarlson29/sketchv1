{"ast":null,"code":"/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport { getUid } from '../util.js';\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nvar SIMPLIFY_TOLERANCE = 0.5;\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nvar GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry\n};\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  var tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return SIMPLIFY_TOLERANCE * resolution / pixelRatio;\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    var circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, opt_transform, opt_declutterBuilderGroup) {\n  var loading = false;\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    var imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(replayGroup, feature, style, squaredTolerance, opt_transform, opt_declutterBuilderGroup);\n  return loading;\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance, opt_transform, opt_declutterBuilderGroup) {\n  var geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  var simplifiedGeometry = geometry.simplifyTransformed(squaredTolerance, opt_transform);\n  var renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    var geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(replayGroup, simplifiedGeometry, style, feature, opt_declutterBuilderGroup);\n  }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == 'GeometryCollection') {\n    var geometries = /** @type {import(\"../geom/GeometryCollection.js\").default} */geometry.getGeometries();\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  var replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(/** @type {import(\"../geom/SimpleGeometry.js\").default} */geometry, feature, style.getRenderer(), style.getHitDetectionRenderer());\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n  var geometries = geometry.getGeometriesArray();\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    var geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(replayGroup, geometries[i], style, feature, opt_declutterBuilderGroup);\n  }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n  var strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), 'LineString');\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n  var strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), 'LineString');\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    var polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n  var imageStyle = style.getImage();\n  var textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  var declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    var imageBuilderGroup = builderGroup;\n    if (opt_declutterBuilderGroup) {\n      var declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = opt_declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          var imageReplay_1 = builderGroup.getBuilder(style.getZIndex(), 'Image');\n          imageReplay_1.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay_1.drawPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    var imageReplay = imageBuilderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    var textBuilderGroup = builderGroup;\n    if (opt_declutterBuilderGroup) {\n      textBuilderGroup = opt_declutterBuilderGroup;\n    }\n    var textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n  var imageStyle = style.getImage();\n  var textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  var declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    var imageBuilderGroup = builderGroup;\n    if (opt_declutterBuilderGroup) {\n      var declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = opt_declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          var imageReplay_2 = builderGroup.getBuilder(style.getZIndex(), 'Image');\n          imageReplay_2.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay_2.drawMultiPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    var imageReplay = imageBuilderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    var textBuilderGroup = builderGroup;\n    if (opt_declutterBuilderGroup) {\n      textBuilderGroup = opt_declutterBuilderGroup;\n    }\n    var textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    var polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}","map":{"version":3,"names":["ImageState","getUid","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","renderPointGeometry","renderLineStringGeometry","renderPolygonGeometry","renderMultiPointGeometry","renderMultiLineStringGeometry","renderMultiPolygonGeometry","renderGeometryCollectionGeometry","renderCircleGeometry","defaultOrder","feature1","feature2","parseInt","getSquaredTolerance","resolution","pixelRatio","tolerance","getTolerance","builderGroup","geometry","style","feature","opt_declutterBuilderGroup","fillStyle","getFill","strokeStyle","getStroke","circleReplay","getBuilder","getZIndex","setFillStrokeStyle","drawCircle","textStyle","getText","textReplay","setTextStyle","drawText","renderFeature","replayGroup","squaredTolerance","listener","opt_transform","loading","imageStyle","getImage","imageState","getImageState","LOADED","ERROR","unlistenImageChange","IDLE","load","listenImageChange","renderFeatureInternal","getGeometryFunction","simplifiedGeometry","simplifyTransformed","renderer","getRenderer","renderGeometry","geometryRenderer","getType","geometries","getGeometries","i","ii","length","replay","drawCustom","getHitDetectionRenderer","getGeometriesArray","lineStringReplay","drawLineString","drawMultiLineString","polygonReplay","drawMultiPolygon","declutterImageWithText","imageBuilderGroup","declutterMode","getDeclutterMode","imageReplay_1","setImageStyle","drawPoint","imageReplay","textBuilderGroup","imageReplay_2","drawMultiPoint","drawPolygon"],"sources":["C:\\Users\\ncarl\\Desktop\\sketch\\openlayers-react-map\\node_modules\\ol\\src\\renderer\\vector.js"],"sourcesContent":["/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    opt_transform,\n    opt_declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    opt_transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (opt_declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = opt_declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (opt_declutterBuilderGroup) {\n      textBuilderGroup = opt_declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (opt_declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = opt_declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawMultiPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (opt_declutterBuilderGroup) {\n      textBuilderGroup = opt_declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}