{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport { easeOut, linear } from '../easing.js';\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nvar Interaction = /** @class */function (_super) {\n  __extends(Interaction, _super);\n  /**\n   * @param {InteractionOptions} [opt_options] Options.\n   */\n  function Interaction(opt_options) {\n    var _this = _super.call(this) || this;\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    _this.on;\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    _this.once;\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    _this.un;\n    if (opt_options && opt_options.handleEvent) {\n      _this.handleEvent = opt_options.handleEvent;\n    }\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default|null}\n     */\n    _this.map_ = null;\n    _this.setActive(true);\n    return _this;\n  }\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  Interaction.prototype.getActive = function () {\n    return /** @type {boolean} */this.get(InteractionProperty.ACTIVE);\n  };\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default|null} Map.\n   * @api\n   */\n  Interaction.prototype.getMap = function () {\n    return this.map_;\n  };\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  Interaction.prototype.handleEvent = function (mapBrowserEvent) {\n    return true;\n  };\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  Interaction.prototype.setActive = function (active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  };\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\n   */\n  Interaction.prototype.setMap = function (map) {\n    this.map_ = map;\n  };\n  return Interaction;\n}(BaseObject);\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [opt_duration] Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  var currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    var center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: opt_duration !== undefined ? opt_duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center)\n    });\n  }\n}\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] Anchor coordinate in the user projection.\n * @param {number} [opt_duration] Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  var currentZoom = view.getZoom();\n  if (currentZoom === undefined) {\n    return;\n  }\n  var newZoom = view.getConstrainedZoom(currentZoom + delta);\n  var newResolution = view.getResolutionForZoom(newZoom);\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: opt_anchor,\n    duration: opt_duration !== undefined ? opt_duration : 250,\n    easing: easeOut\n  });\n}\nexport default Interaction;","map":{"version":3,"names":["BaseObject","InteractionProperty","easeOut","linear","Interaction","_super","__extends","opt_options","_this","call","on","once","un","handleEvent","map_","setActive","prototype","getActive","get","ACTIVE","getMap","mapBrowserEvent","active","set","setMap","map","pan","view","delta","opt_duration","currentCenter","getCenterInternal","center","animateInternal","duration","undefined","easing","getConstrainedCenter","zoomByDelta","opt_anchor","currentZoom","getZoom","newZoom","getConstrainedZoom","newResolution","getResolutionForZoom","getAnimating","cancelAnimations","animate","resolution","anchor"],"sources":["C:\\Users\\ncarl\\Desktop\\sketch\\openlayers-react-map\\node_modules\\ol\\src\\interaction\\Interaction.js"],"sourcesContent":["/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (opt_options && opt_options.handleEvent) {\n      this.handleEvent = opt_options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [opt_duration] Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: opt_duration !== undefined ? opt_duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] Anchor coordinate in the user projection.\n * @param {number} [opt_duration] Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: opt_anchor,\n    duration: opt_duration !== undefined ? opt_duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}