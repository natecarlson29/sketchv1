{"ast":null,"code":"import React from'react';import Polygon from'ol/geom/Polygon';import LineString from'ol/geom/LineString';import{FlipHorizontalIcon}from'../svg';// Helper to clear overlays for a specific feature\nimport{jsx as _jsx}from\"react/jsx-runtime\";function clearPolygonOverlays(feature,mapRef){if(feature&&feature._segmentOverlays){feature._segmentOverlays.forEach(overlay=>{if(mapRef.current)mapRef.current.removeOverlay(overlay);});feature._segmentOverlays=[];}}// Flip horizontally and remark segments/lines\nfunction flipFeatureHorizontally(feature,mapRef){clearPolygonOverlays(feature,mapRef);const geom=feature.getGeometry();let coords,xs,axis,flipped;if(geom instanceof Polygon){coords=geom.getCoordinates()[0];xs=coords.map(c=>c[0]);axis=(Math.min(...xs)+Math.max(...xs))/2;flipped=coords.map(_ref=>{let[x,y]=_ref;return[axis-(x-axis),y];});// Ensure closed ring for polygons\nif(flipped.length>1&&(flipped[0][0]!==flipped[flipped.length-1][0]||flipped[0][1]!==flipped[flipped.length-1][1])){flipped[flipped.length-1]=[...flipped[0]];}geom.setCoordinates([flipped]);// Remark polygon segments\nif(mapRef.current&&mapRef.current.createSegmentOverlays){mapRef.current.createSegmentOverlays(feature,mapRef);}return{prevCoords:coords,newCoords:flipped};}else if(geom instanceof LineString){coords=geom.getCoordinates();xs=coords.map(c=>c[0]);axis=(Math.min(...xs)+Math.max(...xs))/2;flipped=coords.map(_ref2=>{let[x,y]=_ref2;return[axis-(x-axis),y];});geom.setCoordinates(flipped);// Remark line segments\nif(mapRef.current&&mapRef.current.createSegmentOverlays){mapRef.current.createSegmentOverlays(feature,mapRef);}return{prevCoords:coords,newCoords:flipped};}return null;}export default function FlipHorizButton(_ref3){let{selectedFeature,mapRef,addHistoryAction}=_ref3;function handleFlipHoriz(){if(selectedFeature){const geom=selectedFeature.getGeometry();let prevCoords,newCoords;if(geom instanceof Polygon){prevCoords=geom.getCoordinates()[0].map(c=>[...c]);}else if(geom instanceof LineString){prevCoords=geom.getCoordinates().map(c=>[...c]);}const result=flipFeatureHorizontally(selectedFeature,mapRef);if(result&&addHistoryAction){addHistoryAction({type:'flip-horizontal',featureId:selectedFeature.getId&&selectedFeature.getId(),prevCoords:prevCoords,newCoords:result.newCoords});}}}return/*#__PURE__*/_jsx(\"button\",{title:\"Flip Horizontal\",className:\"map-button\",onClick:handleFlipHoriz,children:/*#__PURE__*/_jsx(FlipHorizontalIcon,{})});}","map":{"version":3,"names":["React","Polygon","LineString","FlipHorizontalIcon","jsx","_jsx","clearPolygonOverlays","feature","mapRef","_segmentOverlays","forEach","overlay","current","removeOverlay","flipFeatureHorizontally","geom","getGeometry","coords","xs","axis","flipped","getCoordinates","map","c","Math","min","max","_ref","x","y","length","setCoordinates","createSegmentOverlays","prevCoords","newCoords","_ref2","FlipHorizButton","_ref3","selectedFeature","addHistoryAction","handleFlipHoriz","result","type","featureId","getId","title","className","onClick","children"],"sources":["C:/Users/ncarl/Desktop/sketch/openlayers-react-map/src/map-actions/FlipHorizontal.jsx"],"sourcesContent":["import React from 'react';\r\nimport Polygon from 'ol/geom/Polygon';\r\nimport LineString from 'ol/geom/LineString';\r\n\r\nimport { FlipHorizontalIcon } from '../svg';\r\n\r\n// Helper to clear overlays for a specific feature\r\nfunction clearPolygonOverlays(feature, mapRef) {\r\n  if (feature && feature._segmentOverlays) {\r\n    feature._segmentOverlays.forEach(overlay => {\r\n      if (mapRef.current) mapRef.current.removeOverlay(overlay);\r\n    });\r\n    feature._segmentOverlays = [];\r\n  }\r\n}\r\n\r\n// Flip horizontally and remark segments/lines\r\nfunction flipFeatureHorizontally(feature, mapRef) {\r\n  clearPolygonOverlays(feature, mapRef);\r\n  const geom = feature.getGeometry();\r\n  let coords, xs, axis, flipped;\r\n\r\n  if (geom instanceof Polygon) {\r\n    coords = geom.getCoordinates()[0];\r\n    xs = coords.map(c => c[0]);\r\n    axis = (Math.min(...xs) + Math.max(...xs)) / 2;\r\n    flipped = coords.map(([x, y]) => [axis - (x - axis), y]);\r\n    // Ensure closed ring for polygons\r\n    if (\r\n      flipped.length > 1 &&\r\n      (flipped[0][0] !== flipped[flipped.length - 1][0] ||\r\n        flipped[0][1] !== flipped[flipped.length - 1][1])\r\n    ) {\r\n      flipped[flipped.length - 1] = [...flipped[0]];\r\n    }\r\n    geom.setCoordinates([flipped]);\r\n    // Remark polygon segments\r\n    if (mapRef.current && mapRef.current.createSegmentOverlays) {\r\n      mapRef.current.createSegmentOverlays(feature, mapRef);\r\n    }\r\n    return { prevCoords: coords, newCoords: flipped };\r\n  } else if (geom instanceof LineString) {\r\n    coords = geom.getCoordinates();\r\n    xs = coords.map(c => c[0]);\r\n    axis = (Math.min(...xs) + Math.max(...xs)) / 2;\r\n    flipped = coords.map(([x, y]) => [axis - (x - axis), y]);\r\n    geom.setCoordinates(flipped);\r\n    // Remark line segments\r\n    if (mapRef.current && mapRef.current.createSegmentOverlays) {\r\n      mapRef.current.createSegmentOverlays(feature, mapRef);\r\n    }\r\n    return { prevCoords: coords, newCoords: flipped };\r\n  }\r\n  return null;\r\n}\r\n\r\nexport default function FlipHorizButton({ selectedFeature, mapRef, addHistoryAction }) {\r\n  function handleFlipHoriz() {\r\n    if (selectedFeature) {\r\n      const geom = selectedFeature.getGeometry();\r\n      let prevCoords, newCoords;\r\n      if (geom instanceof Polygon) {\r\n        prevCoords = geom.getCoordinates()[0].map(c => [...c]);\r\n      } else if (geom instanceof LineString) {\r\n        prevCoords = geom.getCoordinates().map(c => [...c]);\r\n      }\r\n      const result = flipFeatureHorizontally(selectedFeature, mapRef);\r\n      if (result && addHistoryAction) {\r\n        addHistoryAction({\r\n          type: 'flip-horizontal',\r\n          featureId: selectedFeature.getId && selectedFeature.getId(),\r\n          prevCoords: prevCoords,\r\n          newCoords: result.newCoords,\r\n        });\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <button title=\"Flip Horizontal\" className=\"map-button\" onClick={handleFlipHoriz}>\r\n      <FlipHorizontalIcon />\r\n    </button>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}